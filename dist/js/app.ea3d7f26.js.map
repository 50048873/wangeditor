{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?059b","webpack:///./src/App.vue","webpack:///./src/views/About.vue?21c6","webpack:///./src/assets/tableMergeCell/tableMergeCell.js","webpack:///./src/assets/columnResizer/columnResizer.js","webpack:///./src/assets/tool.js","webpack:///src/views/About.vue","webpack:///./src/views/About.vue?f1da","webpack:///./src/views/About.vue","webpack:///./src/router/index.js","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?c650","webpack:///./src/views/About.vue?2fad"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticRenderFns","script","component","ref","on","getHtml","setHtml","staticClass","defaults","btnDisabledColor","onAddCol","TableMergeCell","tableEle","options","e","target","selectedCells","colorPicker","forEach","ele","style","backgroundColor","removeEventListener","colorChange","remove","removeClass","getSelectedCells","indexStart","indexEnd","rowspan","row","colspan","col","Array","from","index","setAttribute","display","cell","cellSpanProperty","getCellIndex","getCellSpanProperty","contextmenuCell","removeAttribute","color1","getComputedStyle","color","color2","colorToRgb","opts","dataset","console","log","textAlignLeft","textAlignCenter","textAlignRight","addBackgroundColor","delBackgroundColor","delTable","addRow","delRow","addCol","delCol","addTh","delTh","mergeCell","unMergeCell","menuEle","button","tableIsInTable","tagName","ready","cellStart","addClass","contains","cellEnd","highlightSelectedCells","selObj","getSelection","collapseToEnd","focusEle","focus","stopPropagation","preventDefault","document","createElement","classList","add","addEventListener","menuClick","menus","item","li","textContent","appendChild","body","clientX","clientY","top","left","handleMenuBtnMergeStatus","handleMenuBtnRowStatus","handleSomeMenuBtns","arr","outerHTML","res","join","event","clipboardData","setData","getData","split","pasteWithRule","assign","tBody","tBodies","rows","tableClassName","selectedCellClassName","maxRowCount","maxColCount","init","ELEMENT_NODE","Error","addFocusEle","addCellLocation","syncMaxRowAndColCount","addEvent","removeEvent","className","cells","children","childElementCount","selectedLastEle","click","removeProperty","parentNode","includes","querySelectorAll","isValid","selectedCellsIsValid","tr","childLen","cellStart_rowspan","getAttribute","cellEnd_rowspan","isInvalid","some","getIsMergedCellBool","firstTr","maxCount","Math","max","startRowIndex","endRowIndex","rowIndexArray","startColIndex","endColIndex","colIndexArray","isMergedCell","btn_merge","btn_unMerge","btn_addRow","btn_delRow","btn_delCol","getSelectedCellsByClassName","btn_textAlignLeft","btn_textAlignCenter","btn_textAlignRight","btn_addBackgroundColor","btn_delBackgroundColor","trLen","cellLen","relatedCellsArray","getRelatedMergedRowCells","getMergedColIndexArray","newRow","insertRow","insertCell","type","rowIndex","rowIsInMergedRow","willRowIndex","newCell","insertAdjacentHTML","cellIndex","rowLen","currentRowIndex","delFirstRow","delOtherRow","deleteRow","delEmptyTable","nextRow","nextCell","nextElementSibling","getRelatedMergedColCells","delFirstCol","delOtherCol","deleteCell","len","alert","th","innerHTML","td","textAlign","targetCells","resourceCells","lenT","lenR","cellT","cellR","spans","rowspanT","colspanT","m1","match","m2","rowspanR","colspanR","mousedown","removeSomeNoSelfIsClicked","mousemove","mouseup","tableClick","contextmenu","copy","paste","span","removeChild","colMinWidth","ColumnResizer","addResizeHandShank","setDefaultWidth","handshankCls","handshank","handshankHover","addSubline","diff","transform","firstRow","currentCol","getBoundingClientRect","width","calcWidth","newWidth","removeSubline","colsWidth","getColsWidth","setTableWidth","columnResizer","reset","subline","getDefaultWidth","colCount","average","tableWidth","firstRowCells","querySelector","map","Number","parseFloat","reduce","acc","cur","wangEditorTableExtend","mounted","$nextTick","tableObserve","methods","initTableInteraction","$refs","editor","tables","table","tableMergeCellInstance","tableColumnResizerInstance","callback","mutationsList","mutation","addedNodes","addedNode","observer","MutationObserver","observe","childList","subtree","beforeDestroy","destroy","mixins","initEditor","Vue","use","VueRouter","routes","path","About","router","Vuex","Store","state","mutations","actions","config","productionTip","store","render","h","App","$mount"],"mappings":"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","file":"js/app.ea3d7f26.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{attrs:{\"id\":\"nav\"}},[_c('router-link',{attrs:{\"to\":\"/\"}},[_vm._v(\"tableMergeCell\")])],1),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=9daf8a4e&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"editor\"}),_c('button',{attrs:{\"type\":\"button\",\"id\":\"btn1\"},on:{\"click\":_vm.getHtml}},[_vm._v(\"获取html\")]),_c('button',{attrs:{\"type\":\"button\",\"id\":\"btn2\"},on:{\"click\":_vm.setHtml}},[_vm._v(\"设置html\")]),_c('div',{ref:\"newHtml\",staticClass:\"newHtml\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable */\r\nconst defaults = {\r\n    btnDisabledColor: '#ddd', // 右键菜单禁用时的颜色\r\n    onAddCol: null,             // 添加列完成后回调\r\n}\r\n\r\nexport default class TableMergeCell {\r\n    constructor (tableEle, options = {}) {\r\n        this.opts = Object.assign({}, defaults, options)\r\n        this.tableEle = tableEle\r\n        this.tBody = tableEle.tBodies[0]\r\n        this.rows = this.tBody.rows\r\n        this.tableClassName = 'tableMergeCell'\r\n        this.menuEle = null\r\n        this.menus = [\r\n            /*{\r\n                name: '复制',\r\n                key: 'doCopy',\r\n            },\r\n            {\r\n                name: '粘贴',\r\n                key: 'doPaste',\r\n            },*/\r\n            {\r\n                name: '靠左',\r\n                key: 'textAlignLeft',\r\n            },\r\n            {\r\n                name: '居中',\r\n                key: 'textAlignCenter',\r\n            },\r\n            {\r\n                name: '靠右',\r\n                key: 'textAlignRight',\r\n            },\r\n            {\r\n                name: '设置背景色',\r\n                key: 'addBackgroundColor',\r\n            },\r\n            {\r\n                name: '删除背景色',\r\n                key: 'delBackgroundColor',\r\n            },\r\n            {\r\n                name: '添加行',\r\n                key: 'addRow',\r\n            },\r\n            {\r\n                name: '删除行',\r\n                key: 'delRow',\r\n            },\r\n            {\r\n                name: '添加列',\r\n                key: 'addCol',\r\n            },\r\n            {\r\n                name: '删除列',\r\n                key: 'delCol',\r\n            },\r\n            {\r\n                name: '设置表头',\r\n                key: 'addTh',\r\n            },\r\n            {\r\n                name: '取消表头',\r\n                key: 'delTh',\r\n            },\r\n            {\r\n                name: '合并单元格',\r\n                key: 'merge',\r\n            }, \r\n            {\r\n                name: '取消合并单元格',\r\n                key: 'unMerge',\r\n            },\r\n            {\r\n                name: '删除表格',\r\n                key: 'delTable',\r\n            },\r\n        ]\r\n        this.selectedCellClassName = 'tableMergeCell-selected'\r\n        this.ready = false\r\n        this.cellStart = null\r\n        this.cellEnd = null\r\n        this.indexStart = {\r\n            row: -1,\r\n            col: -1,\r\n        }\r\n        this.indexEnd = {\r\n            row: -1,\r\n            col: -1,\r\n        }\r\n        this.maxRowCount = 0\r\n        this.maxColCount = 0\r\n        this.contextmenuCell = null\r\n        this.init()\r\n    }\r\n\r\n    // 初始化\r\n    init () {\r\n        if (!this.tableEle && this.tableEle.ELEMENT_NODE !== 1 && this.tableEle.tagName !== 'TABLE') {\r\n            throw new Error('请传入table元素！')\r\n        }\r\n        this.tableEle.classList.add(this.tableClassName)\r\n        this.addFocusEle()\r\n        this.addCellLocation()\r\n        this.syncMaxRowAndColCount()\r\n        this.addEvent()\r\n    }\r\n\r\n    destroy () {\r\n        this.removeEvent()\r\n        this.focusEle && this.focusEle.remove()\r\n    }\r\n\r\n    // 创建焦点元素\r\n    addFocusEle () {\r\n        if (!this.focusEle) {\r\n            this.focusEle = document.createElement('button')\r\n            this.focusEle.className = 'tableMergeCell-focusEle'\r\n            document.body.appendChild(this.focusEle)\r\n        }\r\n    }\r\n\r\n    // 添加调试坐标\r\n    addCellLocation () {\r\n        const {rows} = this\r\n        rows.forEach((row, i) => {\r\n            const cells = row.children\r\n            cells.forEach((cell, j) => {\r\n                cell.textContent = i + '-' + j\r\n            })\r\n        })\r\n    }\r\n\r\n    // 同步最大行数和最大列数\r\n    syncMaxRowAndColCount () {\r\n        const {rows} = this\r\n        if (rows.length) {\r\n            this.maxRowCount = rows.length\r\n            this.maxColCount = rows[0].childElementCount\r\n        } else {\r\n            this.maxRowCount = 0\r\n            this.maxColCount = 0\r\n        }\r\n    }\r\n\r\n    // 添加背景色\r\n    colorChange = (e) => {\r\n        const {target} = e\r\n        const {value} = target\r\n        const {selectedCells} = this.colorPicker\r\n        if (selectedCells.length) {\r\n            selectedCells.forEach(ele => {\r\n                ele.style.backgroundColor = value\r\n            })\r\n        }\r\n        if (this.colorPicker) {\r\n            this.colorPicker.removeEventListener('input', this.colorChange)\r\n            this.colorPicker.remove()\r\n            this.colorPicker = null\r\n        }\r\n        this.removeClass()\r\n    }\r\n\r\n    // 显示颜色选择弹窗\r\n    addBackgroundColor () {\r\n        const selectedCells = this.getSelectedCells()\r\n        if (!selectedCells.length) return\r\n        this.colorPicker = document.createElement('input')\r\n        this.colorPicker.setAttribute('type', 'color')\r\n        this.colorPicker.className = 'tableMergeCell-colorPicker'\r\n        this.colorPicker.addEventListener('input', this.colorChange, false)\r\n        this.colorPicker.selectedCells = selectedCells\r\n        const selectedLastEle = selectedCells[selectedCells.length - 1]\r\n        selectedLastEle.appendChild(this.colorPicker)\r\n        this.colorPicker.click()\r\n    }\r\n\r\n    // 删除背景色\r\n    delBackgroundColor () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(ele => {\r\n            ele.style.removeProperty('background-color')\r\n        })\r\n    }\r\n\r\n    // 表中表\r\n    tableIsInTable (target) {\r\n        while (target && target.tagName !== 'TABLE') {\r\n            target = target.parentNode\r\n        }\r\n        return this.tableEle !== target && this.tableEle.contains(target)\r\n    }\r\n\r\n    // 为指定单元格添加类名\r\n    addClass (cell) {\r\n        if (!cell.className.includes(this.selectedCellClassName)) {\r\n            cell.classList.add(this.selectedCellClassName)\r\n        }\r\n    }\r\n\r\n    // 移除指定或选取元素类名\r\n    removeClass (cell) {\r\n        if (cell) {\r\n            cell.classList.remove(this.selectedCellClassName)\r\n            if (cell.className === '') {\r\n                cell.removeAttribute('class')\r\n            }\r\n        } else {\r\n            const selectedCells = this.tableEle.querySelectorAll('.tableMergeCell-selected')\r\n            if (selectedCells.length) {\r\n                selectedCells.forEach(item => {\r\n                    item.classList.remove(this.selectedCellClassName)\r\n                    if (item.className === '') {\r\n                        item.removeAttribute('class')\r\n                    }\r\n                })\r\n            }  \r\n        }\r\n    }\r\n\r\n    // 高亮选取的单元格\r\n    highlightSelectedCells () {\r\n        const {rows} = this\r\n        const isValid = this.selectedCellsIsValid(rows)\r\n        if (!isValid) return\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(ele => {\r\n            this.addClass(ele)\r\n        })\r\n    }\r\n\r\n    // 获取选取的单元格\r\n    getSelectedCells () {\r\n        const {indexStart, indexEnd} = this\r\n        let selectedCells = []\r\n        const {rows} = this\r\n        for (let i = 0; i < this.maxRowCount; i++) {\r\n            const tr = rows[i]\r\n            const {children} = tr\r\n            const childLen = children.length\r\n            for (let j = 0; j < childLen; j++) {\r\n                const cell = children[j]\r\n                if (i >= indexStart.row && i <= indexEnd.row && j >= indexStart.col && j <= indexEnd.col) {\r\n                    selectedCells.push(cell)\r\n                } \r\n            }\r\n        }\r\n        return selectedCells\r\n    }\r\n\r\n    // 判断选取的单元格是否有效\r\n    selectedCellsIsValid () {\r\n        const cellStart_rowspan = this.cellStart.getAttribute('rowspan')\r\n        const cellEnd_rowspan = this.cellEnd && this.cellEnd.getAttribute('rowspan')\r\n        if (cellStart_rowspan || cellEnd_rowspan) {\r\n            // console.log('不符合合并规则：选中区域不能包含已合并的单元格。')\r\n            return false\r\n        } \r\n        const selectedCells = this.getSelectedCells()\r\n        const isInvalid = Array.from(selectedCells).some(ele => {\r\n            return ele.style.display === 'none' || this.getIsMergedCellBool(ele)\r\n        })\r\n        if (isInvalid) {\r\n            // console.log('不符合合并规则：不能有隐藏的单元格或合并的单元格。')\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    // 合并单元格\r\n    mergeCell = () => {\r\n        const selectedCells = this.getSelectedCells()\r\n        const {indexStart, indexEnd} = this\r\n        const rowspan = indexEnd.row - indexStart.row + 1\r\n        const colspan = indexEnd.col - indexStart.col + 1\r\n        Array.from(selectedCells).forEach((ele, index) => {\r\n            if (index === 0) {\r\n                ele.setAttribute('rowspan', rowspan)\r\n                ele.setAttribute('colspan', colspan)\r\n            } else {\r\n                ele.style.display = 'none'\r\n            }\r\n            this.removeClass(ele)\r\n        })\r\n    }\r\n\r\n    // 取消合并单元格\r\n    unMergeCell = (cell) => {\r\n        let cellSpanProperty = null\r\n        if (cell) {\r\n            this.indexStart = this.getCellIndex(cell)\r\n            cellSpanProperty = this.getCellSpanProperty(cell)\r\n        } else {\r\n            this.indexStart = this.getCellIndex(this.contextmenuCell)\r\n            cellSpanProperty = this.getCellSpanProperty(this.contextmenuCell)\r\n        }\r\n        this.indexEnd = {\r\n            row: cellSpanProperty.rowspan - 1 + this.indexStart.row,\r\n            col: cellSpanProperty.colspan - 1 + this.indexStart.col,\r\n        }\r\n        const selectedCells = this.getSelectedCells()\r\n        Array.from(selectedCells).forEach((ele, index) => {\r\n            if (index === 0) {\r\n                ele.removeAttribute('rowspan')\r\n                ele.removeAttribute('colspan')\r\n            } else {\r\n                ele.style.display = 'table-cell'\r\n            }\r\n            this.removeClass(ele)\r\n        })\r\n    }\r\n\r\n    // 获取单元格行列索引\r\n    getCellIndex (ele) {\r\n        let index = {\r\n            row: -1,\r\n            col: -1,\r\n        }\r\n        if (!this.cellStart) return index\r\n        const {tagName} = this.cellStart\r\n        const {rows} = this\r\n        if (tagName === 'TH') {\r\n            const firstTr = rows[0]\r\n            const {children} = firstTr\r\n            const childLen = children.length\r\n            index.row = 0\r\n            for (let j = 0; j < childLen; j++) {\r\n                const cell = children[j]\r\n                if (cell === ele) {\r\n                    index.col = j\r\n                    break\r\n                }\r\n            }\r\n        } else if (tagName === 'TD') {\r\n            for (let i = 0; i < this.maxRowCount; i++) {\r\n                const tr = rows[i]\r\n                const {children} = tr\r\n                const childLen = children.length\r\n                for (let j = 0; j < childLen; j++) {\r\n                    const cell = children[j]\r\n                    if (cell === ele) {\r\n                        index.row = i\r\n                        index.col = j\r\n                        break\r\n                    }\r\n                }\r\n                if (index.row > 0) {\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        \r\n        return index\r\n    }\r\n\r\n    // 获取单元格rowspan, colspan属性值\r\n    getCellSpanProperty (cell) {\r\n        return {\r\n            rowspan: cell.getAttribute('rowspan') * 1,\r\n            colspan: cell.getAttribute('colspan') * 1,\r\n        }\r\n    }\r\n\r\n    // 获取是否是合并过的单元格\r\n    getIsMergedCellBool (cell) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const maxCount = Math.max(rowspan, colspan)\r\n        return maxCount > 1\r\n    }\r\n\r\n    // 根据类名获取选取的单元格\r\n    getSelectedCellsByClassName () {\r\n        return Array.from(this.tableEle.querySelectorAll(`.${this.selectedCellClassName}`))\r\n    }\r\n\r\n    // 获取受影响的合并行索引数组\r\n    getMergedRowIndexArray (startRowIndex, rowspan) {\r\n        const endRowIndex = startRowIndex + rowspan - 1\r\n        let rowIndexArray = []\r\n        do {\r\n            rowIndexArray.push(startRowIndex)\r\n            startRowIndex++\r\n        } while (startRowIndex <= endRowIndex)\r\n        return rowIndexArray\r\n    }\r\n\r\n    // 获取受影响的合并列索引数组\r\n    getMergedColIndexArray (startColIndex, colspan) {\r\n        const endColIndex = startColIndex + colspan - 1\r\n        let colIndexArray = []\r\n        do {\r\n            colIndexArray.push(startColIndex)\r\n            startColIndex++\r\n        } while (startColIndex <= endColIndex)\r\n        return colIndexArray\r\n    }\r\n\r\n    // 控制右键菜单合并按钮是否可点击\r\n    handleMenuBtnMergeStatus (cell) {\r\n        const {btnDisabledColor} = this.opts\r\n        this.isMergedCell = this.getIsMergedCellBool(cell)\r\n        /**\r\n        * 1.开始选中的单元格是否等于最后选中的单元格\r\n        * 2.是否合并\r\n        * 3.直接右键点击，未选中单元格时的情况\r\n        */\r\n\r\n        if ((this.cellStart === this.cellEnd || !cell.className.includes(this.selectedCellClassName)) && !cell.getAttribute('rowspan')) {\r\n            this.btn_merge.style.color = btnDisabledColor\r\n            this.btn_unMerge.style.color = btnDisabledColor\r\n        } else if (this.getIsMergedCellBool(cell)) {\r\n            this.btn_merge.style.color = btnDisabledColor\r\n            this.btn_unMerge.style.removeProperty('color')\r\n        } else {\r\n            this.btn_merge.style.removeProperty('color')\r\n            this.btn_unMerge.style.color = btnDisabledColor\r\n        }\r\n    }\r\n\r\n    // 控制右键菜单行按钮是否可点击\r\n    handleMenuBtnRowStatus (target) {\r\n        const {btnDisabledColor} = this.opts\r\n        if (target.tagName === 'TH') {\r\n            this.btn_addRow.style.color = btnDisabledColor\r\n        } else {\r\n            this.btn_addRow.style.removeProperty('color')\r\n        }\r\n        const {rowspan, colspan} = this.getCellSpanProperty(target)\r\n        if (rowspan > 1 || colspan > 1) {\r\n            this.btn_delRow.style.color = btnDisabledColor\r\n            this.btn_delCol.style.color = btnDisabledColor\r\n        } else {\r\n            this.btn_delRow.style.removeProperty('color')\r\n            this.btn_delCol.style.removeProperty('color')\r\n        }\r\n    }\r\n\r\n    // 当未选取单元格时，控制部分右键菜单项是否可点击\r\n    handleSomeMenuBtns (target) {\r\n        const {btnDisabledColor} = this.opts\r\n        const selectedCells = this.getSelectedCellsByClassName()\r\n        if (selectedCells.length) {\r\n            this.btn_textAlignLeft.style.removeProperty('color')\r\n            this.btn_textAlignCenter.style.removeProperty('color')\r\n            this.btn_textAlignRight.style.removeProperty('color')\r\n            this.btn_addBackgroundColor.style.removeProperty('color')\r\n            this.btn_delBackgroundColor.style.removeProperty('color')\r\n        } else {\r\n            this.btn_addBackgroundColor.style.color = btnDisabledColor\r\n            this.btn_delBackgroundColor.style.color = btnDisabledColor\r\n            this.btn_textAlignLeft.style.color = btnDisabledColor\r\n            this.btn_textAlignCenter.style.color = btnDisabledColor\r\n            this.btn_textAlignRight.style.color = btnDisabledColor\r\n        }\r\n    }\r\n\r\n    // 控制删除的列与关联列的关系\r\n    handleMergedCellByDelCol (index) {\r\n        const {rows} = this\r\n        const trLen = rows.length\r\n        for (let i = 0; i < trLen; i++) {\r\n            const row = rows[i]\r\n            const cells = row.children\r\n            const cellLen = cells.length\r\n            for (let j = 0; j < cellLen; j++) {\r\n                const cell = cells[j]\r\n                const {colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index > j && index < j + colspan) {\r\n                    cell.setAttribute('colspan', colspan - 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 删除表格\r\n    delTable () {\r\n        /*this.$confirm({\r\n            title: '删除确认？',\r\n            content: '您确认删除表格吗？',\r\n            zIndex: 10009,\r\n            onOk () {\r\n                console.log('ok')\r\n            },\r\n            onCancel () {\r\n                console.log('cancel')\r\n            },\r\n        })*/\r\n        this.tableEle.remove()\r\n    }\r\n\r\n    // 删除空表格\r\n    delEmptyTable () {\r\n        const {rows} = this\r\n        if (!rows.length || !rows[0].children.length) {\r\n            this.delTable()\r\n        }\r\n    }\r\n\r\n    // 上面添加一行\r\n    addRow (index) {\r\n        const {maxColCount, tBody} = this\r\n        const relatedCellsArray = this.getRelatedMergedRowCells(index, 'addRow')\r\n        let colIndexArray = []\r\n        relatedCellsArray.forEach(cell => {\r\n            const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n            const {col} = this.getCellIndex(cell)\r\n            colIndexArray.push(...this.getMergedColIndexArray(col, colspan))\r\n            cell.setAttribute('rowspan', rowspan + 1)\r\n        })\r\n        const newRow = tBody.insertRow(index)\r\n        for (let i = 0; i < maxColCount; i++) {\r\n            newRow.insertCell(i)\r\n        }\r\n        colIndexArray.forEach(index => {\r\n            newRow.children[index].style.display = 'none'\r\n        })\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 获取相关的行合并单元格\r\n    getRelatedMergedRowCells (index, type) {\r\n        const {rows} = this\r\n        let relatedCellsArray = []\r\n        rows.forEach((row, rowIndex) => {\r\n            const cells = row.children\r\n            cells.forEach(cell => {\r\n                const {rowspan} = this.getCellSpanProperty(cell)\r\n                if (rowspan > 1 && this.rowIsInMergedRow(rowIndex, rowspan, index, type)) {\r\n                    relatedCellsArray.push(cell)\r\n                }\r\n            })\r\n        })\r\n        return relatedCellsArray\r\n    }\r\n\r\n    // 行是在合并单元格范围内\r\n    rowIsInMergedRow (startRowIndex, rowspan, willRowIndex, type) {\r\n        if (type === 'addRow') {\r\n            return willRowIndex > startRowIndex && willRowIndex <= startRowIndex + rowspan - 1\r\n        } else if (type === 'delRow') {\r\n            return willRowIndex >= startRowIndex && willRowIndex <= startRowIndex + rowspan - 1\r\n        }\r\n    }\r\n\r\n    // 左边添加一列\r\n    addCol (index) {\r\n        const {onAddCol} = this.opts\r\n        this.syncMaxRowAndColCount()\r\n\r\n        const {maxRowCount} = this\r\n        const {rows} = this\r\n        for (let i = 0; i < maxRowCount; i++) {\r\n            const row = rows[i]\r\n            const cell = row.children[index]\r\n            const newCell = cell.tagName === 'TH' ? '<th></th>' : '<td></td>'\r\n            cell.insertAdjacentHTML('beforebegin', newCell)\r\n        }\r\n\r\n        rows.forEach((row, rowIndex) => {\r\n            const cells = row.children\r\n            cells.forEach((cell, cellIndex) => {\r\n                const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index > cellIndex && index <= cellIndex + colspan - 1) {\r\n                    cell.setAttribute('colspan', colspan + 1)\r\n                    cells[index].style.display = 'none'\r\n                    let rowLen = rowspan\r\n                    let currentRowIndex = rowIndex\r\n                    while (rowLen > 1) {\r\n                        rows[++currentRowIndex].children[index].style.display = 'none'\r\n                        rowLen--\r\n                    }\r\n                }\r\n            })\r\n        })\r\n\r\n        this.syncMaxRowAndColCount()\r\n\r\n        onAddCol && onAddCol()\r\n    }\r\n\r\n    // 删除行\r\n    delRow (index) {\r\n        const {tBody, rows} = this\r\n        const relatedCellsArray = this.getRelatedMergedRowCells(index, 'delRow')\r\n        relatedCellsArray.forEach(cell => {\r\n            const {row, col} = this.getCellIndex(cell)\r\n            if (row === index) {\r\n                this.delFirstRow(rows, col, cell, index)\r\n            } else {\r\n                this.delOtherRow(cell)\r\n            }\r\n        })\r\n        tBody.deleteRow(index)\r\n        this.delEmptyTable()\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 删除非第一行\r\n    delOtherRow (cell) {\r\n        const {rowspan} = this.getCellSpanProperty(cell)\r\n        cell.setAttribute('rowspan', rowspan - 1)\r\n    }\r\n\r\n    // 删除第一行\r\n    delFirstRow (rows, col, cell, index) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const nextRow = rows[index + 1]\r\n        const nextCell = nextRow.children[col]\r\n        nextCell.setAttribute('rowspan', rowspan - 1)\r\n        nextCell.setAttribute('colspan', colspan)\r\n        nextCell.style.display = 'table-cell'\r\n    }\r\n\r\n    // 获取相关的列合并单元格\r\n    getRelatedMergedColCells (index) {\r\n        const {rows} = this\r\n        let relatedCellsArray = []\r\n        rows.forEach(row => {\r\n            const cells = row.children\r\n            cells.forEach((cell, cellIndex) => {\r\n                const {colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index >= cellIndex && index <= cellIndex + colspan - 1) {\r\n                    relatedCellsArray.push(cell)\r\n                }\r\n            })\r\n        })\r\n        return relatedCellsArray\r\n    }\r\n\r\n    // 删除非第一列\r\n    delOtherCol (cell) {\r\n        const {colspan} = this.getCellSpanProperty(cell)\r\n        cell.setAttribute('colspan', colspan - 1)\r\n    }\r\n\r\n    // 删除第一列\r\n    delFirstCol (cell) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const nextCell = cell.nextElementSibling\r\n        nextCell.setAttribute('colspan', colspan - 1)\r\n        nextCell.setAttribute('rowspan', rowspan)\r\n        nextCell.style.display = 'table-cell'\r\n    }\r\n\r\n    // 删除列\r\n    delCol (index) {\r\n        const {tBody, rows} = this\r\n        const relatedCellsArray = this.getRelatedMergedColCells(index)\r\n        relatedCellsArray.forEach(cell => {\r\n            const {col} = this.getCellIndex(cell)\r\n            if (col === index) {\r\n                this.delFirstCol(cell)\r\n            } else {\r\n                this.delOtherCol(cell)\r\n            }\r\n        })\r\n        rows.forEach(row => {\r\n            row.deleteCell(index)\r\n        })\r\n        this.delEmptyTable()\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 添加表头\r\n    addTh () {\r\n        const firstTr = this.rows[0]\r\n        const {children} = firstTr\r\n        let tr = document.createElement('tr')\r\n        if (children[0].tagName === 'TD') {\r\n            const len = children.length\r\n            for (let i = 0; i < len; i++) {\r\n                const cell = children[i]\r\n                if (this.getIsMergedCellBool(cell)) {\r\n                    alert('请先取消第一行合并的单元格！')\r\n                    break\r\n                }\r\n                const th = document.createElement('th')\r\n                th.innerHTML = cell.innerHTML\r\n                tr.appendChild(th)\r\n            }\r\n            if (tr.childElementCount === len) {\r\n                firstTr.innerHTML = tr.innerHTML\r\n            }\r\n        }\r\n    }\r\n\r\n    // 删除表头\r\n    delTh () {\r\n        const firstTr = this.rows[0]\r\n        const {children} = firstTr\r\n        let tr = document.createElement('tr')\r\n        if (children[0].tagName === 'TH') {\r\n            children.forEach(cell => {\r\n                const td = document.createElement('td')\r\n                td.innerHTML = cell.innerHTML\r\n                tr.appendChild(td)\r\n            })\r\n            firstTr.innerHTML = tr.innerHTML\r\n        }\r\n    }\r\n\r\n    // 靠左\r\n    textAlignLeft () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'left'\r\n        })\r\n    }\r\n\r\n    // 居中\r\n    textAlignCenter () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'center'\r\n        })\r\n    }\r\n\r\n    // 靠右\r\n    textAlignRight () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'right'\r\n        })\r\n    }\r\n\r\n    // 点击右键菜单项时\r\n    menuClick = (e) => {\r\n        const {target} = e\r\n        const color1 = window.getComputedStyle(target).color\r\n        const color2 = TableMergeCell.colorToRgb(this.opts.btnDisabledColor)\r\n        if (color1 === color2) return\r\n        const key = target.dataset.key\r\n        const {row, col} = this.getCellIndex(this.contextmenuCell)\r\n        switch (key) {\r\n            /*case 'doCopy':\r\n                console.log('复制')\r\n                this.doCopy()\r\n                break\r\n            case 'doPaste':\r\n                console.log('复制')\r\n                this.doPaste()\r\n                break*/\r\n            case 'textAlignLeft':\r\n                console.log('靠左')\r\n                this.textAlignLeft()\r\n                break\r\n            case 'textAlignCenter':\r\n                console.log('居中')\r\n                this.textAlignCenter()\r\n                break\r\n            case 'textAlignRight':\r\n                console.log('靠右')\r\n                this.textAlignRight()\r\n                break\r\n            case 'addBackgroundColor':\r\n                console.log('设置背景色')\r\n                this.addBackgroundColor()\r\n                break\r\n            case 'delBackgroundColor':\r\n                console.log('删除背景色')\r\n                this.delBackgroundColor()\r\n                break\r\n            case 'delTable':\r\n                console.log('删除表格')\r\n                this.delTable()\r\n                break\r\n            case 'addRow':\r\n                console.log('添加行')\r\n                this.addRow(row)\r\n                break\r\n            case 'delRow':\r\n                console.log('删除行')\r\n                this.delRow(row)\r\n                break\r\n            case 'addCol':\r\n                console.log('添加列')\r\n                this.addCol(col)\r\n                break\r\n            case 'delCol':\r\n                console.log('删除列')\r\n                this.delCol(col)\r\n                break\r\n            case 'addTh':\r\n                console.log('设置表头')\r\n                this.addTh()\r\n                break\r\n            case 'delTh':\r\n                console.log('取消表头')\r\n                this.delTh()\r\n                break\r\n            case 'merge':\r\n                console.log('合并单元格')\r\n                this.mergeCell()\r\n                break\r\n            case 'unMerge':\r\n                console.log('取消合并单元格')\r\n                this.unMergeCell()\r\n                break\r\n        }\r\n        if (this.menuEle) {\r\n            this.menuEle.style.display = 'none'\r\n        }\r\n    }\r\n\r\n    mousedown = (e) => {\r\n        const {target, button} = e\r\n        if (this.tableIsInTable(target) || button !== 0) return\r\n        const {tagName} = target\r\n        if (tagName === 'TD' || tagName === 'TH') {\r\n            this.ready = true\r\n            this.cellStart = target\r\n            this.indexStart = this.getCellIndex(target)\r\n            this.removeClass()\r\n            this.addClass(target)\r\n        }\r\n    }\r\n\r\n    // 移除一些特征\r\n    removeSomeNoSelfIsClicked = (e) => {\r\n        const {target} = e\r\n        // 隐藏右键菜单\r\n        if (this.menuEle && !this.menuEle.contains(target)) {\r\n            this.menuEle.style.display = 'none'\r\n        }\r\n        // 未点击表格时（且未点击右键菜单的添加背景色）移除高亮单元格\r\n        const key = target.dataset.key\r\n        if (!this.tableEle.contains(target) && key !== 'addBackgroundColor') {\r\n            this.removeClass()\r\n        }\r\n        // 移除背景色设置输入框\r\n        if (this.colorPicker) {\r\n            this.colorPicker.remove()\r\n        }\r\n    }\r\n\r\n    mousemove = (e) => {\r\n        if (this.ready) {\r\n            const {target} = e\r\n            this.cellEnd = target\r\n            this.indexEnd = this.getCellIndex(target)\r\n            this.removeClass()\r\n            this.highlightSelectedCells()\r\n            const selObj = window.getSelection()\r\n            if (this.cellStart !== this.cellEnd) {\r\n                selObj.collapseToEnd()\r\n            }\r\n        }\r\n    }\r\n\r\n    mouseup = (e) => {\r\n        const {target, button} = e\r\n        if (button === 0 && this.ready) {\r\n            this.cellEnd = target\r\n            this.indexEnd = this.getCellIndex(target)\r\n            this.ready = false\r\n            if (this.cellStart !== this.cellEnd) {\r\n                this.focusEle && this.focusEle.focus()\r\n            }\r\n        }\r\n    }\r\n\r\n    tableClick = (e) => {\r\n        const {target, button} = e\r\n        if (button === 0 && target.tagName !== 'INPUT' && this.tableEle.contains(target)) {\r\n            e.stopPropagation()\r\n        }\r\n    }\r\n\r\n    contextmenu = (e) => {\r\n        e.preventDefault()\r\n        const {target} = e\r\n        if (this.tableIsInTable(target)) return\r\n        if (!this.menuEle) {\r\n            this.menuEle = document.createElement('ul')\r\n            this.menuEle.classList.add('tableMergeCell-contextmenu')\r\n            this.menuEle.addEventListener('click', this.menuClick, false)\r\n\r\n            this.menus.forEach(item => {\r\n                const li = document.createElement('li')\r\n                const {name, key} = item\r\n                li.textContent = name\r\n                li.dataset.key = key\r\n                this[`btn_${key}`] = li\r\n                this.menuEle.appendChild(li)\r\n            })\r\n\r\n            document.body.appendChild(this.menuEle)\r\n        }\r\n        const {clientX, clientY} = e\r\n        this.menuEle.style.display = 'block'\r\n        this.menuEle.style.top = `${clientY}px`\r\n        this.menuEle.style.left = `${clientX}px`\r\n        this.contextmenuCell = target\r\n        this.handleMenuBtnMergeStatus(target)\r\n        this.handleMenuBtnRowStatus(target)\r\n        this.handleSomeMenuBtns(target)\r\n    }\r\n\r\n    copy = (e) => {\r\n        e.preventDefault()\r\n        const selectedCells = this.getSelectedCells()\r\n        let arr = []\r\n        selectedCells.forEach(cell => {\r\n            arr.push(cell.outerHTML)\r\n        })\r\n        const res = arr.join(',,')\r\n        console.log('copy', res)\r\n        if (event.clipboardData) {\r\n            event.clipboardData.setData('text/plain', res)\r\n        } else if (window.clipboardData) {\r\n            window.clipboardData.setData('text', res)\r\n        }\r\n    }\r\n\r\n    pasteWithRule (targetCells, resourceCells) {\r\n        const lenT = targetCells.length\r\n        const lenR = resourceCells.length\r\n        if (lenT !== lenR) return\r\n        for (let i = 0; i < lenT; i++) {\r\n            const cellT = targetCells[i]\r\n            const cellR = resourceCells[i]\r\n            const spans = this.getCellSpanProperty(cellT)\r\n            const rowspanT = spans.rowspan\r\n            const colspanT = spans.colspan\r\n            const m1 = cellR.match(/rowspan=\"(\\d+)\"/)\r\n            const m2 = cellR.match(/colspan=\"(\\d+)\"/)\r\n            let rowspanR = 0, colspanR = 0\r\n            if (m1 && m1[1]) {\r\n                rowspanR = m1[1] * 1\r\n            }\r\n            if (m2 && m2[1]) {\r\n                colspanR = m2[1] * 1\r\n            }\r\n            console.log(rowspanT, rowspanR, colspanT, colspanR)\r\n            if (rowspanT === rowspanR && colspanT === colspanR) {\r\n                cellT.outerHTML = cellR\r\n            }\r\n        }\r\n    }\r\n\r\n    paste = (e) => {\r\n        e.preventDefault()\r\n        const clipboardData = event.clipboardData || window.clipboardData\r\n        const data = clipboardData.getData('text')\r\n        console.log('paste', data)\r\n        const arr = data.split(',,')\r\n        const selectedCells = this.getSelectedCells()\r\n        this.pasteWithRule(selectedCells, arr)\r\n    }\r\n\r\n    addEvent () {\r\n        window.addEventListener('mousedown', this.mousedown, false)\r\n        window.addEventListener('mousedown', this.removeSomeNoSelfIsClicked, false)\r\n        window.addEventListener('mousemove', this.mousemove, false)\r\n        window.addEventListener('mouseup', this.mouseup, false)\r\n        this.tableEle.addEventListener('click', this.tableClick, false)\r\n        this.tableEle.addEventListener('contextmenu', this.contextmenu, false)\r\n        document.addEventListener('copy', this.copy, false)\r\n        document.addEventListener('paste', this.paste, false)\r\n    }\r\n\r\n    removeEvent () {\r\n        window.removeEventListener('mousedown', this.mousedown, false)\r\n        window.removeEventListener('mousedown', this.removeSomeNoSelfIsClicked, false)\r\n        window.removeEventListener('mousemove', this.mousemove, false)\r\n        window.removeEventListener('mouseup', this.mouseup, false)\r\n        this.tableEle.removeEventListener('click', this.tableClick, false)\r\n        this.tableEle.removeEventListener('contextmenu', this.contextmenu, false)\r\n        this.tableEle.removeEventListener('copy', this.copy, false)\r\n        this.tableEle.removeEventListener('paste', this.paste, false)\r\n    }\r\n\r\n    static colorToRgb (color) {\r\n        var span = document.createElement('span')\r\n        span.style.color = color\r\n        document.body.appendChild(span)\r\n        var c = window.getComputedStyle(span).color\r\n        document.body.removeChild(span)\r\n        return c\r\n    }\r\n}\r\n","/* eslint-disable */\r\nconst defaults = {\r\n    colMinWidth: 50, // 列最小宽度\r\n}\r\n\r\nexport default class ColumnResizer {\r\n    constructor (tableEle, options = {}) {\r\n        this.opts = Object.assign({}, defaults, options)\r\n        this.tableEle = tableEle\r\n        this.tableEle.columnResizer = Object.assign({}, {reset: this.reset})\r\n        this.handshank = null\r\n        this.handshankCls = 'tableMergeCell-handshank'\r\n        this.subline = 'tableMergeCell-subline'\r\n        this.handshankHover = 'tableMergeCell-handshank-hover'\r\n        this.init()\r\n    }\r\n\r\n    // 初始化\r\n    init () {\r\n        if (!this.tableEle || this.tableEle.ELEMENT_NODE !== 1 || this.tableEle.tagName !== 'TABLE') {\r\n            throw new Error('请传入table元素！')\r\n        }\r\n        this.getDefaultWidth()\r\n        this.setDefaultWidth()\r\n        this.addResizeHandShank()\r\n        this.addEvent()\r\n    }\r\n\r\n    destroy () {\r\n        this.removeEvent()\r\n    }\r\n\r\n    // 获取表格与列宽默认值\r\n    getDefaultWidth () {\r\n        const {width} = this.tableEle.getBoundingClientRect()\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const colCount = rows[0].childElementCount\r\n        this.average = width / colCount\r\n        this.tableWidth = width\r\n    }\r\n\r\n    // 重置相关内容\r\n    reset = () => {\r\n        this.addResizeHandShank()\r\n        this.setDefaultWidth()\r\n    }\r\n\r\n    // 初始化默认宽\r\n    setDefaultWidth () {\r\n        this.setTableWidth(this.tableWidth)\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const firstRowCells = rows[0].children\r\n        firstRowCells.forEach(cell => {\r\n            const width = cell.style.width\r\n            if (!width) {\r\n                cell.style.width = `${this.average}px`\r\n            }\r\n        })\r\n    }\r\n\r\n    // 增加列调整手柄\r\n    addResizeHandShank () {\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const cells = rows[0].children\r\n        cells.forEach((cell, index) => {\r\n            const handshank = cell.querySelector(`.${this.handshankCls}`)\r\n            handshank && handshank.remove()\r\n            const i = `&emsp;<i data-col=\"${index}\" contenteditable=\"false\" class=\"${this.handshankCls}\"></i>`\r\n            cell.insertAdjacentHTML('beforeend', i)\r\n        })\r\n    }\r\n\r\n    // 增加辅助线\r\n    addSubline () {\r\n        this.handshank.classList.add(this.subline)\r\n        // this.tableEle.style.overflow = 'hidden'\r\n    }\r\n\r\n    // 移除辅助线\r\n    removeSubline () {\r\n        this.handshank.classList.remove(this.subline)\r\n        // this.tableEle.style.overflow = 'initial'\r\n    }\r\n\r\n    // 设置表格宽\r\n    setTableWidth (width) {\r\n        this.tableEle.setAttribute('width', `${width}px`)\r\n    }\r\n\r\n    // 获取列宽和\r\n    getColsWidth () {\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const cells = rows[0].children\r\n        const arr = Array.from(cells).map(cell => {\r\n            return Number.parseFloat(cell.style.width)\r\n        })\r\n        const width = arr.reduce((acc, cur) => {\r\n            return acc + cur\r\n        })\r\n        return width\r\n    }\r\n\r\n    mousedown = (e) => {\r\n        const {target, button, clientX} = e\r\n        if (button === 0 && target.className.includes(this.handshankCls)) {\r\n            this.handshank = target\r\n            this.handshank.classList.add(this.handshankHover)\r\n            this.clientX = clientX\r\n            this.addSubline()\r\n        } else {\r\n            this.handshank = null\r\n        }\r\n    }\r\n\r\n    mousemove = (e) => {\r\n        if (this.handshank) {\r\n            e.preventDefault()\r\n            const {clientX} = e\r\n            this.diff = clientX - this.clientX\r\n            this.handshank.style.transform = `translateX(${this.diff}px)`\r\n        }\r\n    }\r\n\r\n    mouseleave = () => {\r\n        this.mouseup()\r\n    }\r\n\r\n    mouseup = (e) => {\r\n        if (this.handshank) {\r\n            const {clientX} = e\r\n            const firstRow = this.tableEle.tBodies[0].rows[0]\r\n            const index = this.handshank.dataset.col\r\n            const currentCol = firstRow.children[index]\r\n            const {width} = currentCol.getBoundingClientRect()\r\n            const calcWidth = width + this.diff\r\n            const {colMinWidth} = this.opts\r\n            const newWidth = Math.max(colMinWidth, calcWidth)\r\n            if (clientX - this.clientX === 0) return\r\n            if (this.tableEle.contains(this.handshank)) {\r\n                currentCol.style.width = `${newWidth}px`\r\n            }\r\n            this.handshank.style.transform = 'none'\r\n            this.handshank.classList.remove(this.handshankHover)\r\n            this.removeSubline()\r\n            const colsWidth = this.getColsWidth()\r\n            this.setTableWidth(colsWidth)\r\n            this.handshank = null\r\n        }\r\n    }    \r\n\r\n    addEvent () {\r\n        window.addEventListener('mousedown', this.mousedown, false)\r\n        window.addEventListener('mousemove', this.mousemove, false)\r\n        window.addEventListener('mouseup', this.mouseup, false)\r\n        // this.tableEle.addEventListener('mouseleave', this.mouseleave, false)\r\n    }\r\n\r\n    removeEvent () {\r\n        window.removeEventListener('mousedown', this.mousedown, false)\r\n        window.removeEventListener('mousemove', this.mousemove, false)\r\n        window.removeEventListener('mouseup', this.mouseup, false)\r\n        // this.tableEle.removeEventListener('mouseleave', this.mouseleave, false)\r\n    }\r\n}\r\n","import TableMergeCell from '@/assets/tableMergeCell/tableMergeCell'\r\nimport '@/assets/tableMergeCell/tableMergeCell.less'\r\nimport ColumnResizer from '@/assets/columnResizer/columnResizer'\r\nimport '@/assets/columnResizer/columnResizer.less'\r\n\r\nexport const wangEditorTableExtend = {\r\n    mounted () {\r\n        this.$nextTick(() => {\r\n            this.tableObserve()\r\n        })\r\n    },\r\n    methods: {\r\n        initTableInteraction () {\r\n            if (!this.$refs.editor) return\r\n            this.tables = this.$refs.editor.querySelectorAll('.w-e-text > table')\r\n            this.tables.forEach(table => {\r\n                table.tableMergeCellInstance = new TableMergeCell(table, {\r\n                    onAddCol: () => {\r\n                        table.columnResizer.reset()\r\n                    },\r\n                })\r\n                table.tableColumnResizerInstance = new ColumnResizer(table, {\r\n                    // resizeMode: 'overflow',\r\n                })\r\n            })\r\n        },\r\n        tableObserve () {\r\n            const callback = (mutationsList) => {\r\n                for (const mutation of mutationsList) {\r\n                    const {target, addedNodes} = mutation\r\n                    const [addedNode] = addedNodes\r\n                    if (target.className.includes('w-e-text') && addedNode && addedNode.tagName === 'TABLE') {\r\n                        this.initTableInteraction()\r\n                    }\r\n                }\r\n            }\r\n            const observer = new MutationObserver(callback)\r\n            const ele = this.$refs.editor.querySelector('.w-e-text[contenteditable=\"true\"]')\r\n            observer.observe(ele, {\r\n                childList: true,\r\n                subtree: true,\r\n            })\r\n        },\r\n    },\r\n    beforeDestroy () {\r\n      this.tables && this.tables.forEach(table => {\r\n          table.tableMergeCellInstance.destroy()\r\n          table.tableColumnResizerInstance.destroy()\r\n      })\r\n      this.tables = null\r\n    },\r\n}","<template>\n    <div>\n      <div ref=\"editor\"></div>\n      <button type=\"button\" id=\"btn1\" @click=\"getHtml\">获取html</button>\n      <button type=\"button\" id=\"btn2\" @click=\"setHtml\">设置html</button>\n      <div ref=\"newHtml\" class=\"newHtml\"></div>\n    </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport E from 'wangeditor'\nimport { wangEditorTableExtend } from '@/assets/tool'\nexport default {\n  name: 'about',\n  mixins: [wangEditorTableExtend],\n  mounted () {\n    this.initEditor()\n  },\n  methods: {\n    getHtml () {\n        this.newHtml = this.editor.txt.html()\n        this.$refs.newHtml.innerHTML = this.newHtml\n    },\n    setHtml () {\n        // this.newHtml = ``\n        this.editor.txt.html(this.newHtml)\n        // this.initTableInteraction()\n    },\n    initEditor () {\n        this.editor = new E(this.$refs.editor)\n\n        /*this.editor.config.onchange = (newHtml) => {\n            console.log(\"change 之后最新的 newHtml\", newHtml)\n        };*/\n        this.editor.config.onchangeTimeout = 200; // 修改为 500ms\n        this.editor.create()\n    },\n  },\n}\n</script>\n\n<style>\n    .newHtml {\n        border-collapse: collapse;\n    }\n    .newHtml th, .newHtml td {\n        height: 30px;\n        border: 1px solid #eee;\n    }\n    .w-e-text-container {\n        height: 330px!important;\n    }\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=2e742c94&\"\nimport script from \"./About.vue?vue&type=script&lang=js&\"\nexport * from \"./About.vue?vue&type=script&lang=js&\"\nimport style0 from \"./About.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport About from '../views/About.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: About,\n  },\n  // {\n  //   path: '/about',\n  //   name: 'about',\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\n  // },\n  // {\n  //   path: '/redips',\n  //   name: 'redips',\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/Redips.vue')\n  // }\n]\n\nconst router = new VueRouter({\n  routes\n})\n\nexport default router\n","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\n/*import {Modal} from 'ant-design-vue'\r\nimport 'ant-design-vue/lib/modal/style/css'\r\nVue.use(Modal)\r\nVue.prototype.$confirm = Modal.confirm\r\nVue.prototype.$info = Modal.info*/\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}