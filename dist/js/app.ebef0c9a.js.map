{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?059b","webpack:///./src/App.vue","webpack:///./src/views/About.vue?bc2e","webpack:///./src/assets/tableMergeCell/tableMergeCell.js","webpack:///./src/assets/columnResizer/columnResizer.js","webpack:///./src/assets/tool.js","webpack:///src/views/About.vue","webpack:///./src/views/About.vue?f1da","webpack:///./src/views/About.vue","webpack:///./src/router/index.js","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?c650","webpack:///./src/views/About.vue?2fad"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticRenderFns","script","component","ref","domProps","_s","backendHTML","on","getHtml","setHtml","staticClass","defaults","btnDisabledColor","onAddCol","TableMergeCell","tableEle","options","e","target","selectedCells","colorPicker","forEach","ele","style","backgroundColor","removeEventListener","colorChange","remove","removeClass","getSelectedCells","indexStart","indexEnd","rowspan","row","colspan","col","index","setAttribute","display","cellSpanProperty","getCellIndex","cellEnd","getCellSpanProperty","removeAttribute","color1","getComputedStyle","color","color2","colorToRgb","opts","dataset","contextmenuCell","textAlignLeft","textAlignCenter","textAlignRight","addBackgroundColor","delBackgroundColor","delTable","addRow","delRow","addCol","delCol","addTh","delTh","mergeCell","unMergeCell","menuEle","button","tableIsInTable","getTargetParentCell","tagName","ready","cellStart","addClass","contains","highlightSelectedCells","selection","getSelection","collapseToEnd","focusEle","focus","stopPropagation","preventDefault","clientX","clientY","document","createElement","classList","add","addEventListener","menuClick","menus","item","li","textContent","appendChild","body","getBoundingClientRect","width","height","documentElement","clientWidth","clientHeight","diffX","diffY","right","removeProperty","left","top","handleMenuBtnMergeStatus","handleMenuBtnRowStatus","handleSomeMenuBtns","selectionStr","toString","copyedContent","arr","cell","outerHTML","join","separator","clipboardData","setData","copyedIndexRange","copyedCellsArray","test","getData","split","pasteWithRule","getIndexDefaultValue","innerHTML","assign","tBody","tBodies","rows","tableClassName","selectedCellClassName","maxRowCount","maxColCount","init","span","removeChild","parentNode","ELEMENT_NODE","Error","handleTableFromExcel","addFocusEle","syncMaxRowAndColCount","addEvent","removeEvent","children","colgroup","tbody","rowLen","cells","colLen","getAttribute","k","newCell","insertCell","className","childElementCount","selectedLastEle","click","includes","querySelectorAll","isValid","selectedCellsIsValid","isTwoDimensionalArray","selectedCellsTwoDimensionalArray","tr","childLen","rowArray","cellStart_rowspan","cellEnd_rowspan","isInvalid","some","getIsMergedCellBool","firstTr","maxCount","Math","max","Array","from","startRowIndex","endRowIndex","rowIndexArray","startColIndex","endColIndex","colIndexArray","isMergedCell","getSelectedCellsByClassName","btn_unMerge","btn_merge","btn_addRow","btn_delRow","btn_delCol","btn_textAlignLeft","btn_textAlignCenter","btn_textAlignRight","btn_addBackgroundColor","btn_delBackgroundColor","trLen","cellLen","relatedCellsArray","getRelatedMergedRowCells","getMergedColIndexArray","newRow","insertRow","type","rowIndex","rowIsInMergedRow","willRowIndex","insertAdjacentHTML","cellIndex","currentRowIndex","delFirstRow","delOtherRow","deleteRow","delEmptyTable","nextRow","nextCell","nextElementSibling","getRelatedMergedColCells","delFirstCol","delOtherCol","deleteCell","len","alert","th","td","textAlign","targetCells","resourceCells","lenT","lenR","cellT","cellR","spans","rowspanT","colspanT","m1","match","m2","rowspanR","colspanR","replace","pastedIndexRange","rowStart","rowEnd","colStart","colEnd","cols","h","copyedCell","mousedown","removeSomeNoSelfIsClicked","mousemove","mouseup","tableClick","contextmenu","copy","paste","keydown","colMinWidth","ColumnResizer","addResizeHandShank","setDefaultWidth","handshankCls","handshank","handshankHover","addSubline","diff","transform","firstRow","currentCol","calcWidth","newWidth","removeSubline","colsWidth","getColsWidth","setTableWidth","columnResizer","reset","subline","getDefaultWidth","colCount","average","tableWidth","firstRowCells","querySelector","map","Number","parseFloat","reduce","acc","cur","wangEditorTableExtend","mounted","$nextTick","addInsertTableIconlistener","addPasteTableListener","updated","initTableInteraction","methods","$refs","editor","tables","table","tableMergeCellInstance","tableColumnResizerInstance","addInsertTextListener","insertText","iconTable","pasteData","event","beforeDestroy","destroy","Vue","use","VueRouter","routes","path","About","router","Vuex","Store","state","mutations","actions","config","productionTip","store","render","App","$mount"],"mappings":"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","file":"js/app.ebef0c9a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{attrs:{\"id\":\"nav\"}},[_c('router-link',{attrs:{\"to\":\"/\"}},[_vm._v(\"tableMergeCell\")])],1),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=9daf8a4e&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"editor\"},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.backendHTML)}})]),_c('button',{attrs:{\"type\":\"button\",\"id\":\"btn1\"},on:{\"click\":_vm.getHtml}},[_vm._v(\"获取html\")]),_c('button',{attrs:{\"type\":\"button\",\"id\":\"btn2\"},on:{\"click\":_vm.setHtml}},[_vm._v(\"设置html\")]),_c('div',{ref:\"newHtml\",staticClass:\"newHtml\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable */\r\nconst defaults = {\r\n    btnDisabledColor: '#ddd', // 右键菜单禁用时的颜色\r\n    onAddCol: null,             // 添加列完成后回调\r\n}\r\n\r\nexport default class TableMergeCell {\r\n    static separator = ',%,#,$'\r\n\r\n    static focusEle = null\r\n\r\n    // 字符串或一维数组\r\n    static copyedContent = ''\r\n\r\n    static copyedIndexRange = {}\r\n\r\n    // 二维数组\r\n    static copyedCellsArray = []\r\n\r\n    static colorToRgb (color) {\r\n        var span = document.createElement('span')\r\n        span.style.color = color\r\n        document.body.appendChild(span)\r\n        var c = window.getComputedStyle(span).color\r\n        document.body.removeChild(span)\r\n        return c\r\n    }\r\n\r\n    static getIndexDefaultValue () {\r\n        return {\r\n            row: -1,\r\n            col: -1,\r\n        }\r\n    }\r\n\r\n    static getTargetParentCell (target) {\r\n        while (target.tagName !== 'TD' && target.tagName !== 'TH' && target.parentNode) {\r\n            target = target.parentNode\r\n        }\r\n        return target\r\n    }\r\n\r\n    constructor (tableEle, options = {}) {\r\n        this.opts = Object.assign({}, defaults, options)\r\n        this.tableEle = tableEle\r\n        this.tBody = tableEle.tBodies[0]\r\n        this.rows = this.tBody.rows\r\n        this.tableClassName = 'tableMergeCell'\r\n        this.menuEle = null\r\n        this.menus = [\r\n            /*{\r\n                name: '复制',\r\n                key: 'doCopy',\r\n            },\r\n            {\r\n                name: '粘贴',\r\n                key: 'doPaste',\r\n            },*/\r\n            {\r\n                name: '靠左',\r\n                key: 'textAlignLeft',\r\n            },\r\n            {\r\n                name: '居中',\r\n                key: 'textAlignCenter',\r\n            },\r\n            {\r\n                name: '靠右',\r\n                key: 'textAlignRight',\r\n            },\r\n            {\r\n                name: '设置背景色',\r\n                key: 'addBackgroundColor',\r\n            },\r\n            {\r\n                name: '删除背景色',\r\n                key: 'delBackgroundColor',\r\n            },\r\n            {\r\n                name: '合并单元格',\r\n                key: 'merge',\r\n            }, \r\n            {\r\n                name: '取消合并单元格',\r\n                key: 'unMerge',\r\n            },\r\n            {\r\n                name: '添加行',\r\n                key: 'addRow',\r\n            },\r\n            {\r\n                name: '删除行',\r\n                key: 'delRow',\r\n            },\r\n            {\r\n                name: '添加列',\r\n                key: 'addCol',\r\n            },\r\n            {\r\n                name: '删除列',\r\n                key: 'delCol',\r\n            },\r\n            {\r\n                name: '设置表头',\r\n                key: 'addTh',\r\n            },\r\n            {\r\n                name: '取消表头',\r\n                key: 'delTh',\r\n            },\r\n            {\r\n                name: '删除表格',\r\n                key: 'delTable',\r\n            },\r\n        ]\r\n        this.selectedCellClassName = 'tableMergeCell-selected'\r\n        this.ready = false\r\n        this.cellStart = null\r\n        this.cellEnd = null\r\n        this.indexStart = TableMergeCell.getIndexDefaultValue()\r\n        this.indexEnd = TableMergeCell.getIndexDefaultValue()\r\n        this.maxRowCount = 0\r\n        this.maxColCount = 0\r\n        this.contextmenuCell = null\r\n        this.init()\r\n    }\r\n\r\n    // 初始化\r\n    init () {\r\n        if (!this.tableEle && this.tableEle.ELEMENT_NODE !== 1 && this.tableEle.tagName !== 'TABLE') {\r\n            throw new Error('请传入table元素！')\r\n        }\r\n        this.tableEle.classList.add(this.tableClassName)\r\n        this.handleTableFromExcel()\r\n        this.addFocusEle()\r\n        // this.addCellLocation()\r\n        this.syncMaxRowAndColCount()\r\n        this.addEvent()\r\n    }\r\n\r\n    // 销毁\r\n    destroy () {\r\n        this.removeEvent()\r\n        if (this.menuEle) {\r\n            this.menuEle.removeEventListener('click', this.menuClick, false)\r\n            this.menuEle.remove()\r\n        }\r\n        TableMergeCell.focusEle && TableMergeCell.focusEle.remove()\r\n    }\r\n\r\n    // 补齐从excel复制粘贴过来的表格单元格\r\n    handleTableFromExcel () {\r\n        const [colgroup, tbody] = this.tableEle.children\r\n        if (colgroup.tagName === 'COLGROUP') {\r\n            const rows = tbody.children\r\n            const rowLen = rows.length\r\n            for (let i = 0; i < rowLen; i++) {\r\n                const row = rows[i]\r\n                const cells = row.cells\r\n                const colLen = cells.length\r\n                for (let j = 0; j < colLen; j++) {\r\n                    const cell = cells[j]\r\n                    const rowspan = cell.getAttribute('rowspan')\r\n                    const colspan = cell.getAttribute('colspan')\r\n                    if (rowspan >= 1) {\r\n                        for (let k = 1; k < rowspan; k++) {\r\n                            const newCell = rows[i + k].insertCell(j)\r\n                            newCell.style.display = 'none'\r\n                        }\r\n                    }\r\n                    if (colspan >= 1) {\r\n                        for (let k = 1; k < colspan; k++) {\r\n                            const newCell = row.insertCell(j + k)\r\n                            newCell.style.display = 'none'\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 创建焦点元素\r\n    addFocusEle () {\r\n        if (!TableMergeCell.focusEle) {\r\n            TableMergeCell.focusEle = document.createElement('button')\r\n            TableMergeCell.focusEle.className = 'tableMergeCell-focusEle'\r\n            document.body.appendChild(TableMergeCell.focusEle)\r\n        }\r\n    }\r\n\r\n    // 添加调试坐标\r\n    addCellLocation () {\r\n        const {rows} = this\r\n        rows.forEach((row, i) => {\r\n            const cells = row.children\r\n            cells.forEach((cell, j) => {\r\n                cell.textContent = i + '-' + j\r\n            })\r\n        })\r\n    }\r\n\r\n    // 同步最大行数和最大列数\r\n    syncMaxRowAndColCount () {\r\n        const {rows} = this\r\n        if (rows.length) {\r\n            this.maxRowCount = rows.length\r\n            this.maxColCount = rows[0].childElementCount\r\n        } else {\r\n            this.maxRowCount = 0\r\n            this.maxColCount = 0\r\n        }\r\n    }\r\n\r\n    // 添加背景色\r\n    colorChange = (e) => {\r\n        const {target} = e\r\n        const {value} = target\r\n        const {selectedCells} = this.colorPicker\r\n        if (selectedCells.length) {\r\n            selectedCells.forEach(ele => {\r\n                ele.style.backgroundColor = value\r\n            })\r\n        }\r\n        if (this.colorPicker) {\r\n            this.colorPicker.removeEventListener('input', this.colorChange)\r\n            this.colorPicker.remove()\r\n            this.colorPicker = null\r\n        }\r\n        this.removeClass()\r\n    }\r\n\r\n    // 显示颜色选择弹窗\r\n    addBackgroundColor () {\r\n        const selectedCells = this.getSelectedCells()\r\n        if (!selectedCells.length) return\r\n        this.colorPicker = document.createElement('input')\r\n        this.colorPicker.setAttribute('type', 'color')\r\n        this.colorPicker.className = 'tableMergeCell-colorPicker'\r\n        this.colorPicker.addEventListener('input', this.colorChange, false)\r\n        this.colorPicker.selectedCells = selectedCells\r\n        const selectedLastEle = selectedCells[selectedCells.length - 1]\r\n        selectedLastEle.appendChild(this.colorPicker)\r\n        this.colorPicker.click()\r\n    }\r\n\r\n    // 删除背景色\r\n    delBackgroundColor () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(ele => {\r\n            ele.style.removeProperty('background-color')\r\n        })\r\n    }\r\n\r\n    // 表中表\r\n    tableIsInTable (target) {\r\n        while (target && target.tagName !== 'TABLE') {\r\n            target = target.parentNode\r\n        }\r\n        return this.tableEle !== target && this.tableEle.contains(target)\r\n    }\r\n\r\n    // 为指定单元格添加类名\r\n    addClass (cell) {\r\n        if (!cell.className.includes(this.selectedCellClassName)) {\r\n            cell.classList.add(this.selectedCellClassName)\r\n        }\r\n    }\r\n\r\n    // 移除指定或选取元素类名\r\n    removeClass (cell) {\r\n        if (cell) {\r\n            cell.classList.remove(this.selectedCellClassName)\r\n            if (cell.className === '') {\r\n                cell.removeAttribute('class')\r\n            }\r\n        } else {\r\n            const selectedCells = this.tableEle.querySelectorAll('.tableMergeCell-selected')\r\n            if (selectedCells.length) {\r\n                selectedCells.forEach(item => {\r\n                    item.classList.remove(this.selectedCellClassName)\r\n                    if (item.className === '') {\r\n                        item.removeAttribute('class')\r\n                    }\r\n                })\r\n            }  \r\n        }\r\n    }\r\n\r\n    // 高亮选取的单元格\r\n    highlightSelectedCells () {\r\n        const {rows} = this\r\n        const isValid = this.selectedCellsIsValid(rows)\r\n        if (!isValid) return\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(ele => {\r\n            this.addClass(ele)\r\n        })\r\n    }\r\n\r\n    // 获取选取的单元格\r\n    getSelectedCells (isTwoDimensionalArray = false) {\r\n        const {indexStart, indexEnd} = this\r\n        let selectedCells = []\r\n        let selectedCellsTwoDimensionalArray = []\r\n        const {rows} = this\r\n        for (let i = 0; i < this.maxRowCount; i++) {\r\n            const tr = rows[i]\r\n            const {children} = tr\r\n            const childLen = children.length\r\n            let rowArray = []\r\n            for (let j = 0; j < childLen; j++) {\r\n                const cell = children[j]\r\n                if (i >= indexStart.row && i <= indexEnd.row && j >= indexStart.col && j <= indexEnd.col) {\r\n                    selectedCells.push(cell)\r\n                    rowArray.push(cell)\r\n                } \r\n            }\r\n            if (rowArray.length) {\r\n                selectedCellsTwoDimensionalArray.push(rowArray)\r\n            }\r\n        }\r\n\r\n        return isTwoDimensionalArray ? selectedCellsTwoDimensionalArray : selectedCells\r\n    }\r\n\r\n    // 判断选取的单元格是否有效\r\n    selectedCellsIsValid () {\r\n        const cellStart_rowspan = this.cellStart.getAttribute('rowspan')\r\n        const cellEnd_rowspan = this.cellEnd && this.cellEnd.getAttribute('rowspan')\r\n        // '不符合合并规则：选中区域不能包含已合并的单元格。'\r\n        if (cellStart_rowspan || cellEnd_rowspan) {\r\n            return false\r\n        } \r\n        const selectedCells = this.getSelectedCells()\r\n        const isInvalid = selectedCells.some(ele => {\r\n            return ele.style.display === 'none' || this.getIsMergedCellBool(ele)\r\n        })\r\n        // '不符合合并规则：不能有隐藏的单元格或合并的单元格。'\r\n        if (isInvalid) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    // 合并单元格\r\n    mergeCell = () => {\r\n        const selectedCells = this.getSelectedCells()\r\n        const {indexStart, indexEnd} = this\r\n        const rowspan = indexEnd.row - indexStart.row + 1\r\n        const colspan = indexEnd.col - indexStart.col + 1\r\n        selectedCells.forEach((ele, index) => {\r\n            if (index === 0) {\r\n                ele.setAttribute('rowspan', rowspan)\r\n                ele.setAttribute('colspan', colspan)\r\n            } else {\r\n                ele.style.display = 'none'\r\n            }\r\n            this.removeClass(ele)\r\n        })\r\n    }\r\n\r\n    // 取消合并单元格\r\n    unMergeCell = () => {\r\n        let cellSpanProperty = null\r\n        this.indexStart = this.getCellIndex(this.cellEnd)\r\n        cellSpanProperty = this.getCellSpanProperty(this.cellEnd)\r\n        this.indexEnd = {\r\n            row: cellSpanProperty.rowspan - 1 + this.indexStart.row,\r\n            col: cellSpanProperty.colspan - 1 + this.indexStart.col,\r\n        }\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach((ele, index) => {\r\n            if (index === 0) {\r\n                ele.removeAttribute('rowspan')\r\n                ele.removeAttribute('colspan')\r\n            } else {\r\n                ele.style.display = 'table-cell'\r\n            }\r\n            this.removeClass(ele)\r\n        })\r\n    }\r\n\r\n    // 获取单元格行列索引\r\n    getCellIndex (ele) {\r\n        let index = {\r\n            row: -1,\r\n            col: -1,\r\n        }\r\n        if (!this.cellStart) return index\r\n        const {tagName} = this.cellStart\r\n        const {rows} = this\r\n        if (tagName === 'TH') {\r\n            const firstTr = rows[0]\r\n            const {children} = firstTr\r\n            const childLen = children.length\r\n            index.row = 0\r\n            for (let j = 0; j < childLen; j++) {\r\n                const cell = children[j]\r\n                if (cell === ele) {\r\n                    index.col = j\r\n                    break\r\n                }\r\n            }\r\n        } else if (tagName === 'TD') {\r\n            for (let i = 0; i < this.maxRowCount; i++) {\r\n                const tr = rows[i]\r\n                const {children} = tr\r\n                const childLen = children.length\r\n                for (let j = 0; j < childLen; j++) {\r\n                    const cell = children[j]\r\n                    if (cell === ele) {\r\n                        index.row = i\r\n                        index.col = j\r\n                        break\r\n                    }\r\n                }\r\n                if (index.row > 0) {\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        \r\n        return index\r\n    }\r\n\r\n    // 获取单元格rowspan, colspan属性值\r\n    getCellSpanProperty (cell) {\r\n        let rowspan = cell.getAttribute('rowspan')\r\n        let colspan = cell.getAttribute('colspan')\r\n        rowspan = rowspan ? rowspan * 1 : 1\r\n        colspan = colspan ? colspan * 1 : 1\r\n        return {\r\n            rowspan,\r\n            colspan,\r\n        }\r\n    }\r\n\r\n    // 获取是否是合并过的单元格\r\n    getIsMergedCellBool (cell) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const maxCount = Math.max(rowspan, colspan)\r\n        return maxCount > 1\r\n    }\r\n\r\n    // 根据类名获取选取的单元格\r\n    getSelectedCellsByClassName () {\r\n        return Array.from(this.tableEle.querySelectorAll(`.${this.selectedCellClassName}`))\r\n    }\r\n\r\n    // 获取受影响的合并行索引数组\r\n    getMergedRowIndexArray (startRowIndex, rowspan) {\r\n        const endRowIndex = startRowIndex + rowspan - 1\r\n        let rowIndexArray = []\r\n        do {\r\n            rowIndexArray.push(startRowIndex)\r\n            startRowIndex++\r\n        } while (startRowIndex <= endRowIndex)\r\n        return rowIndexArray\r\n    }\r\n\r\n    // 获取受影响的合并列索引数组\r\n    getMergedColIndexArray (startColIndex, colspan) {\r\n        const endColIndex = startColIndex + colspan - 1\r\n        let colIndexArray = []\r\n        do {\r\n            colIndexArray.push(startColIndex)\r\n            startColIndex++\r\n        } while (startColIndex <= endColIndex)\r\n        return colIndexArray\r\n    }\r\n\r\n    // 控制右键菜单合并按钮是否可点击\r\n    handleMenuBtnMergeStatus (cell) {\r\n        const {btnDisabledColor} = this.opts\r\n        this.isMergedCell = this.getIsMergedCellBool(cell)\r\n        const selectedCells = this.getSelectedCellsByClassName()\r\n        if (!selectedCells.length) {\r\n            this.btn_merge.style.color = btnDisabledColor\r\n            this.btn_unMerge.style.color = btnDisabledColor\r\n        } else {\r\n            if (this.cellStart === this.cellEnd) {\r\n                if (this.cellEnd.getAttribute('rowspan') || this.cellEnd.getAttribute('colspan')) {\r\n                    this.btn_unMerge.style.removeProperty('color')\r\n                } else {\r\n                    this.btn_merge.style.color = btnDisabledColor\r\n                    this.btn_unMerge.style.color = btnDisabledColor\r\n                }\r\n            } else if (this.getIsMergedCellBool(cell)) {\r\n                this.btn_merge.style.color = btnDisabledColor\r\n                this.btn_unMerge.style.removeProperty('color')\r\n            } else {\r\n                this.btn_merge.style.removeProperty('color')\r\n                this.btn_unMerge.style.color = btnDisabledColor\r\n            }\r\n        }\r\n    }\r\n\r\n    // 控制右键菜单行按钮是否可点击\r\n    handleMenuBtnRowStatus (target) {\r\n        const {btnDisabledColor} = this.opts\r\n        if (target.tagName === 'TH') {\r\n            this.btn_addRow.style.color = btnDisabledColor\r\n        } else {\r\n            this.btn_addRow.style.removeProperty('color')\r\n        }\r\n        const {rowspan, colspan} = this.getCellSpanProperty(target)\r\n        if (rowspan > 1 || colspan > 1) {\r\n            this.btn_delRow.style.color = btnDisabledColor\r\n            this.btn_delCol.style.color = btnDisabledColor\r\n        } else {\r\n            this.btn_delRow.style.removeProperty('color')\r\n            this.btn_delCol.style.removeProperty('color')\r\n        }\r\n    }\r\n\r\n    // 当未选取单元格时，控制部分右键菜单项是否可点击\r\n    handleSomeMenuBtns () {\r\n        const {btnDisabledColor} = this.opts\r\n        const selectedCells = this.getSelectedCellsByClassName()\r\n        if (selectedCells.length) {\r\n            this.btn_textAlignLeft.style.removeProperty('color')\r\n            this.btn_textAlignCenter.style.removeProperty('color')\r\n            this.btn_textAlignRight.style.removeProperty('color')\r\n            this.btn_addBackgroundColor.style.removeProperty('color')\r\n            this.btn_delBackgroundColor.style.removeProperty('color')\r\n        } else {\r\n            this.btn_addBackgroundColor.style.color = btnDisabledColor\r\n            this.btn_delBackgroundColor.style.color = btnDisabledColor\r\n            this.btn_textAlignLeft.style.color = btnDisabledColor\r\n            this.btn_textAlignCenter.style.color = btnDisabledColor\r\n            this.btn_textAlignRight.style.color = btnDisabledColor\r\n        }\r\n    }\r\n\r\n    // 控制删除的列与关联列的关系\r\n    handleMergedCellByDelCol (index) {\r\n        const {rows} = this\r\n        const trLen = rows.length\r\n        for (let i = 0; i < trLen; i++) {\r\n            const row = rows[i]\r\n            const cells = row.children\r\n            const cellLen = cells.length\r\n            for (let j = 0; j < cellLen; j++) {\r\n                const cell = cells[j]\r\n                const {colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index > j && index < j + colspan) {\r\n                    cell.setAttribute('colspan', colspan - 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 删除表格\r\n    delTable () {\r\n        this.tableEle.remove()\r\n    }\r\n\r\n    // 删除空表格\r\n    delEmptyTable () {\r\n        const {rows} = this\r\n        if (!rows.length || !rows[0].children.length) {\r\n            this.delTable()\r\n        }\r\n    }\r\n\r\n    // 上面添加一行\r\n    addRow (index) {\r\n        const {maxColCount, tBody} = this\r\n        const relatedCellsArray = this.getRelatedMergedRowCells(index, 'addRow')\r\n        let colIndexArray = []\r\n        relatedCellsArray.forEach(cell => {\r\n            const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n            const {col} = this.getCellIndex(cell)\r\n            colIndexArray.push(...this.getMergedColIndexArray(col, colspan))\r\n            cell.setAttribute('rowspan', rowspan + 1)\r\n        })\r\n        const newRow = tBody.insertRow(index)\r\n        for (let i = 0; i < maxColCount; i++) {\r\n            newRow.insertCell(i)\r\n        }\r\n        colIndexArray.forEach(index => {\r\n            newRow.children[index].style.display = 'none'\r\n        })\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 获取相关的行合并单元格\r\n    getRelatedMergedRowCells (index, type) {\r\n        const {rows} = this\r\n        let relatedCellsArray = []\r\n        rows.forEach((row, rowIndex) => {\r\n            const cells = row.children\r\n            cells.forEach(cell => {\r\n                const {rowspan} = this.getCellSpanProperty(cell)\r\n                if (rowspan > 1 && this.rowIsInMergedRow(rowIndex, rowspan, index, type)) {\r\n                    relatedCellsArray.push(cell)\r\n                }\r\n            })\r\n        })\r\n        return relatedCellsArray\r\n    }\r\n\r\n    // 行是在合并单元格范围内\r\n    rowIsInMergedRow (startRowIndex, rowspan, willRowIndex, type) {\r\n        if (type === 'addRow') {\r\n            return willRowIndex > startRowIndex && willRowIndex <= startRowIndex + rowspan - 1\r\n        } else if (type === 'delRow') {\r\n            return willRowIndex >= startRowIndex && willRowIndex <= startRowIndex + rowspan - 1\r\n        }\r\n    }\r\n\r\n    // 左边添加一列\r\n    addCol (index) {\r\n        const {onAddCol} = this.opts\r\n        this.syncMaxRowAndColCount()\r\n\r\n        const {maxRowCount} = this\r\n        const {rows} = this\r\n        for (let i = 0; i < maxRowCount; i++) {\r\n            const row = rows[i]\r\n            const cell = row.children[index]\r\n            const newCell = cell.tagName === 'TH' ? '<th></th>' : '<td></td>'\r\n            cell.insertAdjacentHTML('beforebegin', newCell)\r\n        }\r\n\r\n        rows.forEach((row, rowIndex) => {\r\n            const cells = row.children\r\n            cells.forEach((cell, cellIndex) => {\r\n                const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index > cellIndex && index <= cellIndex + colspan - 1) {\r\n                    cell.setAttribute('colspan', colspan + 1)\r\n                    cells[index].style.display = 'none'\r\n                    let rowLen = rowspan\r\n                    let currentRowIndex = rowIndex\r\n                    while (rowLen > 1) {\r\n                        rows[++currentRowIndex].children[index].style.display = 'none'\r\n                        rowLen--\r\n                    }\r\n                }\r\n            })\r\n        })\r\n\r\n        this.syncMaxRowAndColCount()\r\n\r\n        onAddCol && onAddCol()\r\n    }\r\n\r\n    // 删除行\r\n    delRow (index) {\r\n        const {tBody, rows} = this\r\n        const relatedCellsArray = this.getRelatedMergedRowCells(index, 'delRow')\r\n        relatedCellsArray.forEach(cell => {\r\n            const {row, col} = this.getCellIndex(cell)\r\n            if (row === index) {\r\n                this.delFirstRow(rows, col, cell, index)\r\n            } else {\r\n                this.delOtherRow(cell)\r\n            }\r\n        })\r\n        tBody.deleteRow(index)\r\n        this.delEmptyTable()\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 删除非第一行\r\n    delOtherRow (cell) {\r\n        const {rowspan} = this.getCellSpanProperty(cell)\r\n        cell.setAttribute('rowspan', rowspan - 1)\r\n    }\r\n\r\n    // 删除第一行\r\n    delFirstRow (rows, col, cell, index) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const nextRow = rows[index + 1]\r\n        const nextCell = nextRow.children[col]\r\n        nextCell.setAttribute('rowspan', rowspan - 1)\r\n        nextCell.setAttribute('colspan', colspan)\r\n        nextCell.style.display = 'table-cell'\r\n    }\r\n\r\n    // 获取相关的列合并单元格\r\n    getRelatedMergedColCells (index) {\r\n        const {rows} = this\r\n        let relatedCellsArray = []\r\n        rows.forEach(row => {\r\n            const cells = row.children\r\n            cells.forEach((cell, cellIndex) => {\r\n                const {colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index >= cellIndex && index <= cellIndex + colspan - 1) {\r\n                    relatedCellsArray.push(cell)\r\n                }\r\n            })\r\n        })\r\n        return relatedCellsArray\r\n    }\r\n\r\n    // 删除非第一列\r\n    delOtherCol (cell) {\r\n        const {colspan} = this.getCellSpanProperty(cell)\r\n        cell.setAttribute('colspan', colspan - 1)\r\n    }\r\n\r\n    // 删除第一列\r\n    delFirstCol (cell) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const nextCell = cell.nextElementSibling\r\n        nextCell.setAttribute('colspan', colspan - 1)\r\n        nextCell.setAttribute('rowspan', rowspan)\r\n        nextCell.style.display = 'table-cell'\r\n    }\r\n\r\n    // 删除列\r\n    delCol (index) {\r\n        const {rows} = this\r\n        const relatedCellsArray = this.getRelatedMergedColCells(index)\r\n        relatedCellsArray.forEach(cell => {\r\n            const {col} = this.getCellIndex(cell)\r\n            if (col === index) {\r\n                this.delFirstCol(cell)\r\n            } else {\r\n                this.delOtherCol(cell)\r\n            }\r\n        })\r\n        rows.forEach(row => {\r\n            row.deleteCell(index)\r\n        })\r\n        this.delEmptyTable()\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 添加表头\r\n    addTh () {\r\n        const firstTr = this.rows[0]\r\n        const {children} = firstTr\r\n        let tr = document.createElement('tr')\r\n        if (children[0].tagName === 'TD') {\r\n            const len = children.length\r\n            for (let i = 0; i < len; i++) {\r\n                const cell = children[i]\r\n                if (this.getIsMergedCellBool(cell)) {\r\n                    alert('请先取消第一行合并的单元格！')\r\n                    break\r\n                }\r\n                const th = document.createElement('th')\r\n                th.innerHTML = cell.innerHTML\r\n                tr.appendChild(th)\r\n            }\r\n            if (tr.childElementCount === len) {\r\n                firstTr.innerHTML = tr.innerHTML\r\n            }\r\n        }\r\n    }\r\n\r\n    // 删除表头\r\n    delTh () {\r\n        const firstTr = this.rows[0]\r\n        const {children} = firstTr\r\n        let tr = document.createElement('tr')\r\n        if (children[0].tagName === 'TH') {\r\n            children.forEach(cell => {\r\n                const td = document.createElement('td')\r\n                td.innerHTML = cell.innerHTML\r\n                tr.appendChild(td)\r\n            })\r\n            firstTr.innerHTML = tr.innerHTML\r\n        }\r\n    }\r\n\r\n    // 靠左\r\n    textAlignLeft () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'left'\r\n        })\r\n    }\r\n\r\n    // 居中\r\n    textAlignCenter () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'center'\r\n        })\r\n    }\r\n\r\n    // 靠右\r\n    textAlignRight () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'right'\r\n        })\r\n    }\r\n\r\n    // 右击拷贝\r\n    /*doCopy () {\r\n        // const evt = document.createEvent('UIEvents')\r\n        // evt.initEvent('copy', true, true)\r\n        // document.dispatchEvent(evt)\r\n\r\n        const evt = new Event('ClipboardEvent')\r\n        evt.initEvent('copy', true, true)\r\n        document.dispatchEvent(evt)\r\n    }*/\r\n\r\n    // 右击粘贴\r\n    /*doPaste () {\r\n        // const evt = document.createEvent('UIEvents')\r\n        // evt.initEvent('paste', true, true)\r\n        // document.dispatchEvent(evt)\r\n\r\n        const evt = new Event('ClipboardEvent')\r\n        evt.initEvent('paste', true, true)\r\n        document.dispatchEvent(evt)\r\n    }*/\r\n\r\n    // 点击右键菜单项时\r\n    menuClick = (e) => {\r\n        const {target} = e\r\n        const color1 = window.getComputedStyle(target).color\r\n        const color2 = TableMergeCell.colorToRgb(this.opts.btnDisabledColor)\r\n        if (color1 === color2) return\r\n        const key = target.dataset.key\r\n        const {row, col} = this.getCellIndex(this.contextmenuCell)\r\n        switch (key) {\r\n            /*case 'doCopy':\r\n                this.doCopy()\r\n                break\r\n            case 'doPaste':\r\n                this.doPaste()\r\n                break*/\r\n            case 'textAlignLeft':\r\n                this.textAlignLeft()\r\n                break\r\n            case 'textAlignCenter':\r\n                this.textAlignCenter()\r\n                break\r\n            case 'textAlignRight':\r\n                this.textAlignRight()\r\n                break\r\n            case 'addBackgroundColor':\r\n                this.addBackgroundColor()\r\n                break\r\n            case 'delBackgroundColor':\r\n                this.delBackgroundColor()\r\n                break\r\n            case 'delTable':\r\n                this.delTable()\r\n                break\r\n            case 'addRow':\r\n                this.addRow(row)\r\n                break\r\n            case 'delRow':\r\n                this.delRow(row)\r\n                break\r\n            case 'addCol':\r\n                this.addCol(col)\r\n                break\r\n            case 'delCol':\r\n                this.delCol(col)\r\n                break\r\n            case 'addTh':\r\n                this.addTh()\r\n                break\r\n            case 'delTh':\r\n                this.delTh()\r\n                break\r\n            case 'merge':\r\n                this.mergeCell()\r\n                break\r\n            case 'unMerge':\r\n                this.unMergeCell()\r\n                break\r\n        }\r\n        if (this.menuEle) {\r\n            this.menuEle.style.display = 'none'\r\n        }\r\n    }\r\n\r\n    mousedown = (e) => {\r\n        let {target, button} = e\r\n        if (this.tableIsInTable(target) || button !== 0) return\r\n        target = TableMergeCell.getTargetParentCell(target)\r\n        const {tagName} = target\r\n        if (tagName === 'TD' || tagName === 'TH') {\r\n            this.ready = true\r\n            this.cellStart = target\r\n            this.indexStart = this.getCellIndex(target)\r\n            this.removeClass()\r\n            this.addClass(target)\r\n        }\r\n    }\r\n\r\n    // 移除一些特征\r\n    removeSomeNoSelfIsClicked = (e) => {\r\n        const {target} = e\r\n        // 隐藏右键菜单\r\n        if (this.menuEle && !this.menuEle.contains(target)) {\r\n            this.menuEle.style.display = 'none'\r\n        }\r\n        // 未点击表格时（且未点击右键菜单的添加背景色）移除高亮单元格\r\n        const key = target.dataset.key\r\n        if (!this.tableEle.contains(target) && key !== 'addBackgroundColor') {\r\n            this.removeClass()\r\n        }\r\n        // 移除背景色设置输入框\r\n        if (this.colorPicker) {\r\n            this.colorPicker.remove()\r\n        }\r\n    }\r\n\r\n    mousemove = (e) => {\r\n        if (this.ready) {\r\n            let {target} = e\r\n            target = TableMergeCell.getTargetParentCell(target)\r\n            if (!this.tableEle.contains(target)) return\r\n            this.cellEnd = target\r\n            this.indexEnd = this.getCellIndex(target)\r\n            this.removeClass()\r\n            this.highlightSelectedCells()\r\n            const selection = window.getSelection()\r\n            if (this.cellStart !== this.cellEnd) {\r\n                selection.collapseToEnd()\r\n            }\r\n        }\r\n    }\r\n\r\n    mouseup = (e) => {\r\n        let {target, button} = e\r\n        if (button === 0 && this.ready) {\r\n            target = TableMergeCell.getTargetParentCell(target)\r\n            this.cellEnd = target\r\n            this.indexEnd = this.getCellIndex(target)\r\n            this.ready = false\r\n            if (this.cellStart !== this.cellEnd) {\r\n                TableMergeCell.focusEle && TableMergeCell.focusEle.focus()\r\n            }\r\n        }\r\n    }\r\n\r\n    tableClick = (e) => {\r\n        const {target, button} = e\r\n        if (button === 0 && target.tagName !== 'INPUT' && this.tableEle.contains(target)) {\r\n            e.stopPropagation()\r\n        }\r\n    }\r\n\r\n    contextmenu = (e) => {\r\n        e.preventDefault()\r\n        const {target, clientX, clientY} = e\r\n        if (this.tableIsInTable(target)) return\r\n        if (!this.menuEle) {\r\n            this.menuEle = document.createElement('ul')\r\n            this.menuEle.classList.add('tableMergeCell-contextmenu')\r\n            this.menuEle.addEventListener('click', this.menuClick, false)\r\n\r\n            this.menus.forEach(item => {\r\n                const li = document.createElement('li')\r\n                const {name, key} = item\r\n                li.textContent = name\r\n                li.dataset.key = key\r\n                this[`btn_${key}`] = li\r\n                this.menuEle.appendChild(li)\r\n            })\r\n\r\n            document.body.appendChild(this.menuEle)\r\n            const {width, height} = this.menuEle.getBoundingClientRect()\r\n            this.menuEle.dataset.width = width\r\n            this.menuEle.dataset.height = height\r\n        }\r\n        \r\n        const {clientWidth, clientHeight} = document.documentElement\r\n        const {width, height} = this.menuEle.dataset\r\n        const diffX = clientWidth - clientX\r\n        const diffY = clientHeight - clientY\r\n        if (diffX < width) {\r\n            this.menuEle.style.right = '10px'\r\n            this.menuEle.style.removeProperty('left')\r\n        } else {\r\n            this.menuEle.style.left = `${clientX}px`\r\n            this.menuEle.style.removeProperty('right')\r\n        }\r\n        if (diffY < height) {\r\n            this.menuEle.style.height = `${diffY - 10}px`\r\n        } else {\r\n            this.menuEle.style.removeProperty('height')\r\n        }\r\n        this.menuEle.style.top = `${clientY}px`\r\n        this.menuEle.style.display = 'block'\r\n        this.contextmenuCell = target\r\n        this.handleMenuBtnMergeStatus(target)\r\n        this.handleMenuBtnRowStatus(target)\r\n        this.handleSomeMenuBtns(target)\r\n    }\r\n\r\n    copy = (e) => {\r\n        const selectionStr = window.getSelection().toString()\r\n        if (selectionStr) {\r\n            TableMergeCell.copyedContent = selectionStr\r\n        } else {\r\n            e.preventDefault()\r\n            const selectedCells = this.getSelectedCells()\r\n            if (!selectedCells.length) return\r\n            let arr = []\r\n            selectedCells.forEach(cell => {\r\n                arr.push(cell.outerHTML)\r\n            })\r\n            TableMergeCell.copyedContent = arr.join(TableMergeCell.separator)\r\n            if (e.clipboardData) {\r\n                e.clipboardData.setData('text/plain', TableMergeCell.copyedContent)\r\n            } else if (window.clipboardData) {\r\n                window.clipboardData.setData('text', TableMergeCell.copyedContent)\r\n            }\r\n\r\n            // 记录行列范围\r\n            TableMergeCell.copyedIndexRange = {\r\n                indexStart: this.indexStart,\r\n                indexEnd: this.indexEnd,\r\n            }\r\n            // 二维数组记录复制的单元格\r\n            TableMergeCell.copyedCellsArray = this.getSelectedCells(true)\r\n        }\r\n    }\r\n\r\n    pasteWithRule (targetCells, resourceCells) {\r\n        const lenT = targetCells.length\r\n        const lenR = resourceCells.length\r\n        if (lenT === 1 && lenR === 1) {\r\n            const cellT = targetCells[0]\r\n            const cellR = resourceCells[0]\r\n            const spans = this.getCellSpanProperty(cellT)\r\n            const rowspanT = spans.rowspan\r\n            const colspanT = spans.colspan\r\n            const m1 = cellR.match(/rowspan=\"(\\d+)\"/)\r\n            const m2 = cellR.match(/colspan=\"(\\d+)\"/)\r\n            let rowspanR = 0, colspanR = 0\r\n            if (m1 && m1[1]) {\r\n                rowspanR = m1[1] * 1\r\n            }\r\n            if (m2 && m2[1]) {\r\n                colspanR = m2[1] * 1\r\n            }\r\n            if (rowspanT === rowspanR && colspanT === colspanR) {\r\n                cellT.outerHTML = cellR\r\n            } else {\r\n                if ((rowspanR > 1 || colspanR > 1) && (rowspanT <= 1 && colspanT <= 1)) {\r\n                    cellT.outerHTML = cellR.replace(/rowspan.+?\\s/, '').replace(/colspan.+?\\s/, '')\r\n                } else if ((rowspanT > 1 || colspanT > 1) && (rowspanR <= 1 && colspanR <= 1)) {\r\n                    cellT.outerHTML = cellR.replace('<td', `<td colspan=\"${colspanT}\"`).replace('<td', `<td rowspan=\"${rowspanT}\"`)\r\n                }\r\n            }\r\n        } else if (lenT === lenR) { // 多对多（长度相等）\r\n            for (let i = 0; i < lenT; i++) {\r\n                const cellT = targetCells[i]\r\n                const cellR = resourceCells[i]\r\n                const spans = this.getCellSpanProperty(cellT)\r\n                const rowspanT = spans.rowspan\r\n                const colspanT = spans.colspan\r\n                const m1 = cellR.match(/rowspan=\"(\\d+)\"/)\r\n                const m2 = cellR.match(/colspan=\"(\\d+)\"/)\r\n                let rowspanR = 0, colspanR = 0\r\n                if (m1 && m1[1]) {\r\n                    rowspanR = m1[1] * 1\r\n                }\r\n                if (m2 && m2[1]) {\r\n                    colspanR = m2[1] * 1\r\n                }\r\n                if (rowspanT === rowspanR && colspanT === colspanR) {\r\n                    cellT.outerHTML = cellR\r\n                }\r\n            }\r\n        } else if (lenR > lenT && lenT === 1) { // 多对一（简化多对多操作）\r\n            const index = this.indexStart\r\n            const {indexStart, indexEnd} = TableMergeCell.copyedIndexRange\r\n            const pastedIndexRange = {\r\n                indexStart: index,\r\n                indexEnd: {\r\n                    row: index.row + indexEnd.row - indexStart.row,\r\n                    col: index.col + indexEnd.col - indexStart.col,\r\n                }\r\n            }\r\n            const rowStart = pastedIndexRange.indexStart.row\r\n            const rowEnd = pastedIndexRange.indexEnd.row\r\n            const colStart = pastedIndexRange.indexStart.col\r\n            const colEnd = pastedIndexRange.indexEnd.col\r\n            const {rows} = this\r\n            for (let i = rowStart, k = 0; i <= rowEnd; i++, k++) {\r\n                const row = rows[i]\r\n                if (!row) continue\r\n                const cols = row.children\r\n                for (let j = colStart, h = 0; j <= colEnd; j++, h++) {\r\n                    const col = cols[j]\r\n                    if (!col) continue\r\n                    const copyedCell = TableMergeCell.copyedCellsArray[k][h]\r\n                    const {rowspan, colspan} = this.getCellSpanProperty(col)\r\n                    if (rowspan <= 1 && colspan <= 1) {\r\n                        col.outerHTML = copyedCell.outerHTML\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    paste = (e) => {\r\n        const selectedCells = this.getSelectedCells()\r\n        if (!selectedCells.length) return\r\n        if (/<.+>/.test(TableMergeCell.copyedContent)) {\r\n            e.preventDefault()\r\n            const clipboardData = e.clipboardData || window.clipboardData\r\n            const data = clipboardData.getData('text')\r\n            const arr = data.split(TableMergeCell.separator)\r\n            this.pasteWithRule(selectedCells, arr)\r\n            this.indexStart = TableMergeCell.getIndexDefaultValue()\r\n            this.indexEnd = TableMergeCell.getIndexDefaultValue()\r\n        }\r\n    }\r\n\r\n    keydown = (e) => {\r\n        const {key} = e\r\n        if (key === 'Delete') {\r\n            const selectedCells = this.getSelectedCells()\r\n            selectedCells.forEach(cell => {\r\n                cell.innerHTML = ''\r\n            })\r\n        }\r\n    }\r\n\r\n    addEvent () {\r\n        window.addEventListener('mousedown', this.mousedown, false)\r\n        window.addEventListener('mousedown', this.removeSomeNoSelfIsClicked, false)\r\n        window.addEventListener('mousemove', this.mousemove, false)\r\n        window.addEventListener('mouseup', this.mouseup, false)\r\n        this.tableEle.addEventListener('click', this.tableClick, false)\r\n        this.tableEle.addEventListener('contextmenu', this.contextmenu, false)\r\n        window.addEventListener('copy', this.copy, false)\r\n        window.addEventListener('paste', this.paste, false)\r\n        window.addEventListener('keydown', this.keydown, true)\r\n    }\r\n\r\n    removeEvent () {\r\n        window.removeEventListener('mousedown', this.mousedown, false)\r\n        window.removeEventListener('mousedown', this.removeSomeNoSelfIsClicked, false)\r\n        window.removeEventListener('mousemove', this.mousemove, false)\r\n        window.removeEventListener('mouseup', this.mouseup, false)\r\n        this.tableEle.removeEventListener('click', this.tableClick, false)\r\n        this.tableEle.removeEventListener('contextmenu', this.contextmenu, false)\r\n        window.removeEventListener('copy', this.copy, false)\r\n        window.removeEventListener('paste', this.paste, false)\r\n        window.removeEventListener('keydown', this.keydown, true)\r\n    }\r\n}\r\n","/* eslint-disable */\r\nconst defaults = {\r\n    colMinWidth: 50, // 列最小宽度\r\n}\r\n\r\nexport default class ColumnResizer {\r\n    constructor (tableEle, options = {}) {\r\n        this.opts = Object.assign({}, defaults, options)\r\n        this.tableEle = tableEle\r\n        this.tableEle.columnResizer = Object.assign({}, {reset: this.reset})\r\n        this.handshank = null\r\n        this.handshankCls = 'tableMergeCell-handshank'\r\n        this.subline = 'tableMergeCell-subline'\r\n        this.handshankHover = 'tableMergeCell-handshank-hover'\r\n        this.init()\r\n    }\r\n\r\n    // 初始化\r\n    init () {\r\n        if (!this.tableEle || this.tableEle.ELEMENT_NODE !== 1 || this.tableEle.tagName !== 'TABLE') {\r\n            throw new Error('请传入table元素！')\r\n        }\r\n        this.getDefaultWidth()\r\n        this.setDefaultWidth()\r\n        this.addResizeHandShank()\r\n        this.addEvent()\r\n    }\r\n\r\n    destroy () {\r\n        this.removeEvent()\r\n    }\r\n\r\n    // 获取表格与列宽默认值\r\n    getDefaultWidth () {\r\n        const {width} = this.tableEle.getBoundingClientRect()\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const colCount = rows[0].childElementCount\r\n        this.average = width / colCount\r\n        this.tableWidth = width\r\n    }\r\n\r\n    // 重置相关内容\r\n    reset = () => {\r\n        this.addResizeHandShank()\r\n        this.setDefaultWidth()\r\n    }\r\n\r\n    // 初始化默认宽\r\n    setDefaultWidth () {\r\n        this.setTableWidth(this.tableWidth)\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const firstRowCells = rows[0].children\r\n        firstRowCells.forEach(cell => {\r\n            const width = cell.style.width\r\n            if (!width) {\r\n                cell.style.width = `${this.average}px`\r\n            }\r\n        })\r\n    }\r\n\r\n    // 增加列调整手柄\r\n    addResizeHandShank () {\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const cells = rows[0].children\r\n        cells.forEach((cell, index) => {\r\n            const handshank = cell.querySelector(`.${this.handshankCls}`)\r\n            handshank && handshank.remove()\r\n            const i = `<i data-col=\"${index}\" contenteditable=\"false\" class=\"${this.handshankCls}\"></i>`\r\n            cell.insertAdjacentHTML('beforeend', i)\r\n        })\r\n    }\r\n\r\n    // 增加辅助线\r\n    addSubline () {\r\n        this.handshank.classList.add(this.subline)\r\n        // this.tableEle.style.overflow = 'hidden'\r\n    }\r\n\r\n    // 移除辅助线\r\n    removeSubline () {\r\n        this.handshank.classList.remove(this.subline)\r\n        // this.tableEle.style.overflow = 'initial'\r\n    }\r\n\r\n    // 设置表格宽\r\n    setTableWidth (width) {\r\n        this.tableEle.setAttribute('width', `${width}px`)\r\n    }\r\n\r\n    // 获取列宽和\r\n    getColsWidth () {\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const cells = rows[0].children\r\n        const arr = Array.from(cells).map(cell => {\r\n            return Number.parseFloat(cell.style.width)\r\n        })\r\n        const width = arr.reduce((acc, cur) => {\r\n            return acc + cur\r\n        })\r\n        return width\r\n    }\r\n\r\n    mousedown = (e) => {\r\n        const {target, button, clientX} = e\r\n        if (button === 0 && target.className.includes(this.handshankCls)) {\r\n            this.handshank = target\r\n            this.handshank.classList.add(this.handshankHover)\r\n            this.clientX = clientX\r\n            this.addSubline()\r\n        } else {\r\n            this.handshank = null\r\n        }\r\n    }\r\n\r\n    mousemove = (e) => {\r\n        if (this.handshank) {\r\n            e.preventDefault()\r\n            const {clientX} = e\r\n            this.diff = clientX - this.clientX\r\n            this.handshank.style.transform = `translateX(${this.diff}px)`\r\n        }\r\n    }\r\n\r\n    mouseup = (e) => {\r\n        if (this.handshank) {\r\n            const {clientX} = e\r\n            const firstRow = this.tableEle.tBodies[0].rows[0]\r\n            const index = this.handshank.dataset.col\r\n            const currentCol = firstRow.children[index]\r\n            const {width} = currentCol.getBoundingClientRect()\r\n            const calcWidth = width + this.diff\r\n            const {colMinWidth} = this.opts\r\n            const newWidth = Math.max(colMinWidth, calcWidth)\r\n            if (this.tableEle.contains(this.handshank) && clientX - this.clientX !== 0) {\r\n                currentCol.style.width = `${newWidth}px`\r\n            }\r\n            this.handshank.style.transform = 'none'\r\n            this.handshank.classList.remove(this.handshankHover)\r\n            this.removeSubline()\r\n            const colsWidth = this.getColsWidth()\r\n            this.setTableWidth(colsWidth)\r\n            this.handshank = null\r\n        }\r\n    }    \r\n\r\n    addEvent () {\r\n        window.addEventListener('mousedown', this.mousedown, false)\r\n        window.addEventListener('mousemove', this.mousemove, false)\r\n        window.addEventListener('mouseup', this.mouseup, false)\r\n    }\r\n\r\n    removeEvent () {\r\n        window.removeEventListener('mousedown', this.mousedown, false)\r\n        window.removeEventListener('mousemove', this.mousemove, false)\r\n        window.removeEventListener('mouseup', this.mouseup, false)\r\n    }\r\n}\r\n","/* eslint-disable */\r\nimport TableMergeCell from '@/assets/tableMergeCell/tableMergeCell'\r\nimport '@/assets/tableMergeCell/tableMergeCell.less'\r\nimport ColumnResizer from '@/assets/columnResizer/columnResizer'\r\nimport '@/assets/columnResizer/columnResizer.less'\r\n\r\nexport const wangEditorTableExtend = {\r\n    mounted() {\r\n        this.$nextTick(() => {\r\n            this.addInsertTableIconlistener()\r\n            this.addPasteTableListener()\r\n        })\r\n    },\r\n    updated() {\r\n        this.$nextTick(() => {\r\n            this.initTableInteraction()\r\n        })\r\n    },\r\n    methods: {\r\n        initTableInteraction() {\r\n            if (!this.$refs.editor) {\r\n                throw new Error('请为wangEditor富文本容器元素提供ref=\"editor\"属性')\r\n            }\r\n            const tableIsInTable = (target) => {\r\n                while (target && target.parentNode && target.parentNode.tagName !== 'TABLE') {\r\n                    target = target.parentNode\r\n                }\r\n                return target.parentNode\r\n            }\r\n            this.tables = this.$refs.editor.querySelectorAll('.w-e-text table')\r\n            this.tables.forEach(table => {\r\n                if (!tableIsInTable(table)) {\r\n                    if (!table.tableMergeCellInstance) {\r\n                        table.tableMergeCellInstance = new TableMergeCell(table, {\r\n                            onAddCol: () => {\r\n                                table.columnResizer.reset()\r\n                            },\r\n                        })\r\n                    }\r\n                    if (!table.tableColumnResizerInstance) {\r\n                        table.tableColumnResizerInstance = new ColumnResizer(table)\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        addInsertTextListener(e) {\r\n            this.insertText = this.iconTable.querySelector('button.right')\r\n            this.insertText && this.insertText.addEventListener('click', this.initTableInteraction, false)\r\n        },\r\n        addInsertTableIconlistener() {\r\n            this.iconTable = this.$refs.editor.querySelector(\"[data-title='表格']\")\r\n            this.iconTable && this.iconTable.addEventListener('click', this.addInsertTextListener, false)\r\n        },\r\n        addPasteTableListener() {\r\n            this.$refs.editor.addEventListener('paste', (e) => {\r\n                const pasteData = (event.clipboardData || window.clipboardData).getData('text/html')\r\n                if (pasteData && pasteData.includes('<table')) {\r\n                    this.initTableInteraction()\r\n                }\r\n            }, false)\r\n        },\r\n    },\r\n    beforeDestroy() {\r\n        this.tables && this.tables.forEach(table => {\r\n            if (table.tableMergeCellInstance) {\r\n                table.tableMergeCellInstance.destroy()\r\n            }\r\n            if (table.tableColumnResizerInstance) {\r\n                table.tableColumnResizerInstance.destroy()\r\n            }\r\n        })\r\n        this.tables = null\r\n\r\n        if (this.iconTable) {\r\n            this.iconTable.removeEventListener('click', this.addInsertTextListener, false)\r\n        }\r\n        if (this.insertText) {\r\n            this.insertText.removeEventListener('click', this.initTableInteraction, false)\r\n        }\r\n    },\r\n}\r\n\r\nexport const handleTable = (table) => {\r\n    console.log(table)\r\n    const wrap = document.createElement('div')\r\n    wrap.innerHTML = table.outerHTML\r\n    wrap.style.overflowX = 'auto'\r\n    const parentWrap = table.parentNode\r\n    parentWrap.replaceChild(wrap, table)\r\n}\r\n","<template>\n    <div>\n        <div ref=\"editor\">\n            <div v-html=\"backendHTML\"></div>\n        </div>\n        <button type=\"button\" id=\"btn1\" @click=\"getHtml\">获取html</button>\n        <button type=\"button\" id=\"btn2\" @click=\"setHtml\">设置html</button>\n        <div ref=\"newHtml\" class=\"newHtml\"></div>\n    </div>\n</template>\n<script>\n/* eslint-disable */\nimport E from 'wangeditor'\nimport { wangEditorTableExtend } from '@/assets/tool'\nexport default {\n    name: 'about',\n    mixins: [wangEditorTableExtend],\n    data () {\n        return {\n            backendHTML: '',\n        }\n    },\n    /*created () {\n        setTimeout(() => {\n            this.backendHTML = '<table border=\"0\" width=\"1882.953125px\" cellpadding=\"0\" cellspacing=\"0\" class=\"tableMergeCell\"><tbody><tr><th style=\"width: 376.4px;\" class=\"tableMergeCell-selected\">0-0 <i data-col=\"0\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th style=\"width: 376.4px;\">0-1 <i data-col=\"1\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th style=\"width: 376.4px;\">0-2 <i data-col=\"2\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th style=\"width: 376.4px;\">0-3 <i data-col=\"3\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th style=\"width: 376.4px;\">0-4 <i data-col=\"4\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th></tr><tr><td rowspan=\"2\" colspan=\"1\">1-0</td><td>这是一段中玉设计院内容</td><td>1-2</td><td>1-3</td><td>1-4</td></tr><tr><td style=\"display: none;\">2-0</td><td style=\"background-color: rgb(242, 151, 151);\">2-1</td><td style=\"background-color: rgb(242, 151, 151);\">2-2</td><td>2-3</td><td>2-4</td></tr><tr><td>3-0</td><td style=\"background-color: rgb(242, 151, 151);\">3-1</td><td style=\"background-color: rgb(242, 151, 151);\">3-2</td><td>3-3</td><td>3-4</td></tr><tr><td>4-0</td><td>4-1</td><td>4-2</td><td>4-3</td><td>4-4</td></tr></tbody></table>'\n        }, 2000)\n    },*/\n    mounted() {\n        this.initEditor()\n    },\n    methods: {\n        getHtml() {\n            this.newHtml = this.editor.txt.html()\n            this.$refs.newHtml.innerHTML = this.newHtml\n        },\n        setHtml() {\n            // this.newHtml = ``\n            this.editor.txt.html(this.newHtml)\n        },\n        initEditor() {\n            this.editor = new E(this.$refs.editor)\n\n            /*this.editor.config.onchange = (newHtml) => {\n                console.log(\"change 之后最新的 newHtml\", newHtml)\n            };*/\n            this.editor.config.onchangeTimeout = 200; // 修改为 500ms\n            this.editor.create()\n        },\n    },\n}\n</script>\n<style>\n.newHtml {\n    border-collapse: collapse;\n}\n\n.newHtml th,\n.newHtml td {\n    height: 30px;\n    border: 1px solid #eee;\n}\n\n.w-e-text-container {\n    height: 330px !important;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=75ddf123&\"\nimport script from \"./About.vue?vue&type=script&lang=js&\"\nexport * from \"./About.vue?vue&type=script&lang=js&\"\nimport style0 from \"./About.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport About from '../views/About.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: About,\n  },\n  // {\n  //   path: '/about',\n  //   name: 'about',\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\n  // },\n  // {\n  //   path: '/redips',\n  //   name: 'redips',\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/Redips.vue')\n  // }\n]\n\nconst router = new VueRouter({\n  routes\n})\n\nexport default router\n","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\n/*import {Modal} from 'ant-design-vue'\r\nimport 'ant-design-vue/lib/modal/style/css'\r\nVue.use(Modal)\r\nVue.prototype.$confirm = Modal.confirm\r\nVue.prototype.$info = Modal.info*/\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}