{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?059b","webpack:///./src/App.vue","webpack:///./src/views/About.vue?8142","webpack:///./src/assets/tableMergeCell/tableMergeCell.js","webpack:///./src/assets/columnResizer/columnResizer.js","webpack:///./src/assets/tool.js","webpack:///src/views/About.vue","webpack:///./src/views/About.vue?f1da","webpack:///./src/views/About.vue","webpack:///./src/router/index.js","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?c650","webpack:///./src/views/About.vue?2fad"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticRenderFns","script","component","ref","domProps","_s","on","getHtml","setHtml","staticClass","defaults","btnDisabledColor","onAddCol","onDelCol","TableMergeCell","tableEle","options","e","target","selectedCells","colorPicker","forEach","ele","style","backgroundColor","removeEventListener","colorChange","remove","removeClass","getSelectedCells","len","indexStart","indexEnd","rowspan","row","colspan","col","firstHasValueCell","cell","innerText","index","setAttribute","innerHTML","removeAttribute","getAttribute","display","cellSpanProperty","getCellIndex","cellEnd","getCellSpanProperty","removeProperty","color1","getComputedStyle","color","color2","colorToRgb","opts","dataset","contextmenuCell","textAlignLeft","textAlignCenter","textAlignRight","addBackgroundColor","delBackgroundColor","delTable","addRow","delRow","addCol","delCol","addTh","delTh","mergeCell","unMergeCell","menuEle","button","contains","tableIsInTable","isTheadChild","getTargetParentCell","tagName","ready","cellStart","addClass","className","includes","highlightSelectedCells","selection","getSelection","collapseToEnd","stopPropagation","preventDefault","clientX","clientY","document","createElement","classList","add","addEventListener","menuClick","menus","item","li","textContent","appendChild","body","getBoundingClientRect","width","height","documentElement","clientWidth","clientHeight","diffX","diffY","right","left","top","handleMenuBtnMergeStatus","handleMenuBtnRowStatus","handleSomeMenuBtns","selectionStr","toString","clipboardData","setData","copyedCellsArray","items","getData","excelData","handleExcelData","handlePaste","getIndexDefaultValue","assign","tBody","tBodies","rows","tableClassName","selectedCellClassName","maxRowCount","maxColCount","init","span","removeChild","parentNode","values","replace","substring","arr1","split","res","arr2","ELEMENT_NODE","Error","handleTableFromExcel","addCellLocation","syncMaxRowAndColCount","addEvent","removeEvent","children","colgroup","tbody","rowLen","cells","colLen","k","newCell","insertCell","childElementCount","selectedLastEle","click","querySelectorAll","isValid","selectedCellsIsValid","isTwoDimensionalArray","selectedCellsTwoDimensionalArray","tr","childLen","rowArray","cellStart_rowspan","cellEnd_rowspan","isInvalid","some","getIsMergedCellBool","firstTr","maxCount","Math","max","Array","from","startRowIndex","endRowIndex","rowIndexArray","startColIndex","endColIndex","colIndexArray","isMergedCell","getSelectedCellsByClassName","btn_unMerge","btn_merge","btn_addRow","btn_delRow","btn_delCol","btn_textAlignLeft","btn_textAlignCenter","btn_textAlignRight","btn_addBackgroundColor","btn_delBackgroundColor","btn_addCol","trLen","cellLen","relatedCellsArray","getRelatedMergedRowCells","getMergedColIndexArray","newRow","insertRow","type","rowIndex","rowIsInMergedRow","willRowIndex","insertAdjacentHTML","cellIndex","currentRowIndex","delFirstRow","delOtherRow","deleteRow","delEmptyTable","nextRow","nextCell","nextElementSibling","getRelatedMergedColCells","delFirstCol","delOtherCol","deleteCell","Modal","confirm","title","content","zIndex","th","td","textAlign","targetCells","resourceCells","isArray","tRowLen","rRowLen","targetCell0","resourceCell0","tColLen","rColLen","tRow","rRow","cellT","cellR","rowspanT","colspanT","rowspanR","colspanR","outerHTML","cellRcopy","cloneNode","pastedIndexRange","rowStart","rowEnd","colStart","colEnd","h","copyedOneItem","mousedown","removeSomeNoSelfIsClicked","mousemove","mouseup","tableClick","contextmenu","copy","paste","keydown","colMinWidth","ColumnResizer","addOneCol","handleResizeHandShank","colsWidth","getColsWidth","setTableWidth","handshankCls","handshank","handshankHover","addSubline","diff","transform","currentCol","calcWidth","newWidth","subline","row0","thead","querySelector","wangEditorEditableContainer","getTargetParentElement","tableDefaultWidth","average","getDefaultWidth","initTheadAndColgroup","setColWidth","colCount","insertAdjacentElement","toFixed","cols","ths","arr","map","Number","parseFloat","reduce","acc","cur","input","wangEditorTableExtend","mounted","$nextTick","addInsertTableIconlistener","addPasteTableListener","watch","newVal","test","initTableInteraction","methods","$refs","editor","tables","table","tableMergeCellInstance","tableColumnResizerInstance","handleAddCol","handleDelCol","addInsertTextListener","insertText","iconTable","event","pasteData","beforeDestroy","destroy","Vue","use","VueRouter","routes","path","About","router","Vuex","Store","state","mutations","actions","$confirm","$info","info","config","productionTip","store","render","App","$mount"],"mappings":"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","file":"js/app.7a243283.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{attrs:{\"id\":\"nav\"}},[_c('router-link',{attrs:{\"to\":\"/\"}},[_vm._v(\"tableMergeCell\")])],1),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=9daf8a4e&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"editor\"},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.value)}})]),_c('button',{attrs:{\"type\":\"button\",\"id\":\"btn1\"},on:{\"click\":_vm.getHtml}},[_vm._v(\"获取html\")]),_c('button',{attrs:{\"type\":\"button\",\"id\":\"btn2\"},on:{\"click\":_vm.setHtml}},[_vm._v(\"设置html\")]),_c('div',{ref:\"newHtml\",staticClass:\"newHtml\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable */\r\nimport {Modal} from 'ant-design-vue'\r\nimport 'ant-design-vue/lib/modal/style/css'\r\n\r\nconst defaults = {\r\n    btnDisabledColor: '#ddd',   // 右键菜单禁用时的颜色\r\n    onAddCol: null,             // 添加列完成后回调\r\n    onDelCol: null,             // 删除列完成后回调\r\n}\r\n\r\nexport default class TableMergeCell {\r\n    // 二维数组\r\n    static copyedCellsArray = []\r\n\r\n    static colorToRgb (color) {\r\n        var span = document.createElement('span')\r\n        span.style.color = color\r\n        document.body.appendChild(span)\r\n        var c = window.getComputedStyle(span).color\r\n        document.body.removeChild(span)\r\n        return c\r\n    }\r\n\r\n    static getIndexDefaultValue () {\r\n        return {\r\n            row: -1,\r\n            col: -1,\r\n        }\r\n    }\r\n\r\n    static getTargetParentCell (target) {\r\n        while (target.tagName !== 'TD' && target.tagName !== 'TH' && target.parentNode) {\r\n            target = target.parentNode\r\n        }\r\n        return target\r\n    }\r\n\r\n    static isTheadChild (target) {\r\n        while (target.tagName !== 'THEAD' && target.parentNode) {\r\n            target = target.parentNode\r\n        }\r\n        return target.tagName === 'THEAD'\r\n    }\r\n\r\n    static handleExcelData (values) {\r\n        values = values.replace(/\\n/g, 'n').replace(/\\s/g, ',').replace(/,{2,}/g, ',')\r\n        values = values.substring(0, values.length - 2)\r\n        const arr1 = values.split(',n')\r\n        let res = []\r\n        arr1.forEach(item => {\r\n            const arr2 = item.split(',')\r\n            res.push(arr2)\r\n        })\r\n        return res\r\n    }\r\n\r\n    constructor (tableEle, options = {}) {\r\n        this.opts = Object.assign({}, defaults, options)\r\n        this.tableEle = tableEle\r\n        this.tBody = tableEle.tBodies[0]\r\n        this.rows = this.tBody.rows\r\n        this.tableClassName = 'tableMergeCell'\r\n        this.menuEle = null\r\n        this.menus = [\r\n            {\r\n                name: '靠左',\r\n                key: 'textAlignLeft',\r\n            },\r\n            {\r\n                name: '居中',\r\n                key: 'textAlignCenter',\r\n            },\r\n            {\r\n                name: '靠右',\r\n                key: 'textAlignRight',\r\n            },\r\n            {\r\n                name: '设置背景色',\r\n                key: 'addBackgroundColor',\r\n            },\r\n            {\r\n                name: '删除背景色',\r\n                key: 'delBackgroundColor',\r\n            },\r\n            {\r\n                name: '合并单元格',\r\n                key: 'merge',\r\n            }, \r\n            {\r\n                name: '取消合并单元格',\r\n                key: 'unMerge',\r\n            },\r\n            {\r\n                name: '添加行',\r\n                key: 'addRow',\r\n            },\r\n            {\r\n                name: '删除行',\r\n                key: 'delRow',\r\n            },\r\n            {\r\n                name: '添加列',\r\n                key: 'addCol',\r\n            },\r\n            {\r\n                name: '删除列',\r\n                key: 'delCol',\r\n            },\r\n            {\r\n                name: '设置表头',\r\n                key: 'addTh',\r\n            },\r\n            {\r\n                name: '取消表头',\r\n                key: 'delTh',\r\n            },\r\n            {\r\n                name: '删除表格',\r\n                key: 'delTable',\r\n            },\r\n        ]\r\n        this.selectedCellClassName = 'tableMergeCell-selected'\r\n        this.ready = false\r\n        this.cellStart = null\r\n        this.cellEnd = null\r\n        this.indexStart = TableMergeCell.getIndexDefaultValue()\r\n        this.indexEnd = TableMergeCell.getIndexDefaultValue()\r\n        this.maxRowCount = 0\r\n        this.maxColCount = 0\r\n        this.contextmenuCell = null\r\n        this.init()\r\n    }\r\n\r\n    // 初始化\r\n    init () {\r\n        if (!this.tableEle && this.tableEle.ELEMENT_NODE !== 1 && this.tableEle.tagName !== 'TABLE') {\r\n            throw new Error('请传入table元素！')\r\n        }\r\n        this.tableEle.classList.add(this.tableClassName)\r\n        this.handleTableFromExcel()\r\n        this.addCellLocation()\r\n        this.syncMaxRowAndColCount()\r\n        this.addEvent()\r\n    }\r\n\r\n    // 销毁\r\n    destroy () {\r\n        this.removeEvent()\r\n        if (this.menuEle) {\r\n            this.menuEle.removeEventListener('click', this.menuClick, false)\r\n            this.menuEle.remove()\r\n        }\r\n    }\r\n\r\n    // 补齐从excel复制粘贴过来的表格单元格\r\n    handleTableFromExcel () {\r\n        const [colgroup, tbody] = this.tableEle.children\r\n        if (colgroup.tagName === 'COLGROUP') {\r\n            const rows = tbody.children\r\n            const rowLen = rows.length\r\n            for (let i = 0; i < rowLen; i++) {\r\n                const row = rows[i]\r\n                const cells = row.cells\r\n                const colLen = cells.length\r\n                for (let j = 0; j < colLen; j++) {\r\n                    const cell = cells[j]\r\n                    const rowspan = cell.getAttribute('rowspan')\r\n                    const colspan = cell.getAttribute('colspan')\r\n                    if (rowspan >= 1) {\r\n                        for (let k = 1; k < rowspan; k++) {\r\n                            const newCell = rows[i + k].insertCell(j)\r\n                            newCell.style.display = 'none'\r\n                        }\r\n                    }\r\n                    if (colspan >= 1) {\r\n                        for (let k = 1; k < colspan; k++) {\r\n                            const newCell = row.insertCell(j + k)\r\n                            newCell.style.display = 'none'\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 添加调试坐标\r\n    addCellLocation () {\r\n        const {rows} = this\r\n        rows.forEach((row, i) => {\r\n            const cells = row.children\r\n            cells.forEach((cell, j) => {\r\n                cell.textContent = i + '-' + j\r\n            })\r\n        })\r\n    }\r\n\r\n    // 同步最大行数和最大列数\r\n    syncMaxRowAndColCount () {\r\n        const {rows} = this\r\n        if (rows.length) {\r\n            this.maxRowCount = rows.length\r\n            this.maxColCount = rows[0].childElementCount\r\n        } else {\r\n            this.maxRowCount = 0\r\n            this.maxColCount = 0\r\n        }\r\n    }\r\n\r\n    // 添加背景色\r\n    colorChange = (e) => {\r\n        const {target} = e\r\n        const {value} = target\r\n        const {selectedCells} = this.colorPicker\r\n        if (selectedCells.length) {\r\n            selectedCells.forEach(ele => {\r\n                ele.style.backgroundColor = value\r\n            })\r\n        }\r\n        if (this.colorPicker) {\r\n            this.colorPicker.removeEventListener('input', this.colorChange)\r\n            this.colorPicker.remove()\r\n            this.colorPicker = null\r\n        }\r\n        this.removeClass()\r\n    }\r\n\r\n    // 显示颜色选择弹窗\r\n    addBackgroundColor () {\r\n        const selectedCells = this.getSelectedCells()\r\n        if (!selectedCells.length) return\r\n        this.colorPicker = document.createElement('input')\r\n        this.colorPicker.setAttribute('type', 'color')\r\n        this.colorPicker.className = 'tableMergeCell-colorPicker'\r\n        this.colorPicker.addEventListener('input', this.colorChange, false)\r\n        this.colorPicker.selectedCells = selectedCells\r\n        const selectedLastEle = selectedCells[selectedCells.length - 1]\r\n        selectedLastEle.appendChild(this.colorPicker)\r\n        this.colorPicker.click()\r\n    }\r\n\r\n    // 删除背景色\r\n    delBackgroundColor () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(ele => {\r\n            ele.style.removeProperty('background-color')\r\n        })\r\n    }\r\n\r\n    // 表中表\r\n    tableIsInTable (target) {\r\n        while (target && target.tagName !== 'TABLE') {\r\n            target = target.parentNode\r\n        }\r\n        return this.tableEle !== target && this.tableEle.contains(target)\r\n    }\r\n\r\n    // 为指定单元格添加类名\r\n    addClass (cell) {\r\n        if (!cell.className.includes(this.selectedCellClassName)) {\r\n            cell.classList.add(this.selectedCellClassName)\r\n        }\r\n    }\r\n\r\n    // 移除指定或选取元素类名\r\n    removeClass (cell) {\r\n        if (cell) {\r\n            cell.classList.remove(this.selectedCellClassName)\r\n            if (cell.className === '') {\r\n                cell.removeAttribute('class')\r\n            }\r\n        } else {\r\n            const selectedCells = this.tableEle.querySelectorAll('.tableMergeCell-selected')\r\n            if (selectedCells.length) {\r\n                selectedCells.forEach(item => {\r\n                    item.classList.remove(this.selectedCellClassName)\r\n                    if (item.className === '') {\r\n                        item.removeAttribute('class')\r\n                    }\r\n                })\r\n            }  \r\n        }\r\n    }\r\n\r\n    // 高亮选取的单元格\r\n    highlightSelectedCells () {\r\n        const {rows} = this\r\n        const isValid = this.selectedCellsIsValid(rows)\r\n        if (!isValid) return\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(ele => {\r\n            this.addClass(ele)\r\n        })\r\n    }\r\n\r\n    // 获取选取的单元格\r\n    getSelectedCells (isTwoDimensionalArray = false) {\r\n        const {indexStart, indexEnd} = this\r\n        let selectedCells = []\r\n        let selectedCellsTwoDimensionalArray = []\r\n        const {rows} = this\r\n        for (let i = 0; i < this.maxRowCount; i++) {\r\n            const tr = rows[i]\r\n            const {children} = tr\r\n            const childLen = children.length\r\n            let rowArray = []\r\n            for (let j = 0; j < childLen; j++) {\r\n                const cell = children[j]\r\n                if (i >= indexStart.row && i <= indexEnd.row && j >= indexStart.col && j <= indexEnd.col) {\r\n                    selectedCells.push(cell)\r\n                    rowArray.push(cell)\r\n                } \r\n            }\r\n            if (rowArray.length) {\r\n                selectedCellsTwoDimensionalArray.push(rowArray)\r\n            }\r\n        }\r\n\r\n        return isTwoDimensionalArray ? selectedCellsTwoDimensionalArray : selectedCells\r\n    }\r\n\r\n    // 判断选取的单元格是否有效\r\n    selectedCellsIsValid () {\r\n        const cellStart_rowspan = this.cellStart.getAttribute('rowspan')\r\n        const cellEnd_rowspan = this.cellEnd && this.cellEnd.getAttribute('rowspan')\r\n        // '不符合合并规则：选中区域不能包含已合并的单元格。'\r\n        if (cellStart_rowspan || cellEnd_rowspan) {\r\n            return false\r\n        } \r\n        const selectedCells = this.getSelectedCells()\r\n        const isInvalid = selectedCells.some(ele => {\r\n            return ele.style.display === 'none' || this.getIsMergedCellBool(ele)\r\n        })\r\n        // '不符合合并规则：不能有隐藏的单元格或合并的单元格。'\r\n        if (isInvalid) {\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    // 合并单元格\r\n    mergeCell = () => {\r\n        const selectedCells = this.getSelectedCells()\r\n        const len = selectedCells.length\r\n        const {indexStart, indexEnd} = this\r\n        const rowspan = indexEnd.row - indexStart.row + 1\r\n        const colspan = indexEnd.col - indexStart.col + 1\r\n        let firstHasValueCell = null\r\n        for (let i = 0; i < len; i++) {\r\n            const cell = selectedCells[i]\r\n            if (cell.innerText) {\r\n                firstHasValueCell = cell\r\n                break\r\n            }\r\n        }\r\n        selectedCells.forEach((ele, index) => {\r\n            if (index === 0) {\r\n                ele.setAttribute('rowspan', rowspan)\r\n                ele.setAttribute('colspan', colspan)\r\n                if (!ele.innerText && firstHasValueCell) {\r\n                    ele.innerHTML = firstHasValueCell.innerHTML\r\n                    ele.removeAttribute('style')\r\n                    const style = firstHasValueCell.getAttribute('style')\r\n                    style && ele.setAttribute('style', style)\r\n                }\r\n            } else {\r\n                ele.style.display = 'none'\r\n            }\r\n            this.removeClass(ele)\r\n        })\r\n    }\r\n\r\n    // 取消合并单元格\r\n    unMergeCell = () => {\r\n        let cellSpanProperty = null\r\n        this.indexStart = this.getCellIndex(this.cellEnd)\r\n        cellSpanProperty = this.getCellSpanProperty(this.cellEnd)\r\n        this.indexEnd = {\r\n            row: cellSpanProperty.rowspan - 1 + this.indexStart.row,\r\n            col: cellSpanProperty.colspan - 1 + this.indexStart.col,\r\n        }\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach((cell, index) => {\r\n            if (index === 0) {\r\n                cell.removeAttribute('rowspan')\r\n                cell.removeAttribute('colspan')\r\n            } else {\r\n                cell.style.removeProperty('display')\r\n            }\r\n            this.removeClass(cell)\r\n        })\r\n        \r\n    }\r\n\r\n    // 获取单元格行列索引\r\n    getCellIndex (ele) {\r\n        let index = {\r\n            row: -1,\r\n            col: -1,\r\n        }\r\n        if (!this.cellStart) return index\r\n        const {tagName} = this.cellStart\r\n        const {rows} = this\r\n        if (tagName === 'TH') {\r\n            const firstTr = rows[0]\r\n            const {children} = firstTr\r\n            const childLen = children.length\r\n            index.row = 0\r\n            for (let j = 0; j < childLen; j++) {\r\n                const cell = children[j]\r\n                if (cell === ele) {\r\n                    index.col = j\r\n                    break\r\n                }\r\n            }\r\n        } else if (tagName === 'TD') {\r\n            for (let i = 0; i < this.maxRowCount; i++) {\r\n                const tr = rows[i]\r\n                const {children} = tr\r\n                const childLen = children.length\r\n                for (let j = 0; j < childLen; j++) {\r\n                    const cell = children[j]\r\n                    if (cell === ele) {\r\n                        index.row = i\r\n                        index.col = j\r\n                        break\r\n                    }\r\n                }\r\n                if (index.row > 0) {\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        \r\n        return index\r\n    }\r\n\r\n    // 获取单元格rowspan, colspan属性值\r\n    getCellSpanProperty (cell) {\r\n        if (cell) {\r\n            let rowspan = cell.getAttribute('rowspan')\r\n            let colspan = cell.getAttribute('colspan')\r\n            rowspan = rowspan ? rowspan * 1 : 1\r\n            colspan = colspan ? colspan * 1 : 1\r\n            return {\r\n                rowspan,\r\n                colspan,\r\n            }\r\n        }\r\n    }\r\n\r\n    // 获取是否是合并过的单元格\r\n    getIsMergedCellBool (cell) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const maxCount = Math.max(rowspan, colspan)\r\n        return maxCount > 1\r\n    }\r\n\r\n    // 根据类名获取选取的单元格\r\n    getSelectedCellsByClassName () {\r\n        return Array.from(this.tableEle.querySelectorAll(`.${this.selectedCellClassName}`))\r\n    }\r\n\r\n    // 获取受影响的合并行索引数组\r\n    getMergedRowIndexArray (startRowIndex, rowspan) {\r\n        const endRowIndex = startRowIndex + rowspan - 1\r\n        let rowIndexArray = []\r\n        do {\r\n            rowIndexArray.push(startRowIndex)\r\n            startRowIndex++\r\n        } while (startRowIndex <= endRowIndex)\r\n        return rowIndexArray\r\n    }\r\n\r\n    // 获取受影响的合并列索引数组\r\n    getMergedColIndexArray (startColIndex, colspan) {\r\n        const endColIndex = startColIndex + colspan - 1\r\n        let colIndexArray = []\r\n        do {\r\n            colIndexArray.push(startColIndex)\r\n            startColIndex++\r\n        } while (startColIndex <= endColIndex)\r\n        return colIndexArray\r\n    }\r\n\r\n    // 控制右键菜单合并按钮是否可点击\r\n    handleMenuBtnMergeStatus (cell) {\r\n        const {btnDisabledColor} = this.opts\r\n        this.isMergedCell = this.getIsMergedCellBool(cell)\r\n        const selectedCells = this.getSelectedCellsByClassName()\r\n        if (!selectedCells.length) {\r\n            this.btn_merge.style.color = btnDisabledColor\r\n            this.btn_unMerge.style.color = btnDisabledColor\r\n        } else {\r\n            if (this.cellStart === this.cellEnd) {\r\n                if (this.cellEnd.getAttribute('rowspan') || this.cellEnd.getAttribute('colspan')) {\r\n                    this.btn_unMerge.style.removeProperty('color')\r\n                } else {\r\n                    this.btn_merge.style.color = btnDisabledColor\r\n                    this.btn_unMerge.style.color = btnDisabledColor\r\n                }\r\n            } else if (this.getIsMergedCellBool(cell)) {\r\n                this.btn_merge.style.color = btnDisabledColor\r\n                this.btn_unMerge.style.removeProperty('color')\r\n            } else {\r\n                this.btn_merge.style.removeProperty('color')\r\n                this.btn_unMerge.style.color = btnDisabledColor\r\n            }\r\n        }\r\n    }\r\n\r\n    // 控制右键菜单行按钮是否可点击\r\n    handleMenuBtnRowStatus (target) {\r\n        const {btnDisabledColor} = this.opts\r\n        if (target.tagName === 'TH') {\r\n            this.btn_addRow.style.color = btnDisabledColor\r\n        } else {\r\n            this.btn_addRow.style.removeProperty('color')\r\n        }\r\n        const {rowspan, colspan} = this.getCellSpanProperty(target)\r\n        if (rowspan > 1 || colspan > 1) {\r\n            this.btn_delRow.style.color = btnDisabledColor\r\n            this.btn_delCol.style.color = btnDisabledColor\r\n        } else {\r\n            this.btn_delRow.style.removeProperty('color')\r\n            this.btn_delCol.style.removeProperty('color')\r\n        }\r\n    }\r\n\r\n    // 当未选取单元格时，控制部分右键菜单项是否可点击\r\n    handleSomeMenuBtns () {\r\n        const {btnDisabledColor} = this.opts\r\n        const selectedCells = this.getSelectedCellsByClassName()\r\n        if (selectedCells.length) {\r\n            this.btn_textAlignLeft.style.removeProperty('color')\r\n            this.btn_textAlignCenter.style.removeProperty('color')\r\n            this.btn_textAlignRight.style.removeProperty('color')\r\n            this.btn_addBackgroundColor.style.removeProperty('color')\r\n            this.btn_delBackgroundColor.style.removeProperty('color')\r\n\r\n            this.btn_addRow.style.removeProperty('color')\r\n            this.btn_delRow.style.removeProperty('color')\r\n            this.btn_addCol.style.removeProperty('color')\r\n            this.btn_delCol.style.removeProperty('color')\r\n        } else {\r\n            this.btn_addBackgroundColor.style.color = btnDisabledColor\r\n            this.btn_delBackgroundColor.style.color = btnDisabledColor\r\n            this.btn_textAlignLeft.style.color = btnDisabledColor\r\n            this.btn_textAlignCenter.style.color = btnDisabledColor\r\n            this.btn_textAlignRight.style.color = btnDisabledColor\r\n\r\n            this.btn_addRow.style.color = btnDisabledColor\r\n            this.btn_delRow.style.color = btnDisabledColor\r\n            this.btn_addCol.style.color = btnDisabledColor\r\n            this.btn_delCol.style.color = btnDisabledColor\r\n        }\r\n    }\r\n\r\n    // 控制删除的列与关联列的关系\r\n    handleMergedCellByDelCol (index) {\r\n        const {rows} = this\r\n        const trLen = rows.length\r\n        for (let i = 0; i < trLen; i++) {\r\n            const row = rows[i]\r\n            const cells = row.children\r\n            const cellLen = cells.length\r\n            for (let j = 0; j < cellLen; j++) {\r\n                const cell = cells[j]\r\n                const {colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index > j && index < j + colspan) {\r\n                    cell.setAttribute('colspan', colspan - 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 删除表格\r\n    delTable () {\r\n        this.tableEle.remove()\r\n    }\r\n\r\n    // 删除空表格\r\n    delEmptyTable () {\r\n        const {rows} = this\r\n        if (!rows.length || !rows[0].children.length) {\r\n            this.delTable()\r\n        }\r\n    }\r\n\r\n    // 上面添加一行\r\n    addRow (index) {\r\n        const {maxColCount, tBody} = this\r\n        const relatedCellsArray = this.getRelatedMergedRowCells(index, 'addRow')\r\n        let colIndexArray = []\r\n        relatedCellsArray.forEach(cell => {\r\n            const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n            const {col} = this.getCellIndex(cell)\r\n            colIndexArray.push(...this.getMergedColIndexArray(col, colspan))\r\n            cell.setAttribute('rowspan', rowspan + 1)\r\n        })\r\n        const newRow = tBody.insertRow(index)\r\n        for (let i = 0; i < maxColCount; i++) {\r\n            newRow.insertCell(i)\r\n        }\r\n        colIndexArray.forEach(index => {\r\n            newRow.children[index].style.display = 'none'\r\n        })\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 获取相关的行合并单元格\r\n    getRelatedMergedRowCells (index, type) {\r\n        const {rows} = this\r\n        let relatedCellsArray = []\r\n        rows.forEach((row, rowIndex) => {\r\n            const cells = row.children\r\n            cells.forEach(cell => {\r\n                const {rowspan} = this.getCellSpanProperty(cell)\r\n                if (rowspan > 1 && this.rowIsInMergedRow(rowIndex, rowspan, index, type)) {\r\n                    relatedCellsArray.push(cell)\r\n                }\r\n            })\r\n        })\r\n        return relatedCellsArray\r\n    }\r\n\r\n    // 行是在合并单元格范围内\r\n    rowIsInMergedRow (startRowIndex, rowspan, willRowIndex, type) {\r\n        if (type === 'addRow') {\r\n            return willRowIndex > startRowIndex && willRowIndex <= startRowIndex + rowspan - 1\r\n        } else if (type === 'delRow') {\r\n            return willRowIndex >= startRowIndex && willRowIndex <= startRowIndex + rowspan - 1\r\n        }\r\n    }\r\n\r\n    // 左边添加一列\r\n    addCol (index) {\r\n        const {onAddCol} = this.opts\r\n        this.syncMaxRowAndColCount()\r\n\r\n        const {maxRowCount} = this\r\n        const {rows} = this\r\n        for (let i = 0; i < maxRowCount; i++) {\r\n            const row = rows[i]\r\n            const cell = row.children[index]\r\n            const newCell = cell.tagName === 'TH' ? '<th></th>' : '<td></td>'\r\n            cell.insertAdjacentHTML('beforebegin', newCell)\r\n        }\r\n\r\n        rows.forEach((row, rowIndex) => {\r\n            const cells = row.children\r\n            cells.forEach((cell, cellIndex) => {\r\n                const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index > cellIndex && index <= cellIndex + colspan - 1) {\r\n                    cell.setAttribute('colspan', colspan + 1)\r\n                    cells[index].style.display = 'none'\r\n                    let rowLen = rowspan\r\n                    let currentRowIndex = rowIndex\r\n                    while (rowLen > 1) {\r\n                        rows[++currentRowIndex].children[index].style.display = 'none'\r\n                        rowLen--\r\n                    }\r\n                }\r\n            })\r\n        })\r\n\r\n        this.syncMaxRowAndColCount()\r\n\r\n        onAddCol && onAddCol(index)\r\n    }\r\n\r\n    // 删除行\r\n    delRow (index) {\r\n        const {tBody, rows} = this\r\n        const relatedCellsArray = this.getRelatedMergedRowCells(index, 'delRow')\r\n        relatedCellsArray.forEach(cell => {\r\n            const {row, col} = this.getCellIndex(cell)\r\n            if (row === index) {\r\n                this.delFirstRow(rows, col, cell, index)\r\n            } else {\r\n                this.delOtherRow(cell)\r\n            }\r\n        })\r\n        tBody.deleteRow(index)\r\n        this.delEmptyTable()\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 删除非第一行\r\n    delOtherRow (cell) {\r\n        const {rowspan} = this.getCellSpanProperty(cell)\r\n        cell.setAttribute('rowspan', rowspan - 1)\r\n    }\r\n\r\n    // 删除第一行\r\n    delFirstRow (rows, col, cell, index) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const nextRow = rows[index + 1]\r\n        const nextCell = nextRow.children[col]\r\n        nextCell.setAttribute('rowspan', rowspan - 1)\r\n        nextCell.setAttribute('colspan', colspan)\r\n        nextCell.style.display = 'table-cell'\r\n    }\r\n\r\n    // 获取相关的列合并单元格\r\n    getRelatedMergedColCells (index) {\r\n        const {rows} = this\r\n        let relatedCellsArray = []\r\n        rows.forEach(row => {\r\n            const cells = row.children\r\n            cells.forEach((cell, cellIndex) => {\r\n                const {colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index >= cellIndex && index <= cellIndex + colspan - 1) {\r\n                    relatedCellsArray.push(cell)\r\n                }\r\n            })\r\n        })\r\n        return relatedCellsArray\r\n    }\r\n\r\n    // 删除非第一列\r\n    delOtherCol (cell) {\r\n        const {colspan} = this.getCellSpanProperty(cell)\r\n        cell.setAttribute('colspan', colspan - 1)\r\n    }\r\n\r\n    // 删除第一列\r\n    delFirstCol (cell) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const nextCell = cell.nextElementSibling\r\n        nextCell.setAttribute('colspan', colspan - 1)\r\n        nextCell.setAttribute('rowspan', rowspan)\r\n        nextCell.style.display = 'table-cell'\r\n    }\r\n\r\n    // 删除列\r\n    delCol (index) {\r\n        const {onDelCol} = this.opts\r\n        const {rows} = this\r\n        const relatedCellsArray = this.getRelatedMergedColCells(index)\r\n        relatedCellsArray.forEach(cell => {\r\n            const {col} = this.getCellIndex(cell)\r\n            if (col === index) {\r\n                this.delFirstCol(cell)\r\n            } else {\r\n                this.delOtherCol(cell)\r\n            }\r\n        })\r\n        rows.forEach(row => {\r\n            row.deleteCell(index)\r\n        })\r\n        this.delEmptyTable()\r\n        this.syncMaxRowAndColCount()\r\n        onDelCol && onDelCol(index)\r\n    }\r\n\r\n    // 添加表头\r\n    addTh () {\r\n        const firstTr = this.rows[0]\r\n        const {children} = firstTr\r\n        let tr = document.createElement('tr')\r\n        if (children[0].tagName === 'TD') {\r\n            const len = children.length\r\n            for (let i = 0; i < len; i++) {\r\n                const cell = children[i]\r\n                if (this.getIsMergedCellBool(cell)) {\r\n                    Modal && Modal.confirm({\r\n                        title: '提示',\r\n                        content: '请先手动取消第一行合并的单元格！',\r\n                        zIndex: 10009,\r\n                    })\r\n                    break\r\n                }\r\n                const th = document.createElement('th')\r\n                th.innerHTML = cell.innerHTML\r\n                tr.appendChild(th)\r\n            }\r\n            if (tr.childElementCount === len) {\r\n                firstTr.innerHTML = tr.innerHTML\r\n            }\r\n        }\r\n    }\r\n\r\n    // 删除表头\r\n    delTh () {\r\n        const firstTr = this.rows[0]\r\n        const {children} = firstTr\r\n        let tr = document.createElement('tr')\r\n        if (children[0].tagName === 'TH') {\r\n            children.forEach(cell => {\r\n                const td = document.createElement('td')\r\n                td.innerHTML = cell.innerHTML\r\n                tr.appendChild(td)\r\n            })\r\n            firstTr.innerHTML = tr.innerHTML\r\n        }\r\n    }\r\n\r\n    // 靠左\r\n    textAlignLeft () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'left'\r\n        })\r\n    }\r\n\r\n    // 居中\r\n    textAlignCenter () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'center'\r\n        })\r\n    }\r\n\r\n    // 靠右\r\n    textAlignRight () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'right'\r\n        })\r\n    }\r\n\r\n    // 点击右键菜单项时\r\n    menuClick = (e) => {\r\n        const {target} = e\r\n        const color1 = window.getComputedStyle(target).color\r\n        const color2 = TableMergeCell.colorToRgb(this.opts.btnDisabledColor)\r\n        if (color1 === color2) return\r\n        const key = target.dataset.key\r\n        const {row, col} = this.getCellIndex(this.contextmenuCell)\r\n        switch (key) {\r\n            case 'textAlignLeft':\r\n                this.textAlignLeft()\r\n                break\r\n            case 'textAlignCenter':\r\n                this.textAlignCenter()\r\n                break\r\n            case 'textAlignRight':\r\n                this.textAlignRight()\r\n                break\r\n            case 'addBackgroundColor':\r\n                this.addBackgroundColor()\r\n                break\r\n            case 'delBackgroundColor':\r\n                this.delBackgroundColor()\r\n                break\r\n            case 'delTable':\r\n                this.delTable()\r\n                break\r\n            case 'addRow':\r\n                this.addRow(row)\r\n                break\r\n            case 'delRow':\r\n                this.delRow(row)\r\n                break\r\n            case 'addCol':\r\n                this.addCol(col)\r\n                break\r\n            case 'delCol':\r\n                this.delCol(col)\r\n                break\r\n            case 'addTh':\r\n                this.addTh()\r\n                break\r\n            case 'delTh':\r\n                this.delTh()\r\n                break\r\n            case 'merge':\r\n                this.mergeCell()\r\n                break\r\n            case 'unMerge':\r\n                this.unMergeCell()\r\n                break\r\n        }\r\n        if (this.menuEle) {\r\n            this.menuEle.style.display = 'none'\r\n        }\r\n    }\r\n\r\n    mousedown = (e) => {\r\n        let {target, button} = e\r\n        if (!this.tableEle.contains(target)) return\r\n        if (this.tableIsInTable(target) || TableMergeCell.isTheadChild(target) || button !== 0) return\r\n        target = TableMergeCell.getTargetParentCell(target)\r\n        const {tagName} = target\r\n        if (tagName === 'TD' || tagName === 'TH') {\r\n            this.ready = true\r\n            this.cellStart = target\r\n            this.indexStart = this.getCellIndex(target)\r\n            this.removeClass()\r\n            this.addClass(target)\r\n        }\r\n    }\r\n\r\n    // 移除一些特征\r\n    removeSomeNoSelfIsClicked = (e) => {\r\n        const {target} = e\r\n        // 隐藏右键菜单\r\n        if (this.menuEle && !this.menuEle.contains(target)) {\r\n            this.menuEle.style.display = 'none'\r\n        }\r\n        // 未点击表格时（且未点击右键菜单的添加背景色）移除高亮单元格\r\n        const key = target.dataset.key\r\n        if (!this.tableEle.contains(target) && key !== 'addBackgroundColor' && !target.className.includes('tableMergeCell-contextmenu')) {\r\n            this.removeClass()\r\n        }\r\n        // 移除背景色设置输入框\r\n        if (this.colorPicker) {\r\n            this.colorPicker.remove()\r\n        }\r\n    }\r\n\r\n    mousemove = (e) => {\r\n        let {target} = e\r\n        if (this.ready && this.tableEle.contains(target)) {\r\n            target = TableMergeCell.getTargetParentCell(target)\r\n            const {rowspan, colspan} = this.getCellSpanProperty(target)\r\n            if (rowspan > 1 || colspan > 1) return\r\n            this.cellEnd = target\r\n            this.indexEnd = this.getCellIndex(target)\r\n            this.removeClass()\r\n            this.highlightSelectedCells()\r\n            const selection = window.getSelection()\r\n            if (this.cellStart !== this.cellEnd) {\r\n                selection.collapseToEnd()\r\n            }\r\n        }\r\n    }\r\n\r\n    mouseup = (e) => {\r\n        let {target, button} = e\r\n        if (!this.tableEle.contains(e.target)) return\r\n        if (button === 0 && this.ready) {\r\n            target = TableMergeCell.getTargetParentCell(target)\r\n            this.cellEnd = target\r\n            this.indexEnd = this.getCellIndex(target)\r\n            this.ready = false\r\n        }\r\n    }\r\n\r\n    tableClick = (e) => {\r\n        const {target, button} = e\r\n        if (button === 0 && target.tagName !== 'INPUT' && this.tableEle.contains(target)) {\r\n            e.stopPropagation()\r\n        }\r\n    }\r\n\r\n    contextmenu = (e) => {\r\n        e.preventDefault()\r\n        const {target, clientX, clientY} = e\r\n        if (this.tableIsInTable(target)) return\r\n        if (!this.menuEle) {\r\n            this.menuEle = document.createElement('ul')\r\n            this.menuEle.classList.add('tableMergeCell-contextmenu')\r\n            this.menuEle.addEventListener('click', this.menuClick, false)\r\n\r\n            this.menus.forEach(item => {\r\n                const li = document.createElement('li')\r\n                const {name, key} = item\r\n                li.textContent = name\r\n                li.dataset.key = key\r\n                this[`btn_${key}`] = li\r\n                this.menuEle.appendChild(li)\r\n            })\r\n\r\n            document.body.appendChild(this.menuEle)\r\n            const {width, height} = this.menuEle.getBoundingClientRect()\r\n            this.menuEle.dataset.width = width\r\n            this.menuEle.dataset.height = height\r\n        }\r\n        \r\n        const {clientWidth, clientHeight} = document.documentElement\r\n        const {width, height} = this.menuEle.dataset\r\n        const diffX = clientWidth - clientX\r\n        const diffY = clientHeight - clientY\r\n        if (diffX < width) {\r\n            this.menuEle.style.right = '10px'\r\n            this.menuEle.style.removeProperty('left')\r\n        } else {\r\n            this.menuEle.style.left = `${clientX}px`\r\n            this.menuEle.style.removeProperty('right')\r\n        }\r\n        if (diffY < height) {\r\n            this.menuEle.style.height = `${diffY - 10}px`\r\n        } else {\r\n            this.menuEle.style.removeProperty('height')\r\n        }\r\n        this.menuEle.style.top = `${clientY}px`\r\n        this.menuEle.style.display = 'block'\r\n        this.contextmenuCell = target\r\n        this.handleMenuBtnMergeStatus(target)\r\n        this.handleMenuBtnRowStatus(target)\r\n        this.handleSomeMenuBtns(target)\r\n    }\r\n\r\n    copy = (e) => {\r\n        e.preventDefault()\r\n        let selectionStr = window.getSelection().toString()\r\n        if (selectionStr) {\r\n            if (e.clipboardData) {\r\n                e.clipboardData.setData('text/plain', selectionStr)\r\n            } else if (window.clipboardData) {\r\n                window.clipboardData.setData('text', selectionStr)\r\n            }\r\n            TableMergeCell.copyedCellsArray = []\r\n        } else {\r\n            if (e.clipboardData) {\r\n                e.clipboardData.setData('text/plain', '')\r\n            } else if (window.clipboardData) {\r\n                window.clipboardData.setData('text', '')\r\n            }\r\n            // 二维数组记录复制的单元格\r\n            TableMergeCell.copyedCellsArray = this.getSelectedCells(true)\r\n        }\r\n    }\r\n\r\n    handlePaste (targetCells, resourceCells) {\r\n        if (!Array.isArray(targetCells) || !Array.isArray(resourceCells)) {\r\n            throw new Error('粘贴单元格或复制单元格不是数组')\r\n        }\r\n        const tRowLen = targetCells.length\r\n        const rRowLen = resourceCells.length\r\n        const targetCell0 = targetCells[0]\r\n        const resourceCell0 = resourceCells[0]\r\n        if (!targetCell0) {\r\n            throw new Error('粘贴的单元格未获取到第一行')\r\n        }\r\n        if (!resourceCell0) {\r\n            throw new Error('复制的单元格未获取到第一行')\r\n        }\r\n        const tColLen = targetCell0.length\r\n        const rColLen = resourceCell0.length\r\n        if (tRowLen === rRowLen && tColLen === rColLen) { // 多对多（行列长度都相同）\r\n            for (let i = 0; i < tRowLen; i++) {\r\n                const tRow = targetCells[i]\r\n                const rRow = resourceCells[i]\r\n                for (let j = 0; j < tColLen; j++) {\r\n                    const cellT = tRow[j]\r\n                    const cellR = rRow[j]\r\n                    if (!cellT || !cellR) continue\r\n                    if (typeof cellR === 'string') {\r\n                        cellT.innerText = cellR\r\n                        continue\r\n                    }\r\n                    const {rowspan: rowspanT, colspan: colspanT} = this.getCellSpanProperty(cellT)\r\n                    const {rowspan: rowspanR, colspan: colspanR} = this.getCellSpanProperty(cellR)\r\n                    if (rowspanT === rowspanR && colspanT === colspanR) {\r\n                        cellT.outerHTML = cellR.outerHTML\r\n                    } else {\r\n                        const cellRcopy = cellR.cloneNode(true)\r\n                        if ((rowspanR > 1 || colspanR > 1) && (rowspanT <= 1 && colspanT <= 1)) {\r\n                            cellRcopy.removeAttribute('rowspan')\r\n                            cellRcopy.removeAttribute('colspan')\r\n                            cellT.outerHTML = cellRcopy.outerHTML\r\n                        } else if ((rowspanT > 1 || colspanT > 1) && (rowspanR <= 1 && colspanR <= 1)) {\r\n                            cellRcopy.setAttribute('rowspan', rowspanT)\r\n                            cellRcopy.setAttribute('colspan', colspanT)\r\n                            cellT.outerHTML = cellRcopy.outerHTML\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        } else if ((rRowLen > 1 || rColLen > 1) && tRowLen === 1 && tColLen === 1) { // 多对一\r\n            const index = this.indexStart\r\n            const pastedIndexRange = {\r\n                indexStart: index,\r\n                indexEnd: {\r\n                    row: index.row + rRowLen - 1,\r\n                    col: index.col + rColLen - 1,\r\n                }\r\n            }\r\n            const rowStart = pastedIndexRange.indexStart.row\r\n            const rowEnd = pastedIndexRange.indexEnd.row\r\n            const colStart = pastedIndexRange.indexStart.col\r\n            const colEnd = pastedIndexRange.indexEnd.col\r\n            const {rows} = this\r\n            for (let i = rowStart, k = 0; i <= rowEnd; i++, k++) {\r\n                const row = rows[i]\r\n                if (!row) continue\r\n                const cells = row.children\r\n                for (let j = colStart, h = 0; j <= colEnd; j++, h++) {\r\n                    const cell = cells[j]\r\n                    if (!cell) continue\r\n                    const copyedOneItem = resourceCells[k][h]\r\n                    if (!cell || !copyedOneItem) continue\r\n                    if (typeof copyedOneItem === 'string') {\r\n                        cell.innerText = copyedOneItem\r\n                        continue\r\n                    }\r\n                    const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n                    if (rowspan <= 1 && colspan <= 1) {\r\n                        cell.outerHTML = copyedOneItem.outerHTML\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            Modal && Modal.confirm({\r\n                title: '提示',\r\n                content: '目前只支持两种模式：1、复制时选择的行列与粘贴时选择的行列相同（简称一对一或多对多）；2、复制时选择的行列不限，粘贴时只选一个单元格（简称多对一）；',\r\n                zIndex: 10009,\r\n            })\r\n        }\r\n    }\r\n\r\n    paste = (e) => {\r\n        const selectedCells = this.getSelectedCells(true)\r\n        const clipboardData = e.clipboardData || window.clipboardData\r\n        if (clipboardData.items.length > 1) {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            const data = clipboardData.getData('text')\r\n            const excelData = TableMergeCell.handleExcelData(data)\r\n            this.handlePaste(selectedCells, excelData)\r\n        } else if (TableMergeCell.copyedCellsArray.length) {\r\n            e.preventDefault()\r\n            this.handlePaste(selectedCells, TableMergeCell.copyedCellsArray)\r\n            this.indexStart = TableMergeCell.getIndexDefaultValue()\r\n            this.indexEnd = TableMergeCell.getIndexDefaultValue()\r\n        }\r\n    }\r\n\r\n    keydown = (e) => {\r\n        const {key} = e\r\n        if (key === 'Delete') {\r\n            const selectedCells = this.getSelectedCells()\r\n            selectedCells.forEach(cell => {\r\n                cell.innerHTML = ''\r\n            })\r\n        }\r\n    }\r\n\r\n    addEvent () {\r\n        window.addEventListener('mousedown', this.mousedown, false)\r\n        window.addEventListener('mousedown', this.removeSomeNoSelfIsClicked, false)\r\n        window.addEventListener('mousemove', this.mousemove, false)\r\n        window.addEventListener('mouseup', this.mouseup, false)\r\n        this.tableEle.addEventListener('click', this.tableClick, false)\r\n        this.tableEle.addEventListener('contextmenu', this.contextmenu, false)\r\n        this.tableEle.addEventListener('copy', this.copy, false)\r\n        this.tableEle.addEventListener('paste', this.paste, false)\r\n        window.addEventListener('keydown', this.keydown, true)\r\n    }\r\n\r\n    removeEvent () {\r\n        window.removeEventListener('mousedown', this.mousedown, false)\r\n        window.removeEventListener('mousedown', this.removeSomeNoSelfIsClicked, false)\r\n        window.removeEventListener('mousemove', this.mousemove, false)\r\n        window.removeEventListener('mouseup', this.mouseup, false)\r\n        this.tableEle.removeEventListener('click', this.tableClick, false)\r\n        this.tableEle.removeEventListener('contextmenu', this.contextmenu, false)\r\n        this.tableEle.removeEventListener('copy', this.copy, false)\r\n        this.tableEle.removeEventListener('paste', this.paste, false)\r\n        window.removeEventListener('keydown', this.keydown, true)\r\n    }\r\n}\r\n","/* eslint-disable */\r\nconst defaults = {\r\n    colMinWidth: 50, // 列最小宽度\r\n}\r\n\r\nexport default class ColumnResizer {\r\n    static getTargetParentElement (target, querySelector) {\r\n        while (target.className && !target.className.includes(querySelector) && target.parentNode) {\r\n            target = target.parentNode\r\n        }\r\n        return target\r\n    }\r\n\r\n    constructor (tableEle, options = {}) {\r\n        this.opts = Object.assign({}, defaults, options)\r\n        this.tableEle = tableEle\r\n        this.colgroup = tableEle.querySelector('colgroup')\r\n        this.thead = tableEle.querySelector('thead')\r\n        this.wangEditorEditableContainer = ColumnResizer.getTargetParentElement(tableEle, 'w-e-text')\r\n        this.handshank = null\r\n        this.handshankCls = 'tableMergeCell-handshank'\r\n        this.subline = 'tableMergeCell-subline'\r\n        this.handshankHover = 'tableMergeCell-handshank-hover'\r\n        this.tableDefaultWidth = 1000\r\n        this.average = 200\r\n        this.init()\r\n    }\r\n\r\n    // 初始化\r\n    init () {\r\n        if (!this.tableEle || this.tableEle.ELEMENT_NODE !== 1 || this.tableEle.tagName !== 'TABLE') {\r\n            throw new Error('请传入table元素！')\r\n        }\r\n        this.tableEle.removeAttribute('width')\r\n        this.getDefaultWidth()\r\n        if (!this.tableEle.style.width) {\r\n            this.setTableWidth(this.tableDefaultWidth)\r\n        }\r\n        this.initTheadAndColgroup()\r\n        this.setColWidth()\r\n        this.handleResizeHandShank()\r\n        this.addEvent()\r\n    }\r\n\r\n    destroy () {\r\n        this.removeEvent()\r\n    }\r\n\r\n    // 初始化thead和colgroup\r\n    initTheadAndColgroup () {\r\n        const tbody = this.tableEle.tBodies[0]\r\n        const {rows} = tbody\r\n        const colCount = rows[0].childElementCount\r\n        if (!this.colgroup) {\r\n            const colgroup = document.createElement('colgroup')\r\n            for (let i = 0 ; i < colCount; i++) {\r\n                const col = document.createElement('col')\r\n                colgroup.appendChild(col)\r\n            }\r\n            this.colgroup = tbody.insertAdjacentElement('beforebegin', colgroup)\r\n        }\r\n        if (!this.thead) {\r\n            const thead = document.createElement('thead')\r\n            const tr = document.createElement('tr')\r\n            tr.className = 'tableMergeCell-handshank-container'\r\n            for (let i = 0 ; i < colCount; i++) {\r\n                const th = document.createElement('th')\r\n                tr.appendChild(th)\r\n            }\r\n            thead.appendChild(tr)\r\n            this.thead = tbody.insertAdjacentElement('beforebegin', thead)\r\n        }\r\n    }\r\n\r\n    // 获取表格与列宽默认值\r\n    getDefaultWidth () {\r\n        const width = this.wangEditorEditableContainer.clientWidth - 20\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const colCount = rows[0].childElementCount\r\n        this.average = (width / colCount).toFixed()\r\n        this.tableDefaultWidth = this.average * colCount\r\n    }\r\n\r\n    // 添加一个默认列\r\n    addOneCol (index) {\r\n        const cols = this.colgroup.children\r\n        const ths = this.thead.children[0].children\r\n        const col = document.createElement('col')\r\n        const th = document.createElement('th')\r\n        col.style.width = `${this.average}px`\r\n        cols[index].insertAdjacentElement('beforebegin', col)\r\n        ths[index].insertAdjacentElement('beforebegin', th)\r\n    }\r\n\r\n    // 增加列\r\n    handleAddCol = (index) => {\r\n        this.addOneCol(index)\r\n        this.handleResizeHandShank()\r\n        const colsWidth = this.getColsWidth()\r\n        this.setTableWidth(colsWidth)\r\n    }\r\n\r\n    // 删除列\r\n    handleDelCol (index) {\r\n        const cols = this.colgroup.children\r\n        const ths = this.thead.children[0].children\r\n        cols[index].remove()\r\n        ths[index].remove()\r\n        this.handleResizeHandShank()\r\n        const colsWidth = this.getColsWidth()\r\n        this.setTableWidth(colsWidth)\r\n    }\r\n\r\n    // 初始化默认宽\r\n    setColWidth () {\r\n        const {children} = this.colgroup\r\n        children.forEach(col => {\r\n            const width = col.style.width\r\n            if (!width) {\r\n                col.style.width = `${this.average}px`\r\n            } \r\n        })\r\n    }\r\n\r\n    // 增加列调整手柄\r\n    handleResizeHandShank () {\r\n        const cells = this.thead.children[0].children\r\n        cells.forEach((cell, index) => {\r\n            const handshank = cell.querySelector(`.${this.handshankCls}`)\r\n            handshank && handshank.remove()\r\n            const i = `<i data-col=\"${index}\" contenteditable=\"false\" class=\"${this.handshankCls}\"></i>`\r\n            cell.insertAdjacentHTML('beforeend', i)\r\n        })\r\n    }\r\n\r\n    // 增加辅助线\r\n    addSubline () {\r\n        this.handshank.classList.add(this.subline)\r\n    }\r\n\r\n    // 设置表格宽\r\n    setTableWidth (width) {\r\n        if (typeof width !== 'number') {\r\n            throw new Error('表格宽的参数为Number类型！')\r\n        }\r\n        width = width.toFixed()\r\n        this.tableEle.style.width = `${width}px`\r\n    }\r\n\r\n    // 获取列宽和\r\n    getColsWidth () {\r\n        const {children} = this.colgroup\r\n        const arr = Array.from(children).map(col => {\r\n            return Number.parseFloat(col.style.width)\r\n        })\r\n        const width = arr.reduce((acc, cur) => {\r\n            return acc + cur\r\n        })\r\n        return width\r\n    }\r\n\r\n    mousedown = (e) => {\r\n        const {target, button, clientX} = e\r\n        if (this.tableEle.contains(target) && button === 0 && target.className.includes(this.handshankCls)) {\r\n            this.handshank = target\r\n            this.handshank.classList.add(this.handshankHover)\r\n            this.clientX = clientX\r\n            this.addSubline()\r\n        } else {\r\n            this.handshank = null\r\n        }\r\n    }\r\n\r\n    mousemove = (e) => {\r\n        if (this.handshank) {\r\n            e.preventDefault()\r\n            const {clientX} = e\r\n            this.diff = clientX - this.clientX\r\n            this.handshank.style.transform = `translateX(${this.diff}px)`\r\n        }\r\n    }\r\n\r\n    mouseup = (e) => {\r\n        if (this.handshank) {\r\n            const {clientX} = e\r\n            const index = this.handshank.dataset.col\r\n            const currentCol = this.colgroup.children[index]\r\n            if (currentCol) {\r\n                const {width} = currentCol.getBoundingClientRect()\r\n                const calcWidth = width + this.diff\r\n                const {colMinWidth} = this.opts\r\n                const newWidth = Math.max(colMinWidth, calcWidth)\r\n                if (this.tableEle.contains(this.handshank) && clientX - this.clientX !== 0) {\r\n                    currentCol.style.width = `${newWidth}px`\r\n                }\r\n            }\r\n            this.handshank.style.removeProperty('transform')\r\n            this.handshank.classList.remove(this.handshankHover, this.subline)\r\n            this.handshank = null\r\n            const colsWidth = this.getColsWidth()\r\n            this.setTableWidth(colsWidth)\r\n        }\r\n    } \r\n\r\n    // 同步列控制手柄高度\r\n    input = () => {\r\n        const tbody = this.tableEle.tBodies[0]\r\n        const row0 = tbody.rows[0]\r\n        const cell = row0.children[0]\r\n        const {height} = cell.getBoundingClientRect()\r\n        const cells = this.thead.children[0].children\r\n        if (height > 30) {\r\n            cells.forEach(cell => {\r\n                const i = cell.querySelector(`.${this.handshankCls}`)\r\n                i.style.height = `${height}px`\r\n            })\r\n        } else {\r\n            cells.forEach(cell => {\r\n                const i = cell.querySelector(`.${this.handshankCls}`)\r\n                i.style.removeProperty('height')\r\n            })\r\n        }\r\n    }\r\n\r\n    addEvent () {\r\n        window.addEventListener('mousedown', this.mousedown, false)\r\n        window.addEventListener('mousemove', this.mousemove, false)\r\n        window.addEventListener('mouseup', this.mouseup, false)\r\n        this.wangEditorEditableContainer.addEventListener('input', this.input, false)\r\n    }\r\n\r\n    removeEvent () {\r\n        window.removeEventListener('mousedown', this.mousedown, false)\r\n        window.removeEventListener('mousemove', this.mousemove, false)\r\n        window.removeEventListener('mouseup', this.mouseup, false)\r\n        this.wangEditorEditableContainer.removeEventListener('input', this.input, false)\r\n    }\r\n}\r\n","/* eslint-disable */\r\nimport TableMergeCell from '@/assets/tableMergeCell/tableMergeCell'\r\nimport '@/assets/tableMergeCell/tableMergeCell.less'\r\nimport ColumnResizer from '@/assets/columnResizer/columnResizer'\r\nimport '@/assets/columnResizer/columnResizer.less'\r\n\r\nexport const wangEditorTableExtend = {\r\n    mounted() {\r\n        this.$nextTick(() => {\r\n            this.addInsertTableIconlistener()\r\n            this.addPasteTableListener()\r\n        })\r\n    },\r\n    /*updated() {\r\n        this.$nextTick(() => {\r\n            this.initTableInteraction()\r\n        })\r\n    },*/\r\n    watch: {\r\n        value (newVal) {\r\n            if (newVal) {\r\n                if (!/<table.*><\\/table>/gs.test(newVal)) return\r\n                this.$nextTick(() => {\r\n                    this.initTableInteraction()\r\n                })\r\n            }\r\n        }\r\n    },\r\n    methods: {\r\n        initTableInteraction() {\r\n            if (!this.$refs.editor) {\r\n                throw new Error('请为wangEditor富文本容器元素提供ref=\"editor\"属性')\r\n            }\r\n            const tableIsInTable = (target) => {\r\n                while (target && target.parentNode && target.parentNode.tagName !== 'TABLE') {\r\n                    target = target.parentNode\r\n                }\r\n                return target.parentNode\r\n            }\r\n            this.tables = this.$refs.editor.querySelectorAll('.w-e-text table')\r\n            this.tables.forEach(table => {\r\n                if (!tableIsInTable(table)) {\r\n                    if (!table.tableMergeCellInstance) {\r\n                        table.tableMergeCellInstance = new TableMergeCell(table, {\r\n                            onAddCol: (index) => {\r\n                                table.tableColumnResizerInstance.handleAddCol(index)\r\n                            },\r\n                            onDelCol: (index) => {\r\n                                table.tableColumnResizerInstance.handleDelCol(index)\r\n                            },\r\n                        })\r\n                    }\r\n                    if (!table.tableColumnResizerInstance) {\r\n                        table.tableColumnResizerInstance = new ColumnResizer(table)\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        addInsertTextListener() {\r\n            this.insertText = this.iconTable.querySelector('button.right')\r\n            this.insertText && this.insertText.addEventListener('click', this.initTableInteraction, false)\r\n        },\r\n        addInsertTableIconlistener() {\r\n            this.iconTable = document.querySelector(\".w-e-menu[data-title='表格']\")\r\n            this.iconTable && this.iconTable.addEventListener('click', this.addInsertTextListener, false)\r\n        },\r\n        handlePaste(event) {\r\n            const pasteData = (event.clipboardData || window.clipboardData).getData('text/html')\r\n            if (pasteData && pasteData.includes('<table')) {\r\n                this.initTableInteraction()\r\n            }\r\n        },\r\n        addPasteTableListener() {\r\n            this.$refs.editor.addEventListener('paste', this.handlePaste, false)\r\n        },\r\n    },\r\n    beforeDestroy() {\r\n        this.tables && this.tables.forEach(table => {\r\n            if (table.tableMergeCellInstance) {\r\n                table.tableMergeCellInstance.destroy()\r\n                table.tableMergeCellInstance = null\r\n            }\r\n            if (table.tableColumnResizerInstance) {\r\n                table.tableColumnResizerInstance.destroy()\r\n                table.tableColumnResizerInstance = null\r\n            }\r\n        })\r\n        this.tables = null\r\n\r\n        if (this.iconTable) {\r\n            this.iconTable.removeEventListener('click', this.addInsertTextListener, false)\r\n        }\r\n        if (this.insertText) {\r\n            this.insertText.removeEventListener('click', this.initTableInteraction, false)\r\n        }\r\n        if (this.$refs.editor) {\r\n            this.$refs.editor.removeEventListener('paste', this.handlePaste, false)\r\n        }\r\n    },\r\n}\r\n\r\nexport const handleBackendKnowledgeContentData = (res) => {\r\n    if (!res) return res\r\n    const {state, data} = res\r\n    if (state === 200 && data) {\r\n        const {rows} = data\r\n        if (!Array.isArray(rows)) return res\r\n        const len1 = rows.length\r\n        for (let i = 0; i < len1; i++) {\r\n            const row = rows[i]\r\n            const {subActivityPackageKnowledgeDirVos} = row\r\n            if (!Array.isArray(subActivityPackageKnowledgeDirVos)) continue\r\n            const len2 = subActivityPackageKnowledgeDirVos.length\r\n            for (let j = 0; j < len2; j++) {\r\n                const level2Data = subActivityPackageKnowledgeDirVos[j]\r\n                if (!level2Data) continue\r\n                const {knowledgeVo} = level2Data\r\n                if (!knowledgeVo) continue\r\n                const {knowledgeContent} = knowledgeVo\r\n                knowledgeVo.knowledgeContent = knowledgeContent.replace(/(<table.*?>)/gs, '<div class=\"tableMergeCell-tempContainer\">$1').replace(/(<\\/table>)/g, '$1</div>')\r\n            }\r\n        }\r\n    }\r\n    return res\r\n}","<template>\n    <div>\n        <div ref=\"editor\">\n            <div v-html=\"value\"></div>\n        </div>\n        <button type=\"button\" id=\"btn1\" @click=\"getHtml\">获取html</button>\n        <button type=\"button\" id=\"btn2\" @click=\"setHtml\">设置html</button>\n        <div ref=\"newHtml\" class=\"newHtml\"></div>\n    </div>\n</template>\n<script>\n/* eslint-disable */\nimport E from 'wangeditor'\nimport { wangEditorTableExtend } from '@/assets/tool'\nexport default {\n    name: 'about',\n    mixins: [wangEditorTableExtend],\n    data () {\n        return {\n            value: '',\n        }\n    },\n    /*created () {\n        setTimeout(() => {\n            this.value = '<div></div><table border=\"0\" width=\"1900px\" cellpadding=\"0\" cellspacing=\"0\" class=\"tableMergeCell\"><colgroup><col style=\"width: 380px;\"><col style=\"width: 380px;\"><col style=\"width: 380px;\"><col style=\"width: 380px;\"><col style=\"width: 380px;\"></colgroup><thead><tr class=\"tableMergeCell-handshank-container\"><th><i data-col=\"0\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th><i data-col=\"1\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th><i data-col=\"2\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th><i data-col=\"3\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th><i data-col=\"4\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th></tr></thead><tbody><tr><th></th><th></th><th></th><th></th><th></th></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table><table border=\"0\" width=\"1880px\" cellpadding=\"0\" cellspacing=\"0\" class=\"tableMergeCell\"><colgroup><col style=\"width: 376px;\"><col style=\"width: 376px;\"><col style=\"width: 376px;\"><col style=\"width: 376px;\"><col style=\"width: 376px;\"></colgroup><thead><tr class=\"tableMergeCell-handshank-container\"><th><i data-col=\"0\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th><i data-col=\"1\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th><i data-col=\"2\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th><i data-col=\"3\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th><i data-col=\"4\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th></tr></thead><tbody><tr><th></th><th></th><th></th><th></th><th></th></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td></tr></tbody></table>'\n        }, 2000)\n    },*/\n    mounted() {\n        this.initEditor()\n    },\n    methods: {\n        getHtml() {\n            this.newHtml = this.editor.txt.html()\n            this.$refs.newHtml.innerHTML = this.newHtml\n        },\n        setHtml() {\n            // this.newHtml = ``\n            this.editor.txt.html(this.newHtml)\n        },\n        initEditor() {\n            this.editor = new E(this.$refs.editor)\n\n            /*this.editor.config.onchange = (newHtml) => {\n                console.log(\"change 之后最新的 newHtml\", newHtml)\n            };*/\n            this.editor.config.onchangeTimeout = 200; // 修改为 500ms\n            this.editor.create()\n        },\n    },\n}\n</script>\n<style>\n.newHtml {\n    border-collapse: collapse;\n}\n\n.newHtml th,\n.newHtml td {\n    height: 30px;\n    border: 1px solid #eee;\n}\n\n.w-e-text-container {\n    height: 330px !important;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=ef3c75a8&\"\nimport script from \"./About.vue?vue&type=script&lang=js&\"\nexport * from \"./About.vue?vue&type=script&lang=js&\"\nimport style0 from \"./About.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport About from '../views/About.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: About,\n  },\n  // {\n  //   path: '/about',\n  //   name: 'about',\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\n  // },\n  // {\n  //   path: '/redips',\n  //   name: 'redips',\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/Redips.vue')\n  // }\n]\n\nconst router = new VueRouter({\n  routes\n})\n\nexport default router\n","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\nimport {Modal} from 'ant-design-vue'\r\nimport 'ant-design-vue/lib/modal/style/css'\r\nVue.use(Modal)\r\nVue.prototype.$confirm = Modal.confirm\r\nVue.prototype.$info = Modal.info\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}