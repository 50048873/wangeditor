{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?059b","webpack:///./src/App.vue","webpack:///./src/views/About.vue?97d3","webpack:///./src/assets/tableMergeCell/tableMergeCell.js","webpack:///./src/assets/columnResizer/columnResizer.js","webpack:///./src/assets/tool.js","webpack:///src/views/About.vue","webpack:///./src/views/About.vue?f1da","webpack:///./src/views/About.vue","webpack:///./src/router/index.js","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?c650","webpack:///./src/views/About.vue?2fad"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticRenderFns","script","component","ref","domProps","_s","backendHTML","on","getHtml","setHtml","staticClass","defaults","btnDisabledColor","onAddCol","TableMergeCell","tableEle","options","e","target","selectedCells","colorPicker","forEach","ele","style","backgroundColor","removeEventListener","colorChange","remove","removeClass","getSelectedCells","indexStart","indexEnd","rowspan","row","colspan","col","Array","from","index","setAttribute","display","cell","cellSpanProperty","getCellIndex","getCellSpanProperty","contextmenuCell","removeAttribute","color1","getComputedStyle","color","color2","colorToRgb","opts","dataset","console","log","textAlignLeft","textAlignCenter","textAlignRight","addBackgroundColor","delBackgroundColor","delTable","addRow","delRow","addCol","delCol","addTh","delTh","mergeCell","unMergeCell","menuEle","button","tableIsInTable","tagName","ready","cellStart","addClass","contains","cellEnd","highlightSelectedCells","selection","getSelection","collapseToEnd","focusEle","focus","stopPropagation","preventDefault","clientX","clientY","document","createElement","classList","add","addEventListener","menuClick","menus","item","li","textContent","appendChild","body","getBoundingClientRect","width","height","documentElement","clientWidth","clientHeight","diffX","diffY","right","removeProperty","left","top","handleMenuBtnMergeStatus","handleMenuBtnRowStatus","handleSomeMenuBtns","selectionStr","toString","copyedContent","arr","outerHTML","join","separator","clipboardData","setData","test","getData","split","pasteWithRule","assign","tBody","tBodies","rows","tableClassName","selectedCellClassName","maxRowCount","maxColCount","init","span","removeChild","ELEMENT_NODE","Error","addFocusEle","addCellLocation","syncMaxRowAndColCount","addEvent","removeEvent","className","cells","children","childElementCount","selectedLastEle","click","parentNode","includes","querySelectorAll","isValid","selectedCellsIsValid","tr","childLen","cellStart_rowspan","getAttribute","cellEnd_rowspan","isInvalid","some","getIsMergedCellBool","firstTr","maxCount","Math","max","startRowIndex","endRowIndex","rowIndexArray","startColIndex","endColIndex","colIndexArray","isMergedCell","btn_merge","btn_unMerge","btn_addRow","btn_delRow","btn_delCol","getSelectedCellsByClassName","btn_textAlignLeft","btn_textAlignCenter","btn_textAlignRight","btn_addBackgroundColor","btn_delBackgroundColor","trLen","cellLen","relatedCellsArray","getRelatedMergedRowCells","getMergedColIndexArray","newRow","insertRow","insertCell","type","rowIndex","rowIsInMergedRow","willRowIndex","newCell","insertAdjacentHTML","cellIndex","rowLen","currentRowIndex","delFirstRow","delOtherRow","deleteRow","delEmptyTable","nextRow","nextCell","nextElementSibling","getRelatedMergedColCells","delFirstCol","delOtherCol","deleteCell","len","alert","th","innerHTML","td","textAlign","targetCells","resourceCells","lenT","lenR","cellT","cellR","spans","rowspanT","colspanT","m1","match","m2","rowspanR","colspanR","mousedown","removeSomeNoSelfIsClicked","mousemove","mouseup","tableClick","contextmenu","copy","paste","colMinWidth","ColumnResizer","addResizeHandShank","setDefaultWidth","handshankCls","handshank","handshankHover","addSubline","diff","transform","firstRow","currentCol","calcWidth","newWidth","removeSubline","colsWidth","getColsWidth","setTableWidth","columnResizer","reset","subline","getDefaultWidth","colCount","average","tableWidth","firstRowCells","querySelector","map","Number","parseFloat","reduce","acc","cur","wangEditorTableExtend","mounted","$nextTick","addInsertTableIconlistener","updated","initTableInteraction","methods","$refs","editor","tables","table","tableMergeCellInstance","tableColumnResizerInstance","addInsertTextListener","insertText","iconTable","beforeDestroy","destroy","Vue","use","VueRouter","routes","path","About","router","Vuex","Store","state","mutations","actions","config","productionTip","store","render","h","App","$mount"],"mappings":"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","file":"js/app.c3749451.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{attrs:{\"id\":\"nav\"}},[_c('router-link',{attrs:{\"to\":\"/\"}},[_vm._v(\"tableMergeCell\")])],1),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=9daf8a4e&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"editor\"},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.backendHTML)}})]),_c('button',{attrs:{\"type\":\"button\",\"id\":\"btn1\"},on:{\"click\":_vm.getHtml}},[_vm._v(\"获取html\")]),_c('button',{attrs:{\"type\":\"button\",\"id\":\"btn2\"},on:{\"click\":_vm.setHtml}},[_vm._v(\"设置html\")]),_c('div',{ref:\"newHtml\",staticClass:\"newHtml\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable */\r\nconst defaults = {\r\n    btnDisabledColor: '#ddd', // 右键菜单禁用时的颜色\r\n    onAddCol: null,             // 添加列完成后回调\r\n}\r\n\r\nexport default class TableMergeCell {\r\n    static separator = ',%,#,$'\r\n\r\n    static focusEle = null\r\n\r\n    static copyedContent = ''\r\n\r\n    static colorToRgb (color) {\r\n        var span = document.createElement('span')\r\n        span.style.color = color\r\n        document.body.appendChild(span)\r\n        var c = window.getComputedStyle(span).color\r\n        document.body.removeChild(span)\r\n        return c\r\n    }\r\n\r\n    constructor (tableEle, options = {}) {\r\n        this.opts = Object.assign({}, defaults, options)\r\n        this.tableEle = tableEle\r\n        this.tBody = tableEle.tBodies[0]\r\n        this.rows = this.tBody.rows\r\n        this.tableClassName = 'tableMergeCell'\r\n        this.menuEle = null\r\n        this.menus = [\r\n            /*{\r\n                name: '复制',\r\n                key: 'doCopy',\r\n            },\r\n            {\r\n                name: '粘贴',\r\n                key: 'doPaste',\r\n            },*/\r\n            {\r\n                name: '靠左',\r\n                key: 'textAlignLeft',\r\n            },\r\n            {\r\n                name: '居中',\r\n                key: 'textAlignCenter',\r\n            },\r\n            {\r\n                name: '靠右',\r\n                key: 'textAlignRight',\r\n            },\r\n            {\r\n                name: '设置背景色',\r\n                key: 'addBackgroundColor',\r\n            },\r\n            {\r\n                name: '删除背景色',\r\n                key: 'delBackgroundColor',\r\n            },\r\n            {\r\n                name: '添加行',\r\n                key: 'addRow',\r\n            },\r\n            {\r\n                name: '删除行',\r\n                key: 'delRow',\r\n            },\r\n            {\r\n                name: '添加列',\r\n                key: 'addCol',\r\n            },\r\n            {\r\n                name: '删除列',\r\n                key: 'delCol',\r\n            },\r\n            {\r\n                name: '设置表头',\r\n                key: 'addTh',\r\n            },\r\n            {\r\n                name: '取消表头',\r\n                key: 'delTh',\r\n            },\r\n            {\r\n                name: '合并单元格',\r\n                key: 'merge',\r\n            }, \r\n            {\r\n                name: '取消合并单元格',\r\n                key: 'unMerge',\r\n            },\r\n            {\r\n                name: '删除表格',\r\n                key: 'delTable',\r\n            },\r\n        ]\r\n        this.selectedCellClassName = 'tableMergeCell-selected'\r\n        this.ready = false\r\n        this.cellStart = null\r\n        this.cellEnd = null\r\n        this.indexStart = {\r\n            row: -1,\r\n            col: -1,\r\n        }\r\n        this.indexEnd = {\r\n            row: -1,\r\n            col: -1,\r\n        }\r\n        this.maxRowCount = 0\r\n        this.maxColCount = 0\r\n        this.contextmenuCell = null\r\n        this.init()\r\n    }\r\n\r\n    // 初始化\r\n    init () {\r\n        if (!this.tableEle && this.tableEle.ELEMENT_NODE !== 1 && this.tableEle.tagName !== 'TABLE') {\r\n            throw new Error('请传入table元素！')\r\n        }\r\n        this.tableEle.classList.add(this.tableClassName)\r\n        this.addFocusEle()\r\n        this.addCellLocation()\r\n        this.syncMaxRowAndColCount()\r\n        this.addEvent()\r\n    }\r\n\r\n    destroy () {\r\n        this.removeEvent()\r\n        if (this.menuEle) {\r\n            this.menuEle.removeEventListener('click', this.menuClick, false)\r\n            this.menuEle.remove()\r\n        }\r\n        TableMergeCell.focusEle && TableMergeCell.focusEle.remove()\r\n    }\r\n\r\n    // 创建焦点元素\r\n    addFocusEle () {\r\n        if (!TableMergeCell.focusEle) {\r\n            TableMergeCell.focusEle = document.createElement('button')\r\n            TableMergeCell.focusEle.className = 'tableMergeCell-focusEle'\r\n            document.body.appendChild(TableMergeCell.focusEle)\r\n        }\r\n    }\r\n\r\n    // 添加调试坐标\r\n    addCellLocation () {\r\n        const {rows} = this\r\n        rows.forEach((row, i) => {\r\n            const cells = row.children\r\n            cells.forEach((cell, j) => {\r\n                cell.textContent = i + '-' + j\r\n            })\r\n        })\r\n    }\r\n\r\n    // 同步最大行数和最大列数\r\n    syncMaxRowAndColCount () {\r\n        const {rows} = this\r\n        if (rows.length) {\r\n            this.maxRowCount = rows.length\r\n            this.maxColCount = rows[0].childElementCount\r\n        } else {\r\n            this.maxRowCount = 0\r\n            this.maxColCount = 0\r\n        }\r\n    }\r\n\r\n    // 添加背景色\r\n    colorChange = (e) => {\r\n        const {target} = e\r\n        const {value} = target\r\n        const {selectedCells} = this.colorPicker\r\n        if (selectedCells.length) {\r\n            selectedCells.forEach(ele => {\r\n                ele.style.backgroundColor = value\r\n            })\r\n        }\r\n        if (this.colorPicker) {\r\n            this.colorPicker.removeEventListener('input', this.colorChange)\r\n            this.colorPicker.remove()\r\n            this.colorPicker = null\r\n        }\r\n        this.removeClass()\r\n    }\r\n\r\n    // 显示颜色选择弹窗\r\n    addBackgroundColor () {\r\n        const selectedCells = this.getSelectedCells()\r\n        if (!selectedCells.length) return\r\n        this.colorPicker = document.createElement('input')\r\n        this.colorPicker.setAttribute('type', 'color')\r\n        this.colorPicker.className = 'tableMergeCell-colorPicker'\r\n        this.colorPicker.addEventListener('input', this.colorChange, false)\r\n        this.colorPicker.selectedCells = selectedCells\r\n        const selectedLastEle = selectedCells[selectedCells.length - 1]\r\n        selectedLastEle.appendChild(this.colorPicker)\r\n        this.colorPicker.click()\r\n    }\r\n\r\n    // 删除背景色\r\n    delBackgroundColor () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(ele => {\r\n            ele.style.removeProperty('background-color')\r\n        })\r\n    }\r\n\r\n    // 表中表\r\n    tableIsInTable (target) {\r\n        while (target && target.tagName !== 'TABLE') {\r\n            target = target.parentNode\r\n        }\r\n        return this.tableEle !== target && this.tableEle.contains(target)\r\n    }\r\n\r\n    // 为指定单元格添加类名\r\n    addClass (cell) {\r\n        if (!cell.className.includes(this.selectedCellClassName)) {\r\n            cell.classList.add(this.selectedCellClassName)\r\n        }\r\n    }\r\n\r\n    // 移除指定或选取元素类名\r\n    removeClass (cell) {\r\n        if (cell) {\r\n            cell.classList.remove(this.selectedCellClassName)\r\n            if (cell.className === '') {\r\n                cell.removeAttribute('class')\r\n            }\r\n        } else {\r\n            const selectedCells = this.tableEle.querySelectorAll('.tableMergeCell-selected')\r\n            if (selectedCells.length) {\r\n                selectedCells.forEach(item => {\r\n                    item.classList.remove(this.selectedCellClassName)\r\n                    if (item.className === '') {\r\n                        item.removeAttribute('class')\r\n                    }\r\n                })\r\n            }  \r\n        }\r\n    }\r\n\r\n    // 高亮选取的单元格\r\n    highlightSelectedCells () {\r\n        const {rows} = this\r\n        const isValid = this.selectedCellsIsValid(rows)\r\n        if (!isValid) return\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(ele => {\r\n            this.addClass(ele)\r\n        })\r\n    }\r\n\r\n    // 获取选取的单元格\r\n    getSelectedCells () {\r\n        const {indexStart, indexEnd} = this\r\n        let selectedCells = []\r\n        const {rows} = this\r\n        for (let i = 0; i < this.maxRowCount; i++) {\r\n            const tr = rows[i]\r\n            const {children} = tr\r\n            const childLen = children.length\r\n            for (let j = 0; j < childLen; j++) {\r\n                const cell = children[j]\r\n                if (i >= indexStart.row && i <= indexEnd.row && j >= indexStart.col && j <= indexEnd.col) {\r\n                    selectedCells.push(cell)\r\n                } \r\n            }\r\n        }\r\n        return selectedCells\r\n    }\r\n\r\n    // 判断选取的单元格是否有效\r\n    selectedCellsIsValid () {\r\n        const cellStart_rowspan = this.cellStart.getAttribute('rowspan')\r\n        const cellEnd_rowspan = this.cellEnd && this.cellEnd.getAttribute('rowspan')\r\n        if (cellStart_rowspan || cellEnd_rowspan) {\r\n            // console.log('不符合合并规则：选中区域不能包含已合并的单元格。')\r\n            return false\r\n        } \r\n        const selectedCells = this.getSelectedCells()\r\n        const isInvalid = Array.from(selectedCells).some(ele => {\r\n            return ele.style.display === 'none' || this.getIsMergedCellBool(ele)\r\n        })\r\n        if (isInvalid) {\r\n            // console.log('不符合合并规则：不能有隐藏的单元格或合并的单元格。')\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    // 合并单元格\r\n    mergeCell = () => {\r\n        const selectedCells = this.getSelectedCells()\r\n        const {indexStart, indexEnd} = this\r\n        const rowspan = indexEnd.row - indexStart.row + 1\r\n        const colspan = indexEnd.col - indexStart.col + 1\r\n        Array.from(selectedCells).forEach((ele, index) => {\r\n            if (index === 0) {\r\n                ele.setAttribute('rowspan', rowspan)\r\n                ele.setAttribute('colspan', colspan)\r\n            } else {\r\n                ele.style.display = 'none'\r\n            }\r\n            this.removeClass(ele)\r\n        })\r\n    }\r\n\r\n    // 取消合并单元格\r\n    unMergeCell = (cell) => {\r\n        let cellSpanProperty = null\r\n        if (cell) {\r\n            this.indexStart = this.getCellIndex(cell)\r\n            cellSpanProperty = this.getCellSpanProperty(cell)\r\n        } else {\r\n            this.indexStart = this.getCellIndex(this.contextmenuCell)\r\n            cellSpanProperty = this.getCellSpanProperty(this.contextmenuCell)\r\n        }\r\n        this.indexEnd = {\r\n            row: cellSpanProperty.rowspan - 1 + this.indexStart.row,\r\n            col: cellSpanProperty.colspan - 1 + this.indexStart.col,\r\n        }\r\n        const selectedCells = this.getSelectedCells()\r\n        Array.from(selectedCells).forEach((ele, index) => {\r\n            if (index === 0) {\r\n                ele.removeAttribute('rowspan')\r\n                ele.removeAttribute('colspan')\r\n            } else {\r\n                ele.style.display = 'table-cell'\r\n            }\r\n            this.removeClass(ele)\r\n        })\r\n    }\r\n\r\n    // 获取单元格行列索引\r\n    getCellIndex (ele) {\r\n        let index = {\r\n            row: -1,\r\n            col: -1,\r\n        }\r\n        if (!this.cellStart) return index\r\n        const {tagName} = this.cellStart\r\n        const {rows} = this\r\n        if (tagName === 'TH') {\r\n            const firstTr = rows[0]\r\n            const {children} = firstTr\r\n            const childLen = children.length\r\n            index.row = 0\r\n            for (let j = 0; j < childLen; j++) {\r\n                const cell = children[j]\r\n                if (cell === ele) {\r\n                    index.col = j\r\n                    break\r\n                }\r\n            }\r\n        } else if (tagName === 'TD') {\r\n            for (let i = 0; i < this.maxRowCount; i++) {\r\n                const tr = rows[i]\r\n                const {children} = tr\r\n                const childLen = children.length\r\n                for (let j = 0; j < childLen; j++) {\r\n                    const cell = children[j]\r\n                    if (cell === ele) {\r\n                        index.row = i\r\n                        index.col = j\r\n                        break\r\n                    }\r\n                }\r\n                if (index.row > 0) {\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        \r\n        return index\r\n    }\r\n\r\n    // 获取单元格rowspan, colspan属性值\r\n    getCellSpanProperty (cell) {\r\n        return {\r\n            rowspan: cell.getAttribute('rowspan') * 1,\r\n            colspan: cell.getAttribute('colspan') * 1,\r\n        }\r\n    }\r\n\r\n    // 获取是否是合并过的单元格\r\n    getIsMergedCellBool (cell) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const maxCount = Math.max(rowspan, colspan)\r\n        return maxCount > 1\r\n    }\r\n\r\n    // 根据类名获取选取的单元格\r\n    getSelectedCellsByClassName () {\r\n        return Array.from(this.tableEle.querySelectorAll(`.${this.selectedCellClassName}`))\r\n    }\r\n\r\n    // 获取受影响的合并行索引数组\r\n    getMergedRowIndexArray (startRowIndex, rowspan) {\r\n        const endRowIndex = startRowIndex + rowspan - 1\r\n        let rowIndexArray = []\r\n        do {\r\n            rowIndexArray.push(startRowIndex)\r\n            startRowIndex++\r\n        } while (startRowIndex <= endRowIndex)\r\n        return rowIndexArray\r\n    }\r\n\r\n    // 获取受影响的合并列索引数组\r\n    getMergedColIndexArray (startColIndex, colspan) {\r\n        const endColIndex = startColIndex + colspan - 1\r\n        let colIndexArray = []\r\n        do {\r\n            colIndexArray.push(startColIndex)\r\n            startColIndex++\r\n        } while (startColIndex <= endColIndex)\r\n        return colIndexArray\r\n    }\r\n\r\n    // 控制右键菜单合并按钮是否可点击\r\n    handleMenuBtnMergeStatus (cell) {\r\n        const {btnDisabledColor} = this.opts\r\n        this.isMergedCell = this.getIsMergedCellBool(cell)\r\n        /**\r\n        * 1.开始选中的单元格是否等于最后选中的单元格\r\n        * 2.是否合并\r\n        * 3.直接右键点击，未选中单元格时的情况\r\n        */\r\n\r\n        if ((this.cellStart === this.cellEnd || !cell.className.includes(this.selectedCellClassName)) && !cell.getAttribute('rowspan')) {\r\n            this.btn_merge.style.color = btnDisabledColor\r\n            this.btn_unMerge.style.color = btnDisabledColor\r\n        } else if (this.getIsMergedCellBool(cell)) {\r\n            this.btn_merge.style.color = btnDisabledColor\r\n            this.btn_unMerge.style.removeProperty('color')\r\n        } else {\r\n            this.btn_merge.style.removeProperty('color')\r\n            this.btn_unMerge.style.color = btnDisabledColor\r\n        }\r\n    }\r\n\r\n    // 控制右键菜单行按钮是否可点击\r\n    handleMenuBtnRowStatus (target) {\r\n        const {btnDisabledColor} = this.opts\r\n        if (target.tagName === 'TH') {\r\n            this.btn_addRow.style.color = btnDisabledColor\r\n        } else {\r\n            this.btn_addRow.style.removeProperty('color')\r\n        }\r\n        const {rowspan, colspan} = this.getCellSpanProperty(target)\r\n        if (rowspan > 1 || colspan > 1) {\r\n            this.btn_delRow.style.color = btnDisabledColor\r\n            this.btn_delCol.style.color = btnDisabledColor\r\n        } else {\r\n            this.btn_delRow.style.removeProperty('color')\r\n            this.btn_delCol.style.removeProperty('color')\r\n        }\r\n    }\r\n\r\n    // 当未选取单元格时，控制部分右键菜单项是否可点击\r\n    handleSomeMenuBtns (target) {\r\n        const {btnDisabledColor} = this.opts\r\n        const selectedCells = this.getSelectedCellsByClassName()\r\n        if (selectedCells.length) {\r\n            this.btn_textAlignLeft.style.removeProperty('color')\r\n            this.btn_textAlignCenter.style.removeProperty('color')\r\n            this.btn_textAlignRight.style.removeProperty('color')\r\n            this.btn_addBackgroundColor.style.removeProperty('color')\r\n            this.btn_delBackgroundColor.style.removeProperty('color')\r\n        } else {\r\n            this.btn_addBackgroundColor.style.color = btnDisabledColor\r\n            this.btn_delBackgroundColor.style.color = btnDisabledColor\r\n            this.btn_textAlignLeft.style.color = btnDisabledColor\r\n            this.btn_textAlignCenter.style.color = btnDisabledColor\r\n            this.btn_textAlignRight.style.color = btnDisabledColor\r\n        }\r\n    }\r\n\r\n    // 控制删除的列与关联列的关系\r\n    handleMergedCellByDelCol (index) {\r\n        const {rows} = this\r\n        const trLen = rows.length\r\n        for (let i = 0; i < trLen; i++) {\r\n            const row = rows[i]\r\n            const cells = row.children\r\n            const cellLen = cells.length\r\n            for (let j = 0; j < cellLen; j++) {\r\n                const cell = cells[j]\r\n                const {colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index > j && index < j + colspan) {\r\n                    cell.setAttribute('colspan', colspan - 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 删除表格\r\n    delTable () {\r\n        /*this.$confirm({\r\n            title: '删除确认？',\r\n            content: '您确认删除表格吗？',\r\n            zIndex: 10009,\r\n            onOk () {\r\n                console.log('ok')\r\n            },\r\n            onCancel () {\r\n                console.log('cancel')\r\n            },\r\n        })*/\r\n        this.tableEle.remove()\r\n    }\r\n\r\n    // 删除空表格\r\n    delEmptyTable () {\r\n        const {rows} = this\r\n        if (!rows.length || !rows[0].children.length) {\r\n            this.delTable()\r\n        }\r\n    }\r\n\r\n    // 上面添加一行\r\n    addRow (index) {\r\n        const {maxColCount, tBody} = this\r\n        const relatedCellsArray = this.getRelatedMergedRowCells(index, 'addRow')\r\n        let colIndexArray = []\r\n        relatedCellsArray.forEach(cell => {\r\n            const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n            const {col} = this.getCellIndex(cell)\r\n            colIndexArray.push(...this.getMergedColIndexArray(col, colspan))\r\n            cell.setAttribute('rowspan', rowspan + 1)\r\n        })\r\n        const newRow = tBody.insertRow(index)\r\n        for (let i = 0; i < maxColCount; i++) {\r\n            newRow.insertCell(i)\r\n        }\r\n        colIndexArray.forEach(index => {\r\n            newRow.children[index].style.display = 'none'\r\n        })\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 获取相关的行合并单元格\r\n    getRelatedMergedRowCells (index, type) {\r\n        const {rows} = this\r\n        let relatedCellsArray = []\r\n        rows.forEach((row, rowIndex) => {\r\n            const cells = row.children\r\n            cells.forEach(cell => {\r\n                const {rowspan} = this.getCellSpanProperty(cell)\r\n                if (rowspan > 1 && this.rowIsInMergedRow(rowIndex, rowspan, index, type)) {\r\n                    relatedCellsArray.push(cell)\r\n                }\r\n            })\r\n        })\r\n        return relatedCellsArray\r\n    }\r\n\r\n    // 行是在合并单元格范围内\r\n    rowIsInMergedRow (startRowIndex, rowspan, willRowIndex, type) {\r\n        if (type === 'addRow') {\r\n            return willRowIndex > startRowIndex && willRowIndex <= startRowIndex + rowspan - 1\r\n        } else if (type === 'delRow') {\r\n            return willRowIndex >= startRowIndex && willRowIndex <= startRowIndex + rowspan - 1\r\n        }\r\n    }\r\n\r\n    // 左边添加一列\r\n    addCol (index) {\r\n        const {onAddCol} = this.opts\r\n        this.syncMaxRowAndColCount()\r\n\r\n        const {maxRowCount} = this\r\n        const {rows} = this\r\n        for (let i = 0; i < maxRowCount; i++) {\r\n            const row = rows[i]\r\n            const cell = row.children[index]\r\n            const newCell = cell.tagName === 'TH' ? '<th></th>' : '<td></td>'\r\n            cell.insertAdjacentHTML('beforebegin', newCell)\r\n        }\r\n\r\n        rows.forEach((row, rowIndex) => {\r\n            const cells = row.children\r\n            cells.forEach((cell, cellIndex) => {\r\n                const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index > cellIndex && index <= cellIndex + colspan - 1) {\r\n                    cell.setAttribute('colspan', colspan + 1)\r\n                    cells[index].style.display = 'none'\r\n                    let rowLen = rowspan\r\n                    let currentRowIndex = rowIndex\r\n                    while (rowLen > 1) {\r\n                        rows[++currentRowIndex].children[index].style.display = 'none'\r\n                        rowLen--\r\n                    }\r\n                }\r\n            })\r\n        })\r\n\r\n        this.syncMaxRowAndColCount()\r\n\r\n        onAddCol && onAddCol()\r\n    }\r\n\r\n    // 删除行\r\n    delRow (index) {\r\n        const {tBody, rows} = this\r\n        const relatedCellsArray = this.getRelatedMergedRowCells(index, 'delRow')\r\n        relatedCellsArray.forEach(cell => {\r\n            const {row, col} = this.getCellIndex(cell)\r\n            if (row === index) {\r\n                this.delFirstRow(rows, col, cell, index)\r\n            } else {\r\n                this.delOtherRow(cell)\r\n            }\r\n        })\r\n        tBody.deleteRow(index)\r\n        this.delEmptyTable()\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 删除非第一行\r\n    delOtherRow (cell) {\r\n        const {rowspan} = this.getCellSpanProperty(cell)\r\n        cell.setAttribute('rowspan', rowspan - 1)\r\n    }\r\n\r\n    // 删除第一行\r\n    delFirstRow (rows, col, cell, index) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const nextRow = rows[index + 1]\r\n        const nextCell = nextRow.children[col]\r\n        nextCell.setAttribute('rowspan', rowspan - 1)\r\n        nextCell.setAttribute('colspan', colspan)\r\n        nextCell.style.display = 'table-cell'\r\n    }\r\n\r\n    // 获取相关的列合并单元格\r\n    getRelatedMergedColCells (index) {\r\n        const {rows} = this\r\n        let relatedCellsArray = []\r\n        rows.forEach(row => {\r\n            const cells = row.children\r\n            cells.forEach((cell, cellIndex) => {\r\n                const {colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index >= cellIndex && index <= cellIndex + colspan - 1) {\r\n                    relatedCellsArray.push(cell)\r\n                }\r\n            })\r\n        })\r\n        return relatedCellsArray\r\n    }\r\n\r\n    // 删除非第一列\r\n    delOtherCol (cell) {\r\n        const {colspan} = this.getCellSpanProperty(cell)\r\n        cell.setAttribute('colspan', colspan - 1)\r\n    }\r\n\r\n    // 删除第一列\r\n    delFirstCol (cell) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const nextCell = cell.nextElementSibling\r\n        nextCell.setAttribute('colspan', colspan - 1)\r\n        nextCell.setAttribute('rowspan', rowspan)\r\n        nextCell.style.display = 'table-cell'\r\n    }\r\n\r\n    // 删除列\r\n    delCol (index) {\r\n        const {tBody, rows} = this\r\n        const relatedCellsArray = this.getRelatedMergedColCells(index)\r\n        relatedCellsArray.forEach(cell => {\r\n            const {col} = this.getCellIndex(cell)\r\n            if (col === index) {\r\n                this.delFirstCol(cell)\r\n            } else {\r\n                this.delOtherCol(cell)\r\n            }\r\n        })\r\n        rows.forEach(row => {\r\n            row.deleteCell(index)\r\n        })\r\n        this.delEmptyTable()\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 添加表头\r\n    addTh () {\r\n        const firstTr = this.rows[0]\r\n        const {children} = firstTr\r\n        let tr = document.createElement('tr')\r\n        if (children[0].tagName === 'TD') {\r\n            const len = children.length\r\n            for (let i = 0; i < len; i++) {\r\n                const cell = children[i]\r\n                if (this.getIsMergedCellBool(cell)) {\r\n                    alert('请先取消第一行合并的单元格！')\r\n                    break\r\n                }\r\n                const th = document.createElement('th')\r\n                th.innerHTML = cell.innerHTML\r\n                tr.appendChild(th)\r\n            }\r\n            if (tr.childElementCount === len) {\r\n                firstTr.innerHTML = tr.innerHTML\r\n            }\r\n        }\r\n    }\r\n\r\n    // 删除表头\r\n    delTh () {\r\n        const firstTr = this.rows[0]\r\n        const {children} = firstTr\r\n        let tr = document.createElement('tr')\r\n        if (children[0].tagName === 'TH') {\r\n            children.forEach(cell => {\r\n                const td = document.createElement('td')\r\n                td.innerHTML = cell.innerHTML\r\n                tr.appendChild(td)\r\n            })\r\n            firstTr.innerHTML = tr.innerHTML\r\n        }\r\n    }\r\n\r\n    // 靠左\r\n    textAlignLeft () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'left'\r\n        })\r\n    }\r\n\r\n    // 居中\r\n    textAlignCenter () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'center'\r\n        })\r\n    }\r\n\r\n    // 靠右\r\n    textAlignRight () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'right'\r\n        })\r\n    }\r\n\r\n    // 右击拷贝\r\n    /*doCopy () {\r\n        // const evt = document.createEvent('UIEvents')\r\n        // evt.initEvent('copy', true, true)\r\n        // document.dispatchEvent(evt)\r\n\r\n        const evt = new Event('ClipboardEvent')\r\n        evt.initEvent('copy', true, true)\r\n        document.dispatchEvent(evt)\r\n        console.log(evt)\r\n    }*/\r\n\r\n    // 右击粘贴\r\n    /*doPaste () {\r\n        // const evt = document.createEvent('UIEvents')\r\n        // evt.initEvent('paste', true, true)\r\n        // document.dispatchEvent(evt)\r\n\r\n        const evt = new Event('ClipboardEvent')\r\n        evt.initEvent('paste', true, true)\r\n        document.dispatchEvent(evt)\r\n        console.log(evt)\r\n    }*/\r\n\r\n    // 点击右键菜单项时\r\n    menuClick = (e) => {\r\n        const {target} = e\r\n        const color1 = window.getComputedStyle(target).color\r\n        const color2 = TableMergeCell.colorToRgb(this.opts.btnDisabledColor)\r\n        if (color1 === color2) return\r\n        const key = target.dataset.key\r\n        const {row, col} = this.getCellIndex(this.contextmenuCell)\r\n        switch (key) {\r\n            /*case 'doCopy':\r\n                console.log('复制')\r\n                this.doCopy()\r\n                break\r\n            case 'doPaste':\r\n                console.log('粘贴')\r\n                this.doPaste()\r\n                break*/\r\n            case 'textAlignLeft':\r\n                console.log('靠左')\r\n                this.textAlignLeft()\r\n                break\r\n            case 'textAlignCenter':\r\n                console.log('居中')\r\n                this.textAlignCenter()\r\n                break\r\n            case 'textAlignRight':\r\n                console.log('靠右')\r\n                this.textAlignRight()\r\n                break\r\n            case 'addBackgroundColor':\r\n                console.log('设置背景色')\r\n                this.addBackgroundColor()\r\n                break\r\n            case 'delBackgroundColor':\r\n                console.log('删除背景色')\r\n                this.delBackgroundColor()\r\n                break\r\n            case 'delTable':\r\n                console.log('删除表格')\r\n                this.delTable()\r\n                break\r\n            case 'addRow':\r\n                console.log('添加行')\r\n                this.addRow(row)\r\n                break\r\n            case 'delRow':\r\n                console.log('删除行')\r\n                this.delRow(row)\r\n                break\r\n            case 'addCol':\r\n                console.log('添加列')\r\n                this.addCol(col)\r\n                break\r\n            case 'delCol':\r\n                console.log('删除列')\r\n                this.delCol(col)\r\n                break\r\n            case 'addTh':\r\n                console.log('设置表头')\r\n                this.addTh()\r\n                break\r\n            case 'delTh':\r\n                console.log('取消表头')\r\n                this.delTh()\r\n                break\r\n            case 'merge':\r\n                console.log('合并单元格')\r\n                this.mergeCell()\r\n                break\r\n            case 'unMerge':\r\n                console.log('取消合并单元格')\r\n                this.unMergeCell()\r\n                break\r\n        }\r\n        if (this.menuEle) {\r\n            this.menuEle.style.display = 'none'\r\n        }\r\n    }\r\n\r\n    mousedown = (e) => {\r\n        const {target, button} = e\r\n        if (this.tableIsInTable(target) || button !== 0) return\r\n        const {tagName} = target\r\n        if (tagName === 'TD' || tagName === 'TH') {\r\n            this.ready = true\r\n            this.cellStart = target\r\n            this.indexStart = this.getCellIndex(target)\r\n            this.removeClass()\r\n            this.addClass(target)\r\n        }\r\n    }\r\n\r\n    // 移除一些特征\r\n    removeSomeNoSelfIsClicked = (e) => {\r\n        const {target} = e\r\n        // 隐藏右键菜单\r\n        if (this.menuEle && !this.menuEle.contains(target)) {\r\n            this.menuEle.style.display = 'none'\r\n        }\r\n        // 未点击表格时（且未点击右键菜单的添加背景色）移除高亮单元格\r\n        const key = target.dataset.key\r\n        if (!this.tableEle.contains(target) && key !== 'addBackgroundColor') {\r\n            this.removeClass()\r\n        }\r\n        // 移除背景色设置输入框\r\n        if (this.colorPicker) {\r\n            this.colorPicker.remove()\r\n        }\r\n    }\r\n\r\n    mousemove = (e) => {\r\n        if (this.ready) {\r\n            const {target} = e\r\n            this.cellEnd = target\r\n            this.indexEnd = this.getCellIndex(target)\r\n            this.removeClass()\r\n            this.highlightSelectedCells()\r\n            const selection = window.getSelection()\r\n            if (this.cellStart !== this.cellEnd) {\r\n                selection.collapseToEnd()\r\n            }\r\n        }\r\n    }\r\n\r\n    mouseup = (e) => {\r\n        const {target, button} = e\r\n        if (button === 0 && this.ready) {\r\n            this.cellEnd = target\r\n            this.indexEnd = this.getCellIndex(target)\r\n            this.ready = false\r\n            if (this.cellStart !== this.cellEnd) {\r\n                TableMergeCell.focusEle && TableMergeCell.focusEle.focus()\r\n            }\r\n        }\r\n    }\r\n\r\n    tableClick = (e) => {\r\n        const {target, button} = e\r\n        if (button === 0 && target.tagName !== 'INPUT' && this.tableEle.contains(target)) {\r\n            e.stopPropagation()\r\n        }\r\n    }\r\n\r\n    contextmenu = (e) => {\r\n        e.preventDefault()\r\n        const {target, clientX, clientY} = e\r\n        if (this.tableIsInTable(target)) return\r\n        if (!this.menuEle) {\r\n            this.menuEle = document.createElement('ul')\r\n            this.menuEle.classList.add('tableMergeCell-contextmenu')\r\n            this.menuEle.addEventListener('click', this.menuClick, false)\r\n\r\n            this.menus.forEach(item => {\r\n                const li = document.createElement('li')\r\n                const {name, key} = item\r\n                li.textContent = name\r\n                li.dataset.key = key\r\n                this[`btn_${key}`] = li\r\n                this.menuEle.appendChild(li)\r\n            })\r\n\r\n            document.body.appendChild(this.menuEle)\r\n            const {width, height} = this.menuEle.getBoundingClientRect()\r\n            this.menuEle.dataset.width = width\r\n            this.menuEle.dataset.height = height\r\n        }\r\n        \r\n        const {clientWidth, clientHeight} = document.documentElement\r\n        const {width, height} = this.menuEle.dataset\r\n        const diffX = clientWidth - clientX\r\n        const diffY = clientHeight - clientY\r\n        if (diffX < width) {\r\n            this.menuEle.style.right = '10px'\r\n            this.menuEle.style.removeProperty('left')\r\n        } else {\r\n            this.menuEle.style.left = `${clientX}px`\r\n            this.menuEle.style.removeProperty('right')\r\n        }\r\n        if (diffY < height) {\r\n            this.menuEle.style.height = `${diffY - 10}px`\r\n        } else {\r\n            this.menuEle.style.removeProperty('height')\r\n        }\r\n        this.menuEle.style.top = `${clientY}px`\r\n        this.menuEle.style.display = 'block'\r\n        this.contextmenuCell = target\r\n        this.handleMenuBtnMergeStatus(target)\r\n        this.handleMenuBtnRowStatus(target)\r\n        this.handleSomeMenuBtns(target)\r\n    }\r\n\r\n    copy = (e) => {\r\n        const selectionStr = window.getSelection().toString()\r\n        if (selectionStr) {\r\n            TableMergeCell.copyedContent = selectionStr\r\n        } else {\r\n            e.preventDefault()\r\n            const selectedCells = this.getSelectedCells()\r\n            if (!selectedCells.length) return\r\n            let arr = []\r\n            selectedCells.forEach(cell => {\r\n                arr.push(cell.outerHTML)\r\n            })\r\n            TableMergeCell.copyedContent = arr.join(TableMergeCell.separator)\r\n            if (e.clipboardData) {\r\n                e.clipboardData.setData('text/plain', TableMergeCell.copyedContent)\r\n            } else if (window.clipboardData) {\r\n                window.clipboardData.setData('text', TableMergeCell.copyedContent)\r\n            }\r\n        }\r\n        // console.log(TableMergeCell.copyedContent)\r\n    }\r\n\r\n    pasteWithRule (targetCells, resourceCells) {\r\n        const lenT = targetCells.length\r\n        const lenR = resourceCells.length\r\n        if (lenT !== lenR) return\r\n        for (let i = 0; i < lenT; i++) {\r\n            const cellT = targetCells[i]\r\n            const cellR = resourceCells[i]\r\n            const spans = this.getCellSpanProperty(cellT)\r\n            const rowspanT = spans.rowspan\r\n            const colspanT = spans.colspan\r\n            const m1 = cellR.match(/rowspan=\"(\\d+)\"/)\r\n            const m2 = cellR.match(/colspan=\"(\\d+)\"/)\r\n            let rowspanR = 0, colspanR = 0\r\n            if (m1 && m1[1]) {\r\n                rowspanR = m1[1] * 1\r\n            }\r\n            if (m2 && m2[1]) {\r\n                colspanR = m2[1] * 1\r\n            }\r\n            if (rowspanT === rowspanR && colspanT === colspanR) {\r\n                cellT.outerHTML = cellR\r\n            }\r\n        }\r\n    }\r\n\r\n    paste = (e) => {\r\n        const selectedCells = this.getSelectedCells()\r\n        if (!selectedCells.length) return\r\n        // console.log('paste')\r\n        if (/<.+>/.test(TableMergeCell.copyedContent)) {\r\n            e.preventDefault()\r\n            const clipboardData = e.clipboardData || window.clipboardData\r\n            const data = clipboardData.getData('text')\r\n            const arr = data.split(TableMergeCell.separator)\r\n            this.pasteWithRule(selectedCells, arr)\r\n            // console.log(selectedCells, arr)\r\n        }\r\n    }\r\n\r\n    addEvent () {\r\n        window.addEventListener('mousedown', this.mousedown, false)\r\n        window.addEventListener('mousedown', this.removeSomeNoSelfIsClicked, false)\r\n        window.addEventListener('mousemove', this.mousemove, false)\r\n        window.addEventListener('mouseup', this.mouseup, false)\r\n        this.tableEle.addEventListener('click', this.tableClick, false)\r\n        this.tableEle.addEventListener('contextmenu', this.contextmenu, false)\r\n        window.addEventListener('copy', this.copy, false)\r\n        window.addEventListener('paste', this.paste, false)\r\n    }\r\n\r\n    removeEvent () {\r\n        window.removeEventListener('mousedown', this.mousedown, false)\r\n        window.removeEventListener('mousedown', this.removeSomeNoSelfIsClicked, false)\r\n        window.removeEventListener('mousemove', this.mousemove, false)\r\n        window.removeEventListener('mouseup', this.mouseup, false)\r\n        this.tableEle.removeEventListener('click', this.tableClick, false)\r\n        this.tableEle.removeEventListener('contextmenu', this.contextmenu, false)\r\n        window.removeEventListener('copy', this.copy, false)\r\n        window.removeEventListener('paste', this.paste, false)\r\n    }\r\n}\r\n","/* eslint-disable */\r\nconst defaults = {\r\n    colMinWidth: 50, // 列最小宽度\r\n}\r\n\r\nexport default class ColumnResizer {\r\n    constructor (tableEle, options = {}) {\r\n        this.opts = Object.assign({}, defaults, options)\r\n        this.tableEle = tableEle\r\n        this.tableEle.columnResizer = Object.assign({}, {reset: this.reset})\r\n        this.handshank = null\r\n        this.handshankCls = 'tableMergeCell-handshank'\r\n        this.subline = 'tableMergeCell-subline'\r\n        this.handshankHover = 'tableMergeCell-handshank-hover'\r\n        this.init()\r\n    }\r\n\r\n    // 初始化\r\n    init () {\r\n        if (!this.tableEle || this.tableEle.ELEMENT_NODE !== 1 || this.tableEle.tagName !== 'TABLE') {\r\n            throw new Error('请传入table元素！')\r\n        }\r\n        this.getDefaultWidth()\r\n        this.setDefaultWidth()\r\n        this.addResizeHandShank()\r\n        this.addEvent()\r\n    }\r\n\r\n    destroy () {\r\n        this.removeEvent()\r\n    }\r\n\r\n    // 获取表格与列宽默认值\r\n    getDefaultWidth () {\r\n        const {width} = this.tableEle.getBoundingClientRect()\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const colCount = rows[0].childElementCount\r\n        this.average = width / colCount\r\n        this.tableWidth = width\r\n    }\r\n\r\n    // 重置相关内容\r\n    reset = () => {\r\n        this.addResizeHandShank()\r\n        this.setDefaultWidth()\r\n    }\r\n\r\n    // 初始化默认宽\r\n    setDefaultWidth () {\r\n        this.setTableWidth(this.tableWidth)\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const firstRowCells = rows[0].children\r\n        firstRowCells.forEach(cell => {\r\n            const width = cell.style.width\r\n            if (!width) {\r\n                cell.style.width = `${this.average}px`\r\n            }\r\n        })\r\n    }\r\n\r\n    // 增加列调整手柄\r\n    addResizeHandShank () {\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const cells = rows[0].children\r\n        cells.forEach((cell, index) => {\r\n            const handshank = cell.querySelector(`.${this.handshankCls}`)\r\n            handshank && handshank.remove()\r\n            const i = `&emsp;<i data-col=\"${index}\" contenteditable=\"false\" class=\"${this.handshankCls}\"></i>`\r\n            cell.insertAdjacentHTML('beforeend', i)\r\n        })\r\n    }\r\n\r\n    // 增加辅助线\r\n    addSubline () {\r\n        this.handshank.classList.add(this.subline)\r\n        // this.tableEle.style.overflow = 'hidden'\r\n    }\r\n\r\n    // 移除辅助线\r\n    removeSubline () {\r\n        this.handshank.classList.remove(this.subline)\r\n        // this.tableEle.style.overflow = 'initial'\r\n    }\r\n\r\n    // 设置表格宽\r\n    setTableWidth (width) {\r\n        this.tableEle.setAttribute('width', `${width}px`)\r\n    }\r\n\r\n    // 获取列宽和\r\n    getColsWidth () {\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const cells = rows[0].children\r\n        const arr = Array.from(cells).map(cell => {\r\n            return Number.parseFloat(cell.style.width)\r\n        })\r\n        const width = arr.reduce((acc, cur) => {\r\n            return acc + cur\r\n        })\r\n        return width\r\n    }\r\n\r\n    mousedown = (e) => {\r\n        const {target, button, clientX} = e\r\n        if (button === 0 && target.className.includes(this.handshankCls)) {\r\n            this.handshank = target\r\n            this.handshank.classList.add(this.handshankHover)\r\n            this.clientX = clientX\r\n            this.addSubline()\r\n        } else {\r\n            this.handshank = null\r\n        }\r\n    }\r\n\r\n    mousemove = (e) => {\r\n        if (this.handshank) {\r\n            e.preventDefault()\r\n            const {clientX} = e\r\n            this.diff = clientX - this.clientX\r\n            this.handshank.style.transform = `translateX(${this.diff}px)`\r\n        }\r\n    }\r\n\r\n    mouseleave = () => {\r\n        this.mouseup()\r\n    }\r\n\r\n    mouseup = (e) => {\r\n        if (this.handshank) {\r\n            const {clientX} = e\r\n            const firstRow = this.tableEle.tBodies[0].rows[0]\r\n            const index = this.handshank.dataset.col\r\n            const currentCol = firstRow.children[index]\r\n            const {width} = currentCol.getBoundingClientRect()\r\n            const calcWidth = width + this.diff\r\n            const {colMinWidth} = this.opts\r\n            const newWidth = Math.max(colMinWidth, calcWidth)\r\n            if (clientX - this.clientX === 0) return\r\n            if (this.tableEle.contains(this.handshank)) {\r\n                currentCol.style.width = `${newWidth}px`\r\n            }\r\n            this.handshank.style.transform = 'none'\r\n            this.handshank.classList.remove(this.handshankHover)\r\n            this.removeSubline()\r\n            const colsWidth = this.getColsWidth()\r\n            this.setTableWidth(colsWidth)\r\n            this.handshank = null\r\n        }\r\n    }    \r\n\r\n    addEvent () {\r\n        window.addEventListener('mousedown', this.mousedown, false)\r\n        window.addEventListener('mousemove', this.mousemove, false)\r\n        window.addEventListener('mouseup', this.mouseup, false)\r\n        // this.tableEle.addEventListener('mouseleave', this.mouseleave, false)\r\n    }\r\n\r\n    removeEvent () {\r\n        window.removeEventListener('mousedown', this.mousedown, false)\r\n        window.removeEventListener('mousemove', this.mousemove, false)\r\n        window.removeEventListener('mouseup', this.mouseup, false)\r\n        // this.tableEle.removeEventListener('mouseleave', this.mouseleave, false)\r\n    }\r\n}\r\n","/* eslint-disable */\r\nimport TableMergeCell from '@/assets/tableMergeCell/tableMergeCell'\r\nimport '@/assets/tableMergeCell/tableMergeCell.less'\r\nimport ColumnResizer from '@/assets/columnResizer/columnResizer'\r\nimport '@/assets/columnResizer/columnResizer.less'\r\n\r\nexport const wangEditorTableExtend = {\r\n    mounted() {\r\n        this.$nextTick(() => {\r\n            this.addInsertTableIconlistener()\r\n        })\r\n    },\r\n    updated() {\r\n        this.$nextTick(() => {\r\n            this.initTableInteraction()\r\n        })\r\n    },\r\n    methods: {\r\n        initTableInteraction() {\r\n            if (!this.$refs.editor) {\r\n                throw new Error('请为wangEditor富文本容器元素提供ref=\"editor\"属性')\r\n            }\r\n            const tableIsInTable = (target) => {\r\n                while (target && target.parentNode && target.parentNode.tagName !== 'TABLE') {\r\n                    target = target.parentNode\r\n                }\r\n                return target.parentNode\r\n            }\r\n            this.tables = this.$refs.editor.querySelectorAll('.w-e-text table')\r\n            this.tables.forEach(table => {\r\n                if (!tableIsInTable(table)) {\r\n                    if (!table.tableMergeCellInstance) {\r\n                        table.tableMergeCellInstance = new TableMergeCell(table, {\r\n                            onAddCol: () => {\r\n                                table.columnResizer.reset()\r\n                            },\r\n                        })\r\n                    }\r\n                    if (!table.tableColumnResizerInstance) {\r\n                        table.tableColumnResizerInstance = new ColumnResizer(table)\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        addInsertTextListener() {\r\n            this.insertText = this.iconTable.querySelector('button.right')\r\n            this.insertText && this.insertText.addEventListener('click', this.initTableInteraction, false)\r\n        },\r\n        addInsertTableIconlistener() {\r\n            this.iconTable = this.$refs.editor.querySelector(\"[data-title='表格']\")\r\n            this.iconTable && this.iconTable.addEventListener('click', this.addInsertTextListener, false)\r\n        },\r\n    },\r\n    beforeDestroy() {\r\n        this.tables && this.tables.forEach(table => {\r\n            if (table.tableMergeCellInstance) {\r\n                table.tableMergeCellInstance.destroy()\r\n            }\r\n            if (table.tableColumnResizerInstance) {\r\n                table.tableColumnResizerInstance.destroy()\r\n            }\r\n        })\r\n        this.tables = null\r\n\r\n        if (this.iconTable) {\r\n            this.iconTable.removeEventListener('click', this.addInsertTextListener, false)\r\n        }\r\n        if (this.insertText) {\r\n            this.insertText.removeEventListener('click', this.initTableInteraction, false)\r\n        }\r\n    },\r\n}","<template>\n    <div>\n        <div ref=\"editor\">\n            <div v-html=\"backendHTML\"></div>\n        </div>\n        <button type=\"button\" id=\"btn1\" @click=\"getHtml\">获取html</button>\n        <button type=\"button\" id=\"btn2\" @click=\"setHtml\">设置html</button>\n        <div ref=\"newHtml\" class=\"newHtml\"></div>\n    </div>\n</template>\n<script>\n/* eslint-disable */\nimport E from 'wangeditor'\nimport { wangEditorTableExtend } from '@/assets/tool'\nexport default {\n    name: 'about',\n    mixins: [wangEditorTableExtend],\n    data () {\n        return {\n            backendHTML: '',\n        }\n    },\n    /*created () {\n        setTimeout(() => {\n            this.backendHTML = '<table border=\"0\" width=\"1882.953125px\" cellpadding=\"0\" cellspacing=\"0\" class=\"tableMergeCell\"><tbody><tr><th style=\"width: 376.4px;\">0-0 <i data-col=\"0\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th style=\"width: 376.4px;\">0-1 <i data-col=\"1\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th style=\"width: 376.4px;\">0-2 <i data-col=\"2\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th style=\"width: 376.4px;\">0-3 <i data-col=\"3\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th><th style=\"width: 376.4px;\">0-4 <i data-col=\"4\" contenteditable=\"false\" class=\"tableMergeCell-handshank\"></i></th></tr><tr><td rowspan=\"2\" colspan=\"1\">1-0</td><td style=\"background-color: rgb(240, 178, 178); text-align: center;\">1-1</td><td>1-2</td><td>1-3</td><td>1-4</td></tr><tr><td style=\"display: none;\">2-0</td><td style=\"background-color: rgb(240, 178, 178); text-align: center;\">2-1</td><td>2-2</td><td>2-3</td><td>2-4</td></tr><tr><td>3-0</td><td>3-1</td><td>3-2</td><td>3-3</td><td>3-4</td></tr><tr><td>4-0</td><td>4-1</td><td>4-2</td><td>4-3</td><td>4-4</td></tr></tbody></table>'\n        }, 3000)\n    },*/\n    mounted() {\n        this.initEditor()\n    },\n    methods: {\n        getHtml() {\n            this.newHtml = this.editor.txt.html()\n            this.$refs.newHtml.innerHTML = this.newHtml\n        },\n        setHtml() {\n            // this.newHtml = ``\n            this.editor.txt.html(this.newHtml)\n        },\n        initEditor() {\n            this.editor = new E(this.$refs.editor)\n\n            /*this.editor.config.onchange = (newHtml) => {\n                console.log(\"change 之后最新的 newHtml\", newHtml)\n            };*/\n            this.editor.config.onchangeTimeout = 200; // 修改为 500ms\n            this.editor.create()\n        },\n    },\n}\n</script>\n<style>\n.newHtml {\n    border-collapse: collapse;\n}\n\n.newHtml th,\n.newHtml td {\n    height: 30px;\n    border: 1px solid #eee;\n}\n\n.w-e-text-container {\n    height: 330px !important;\n}\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=4a4665b2&\"\nimport script from \"./About.vue?vue&type=script&lang=js&\"\nexport * from \"./About.vue?vue&type=script&lang=js&\"\nimport style0 from \"./About.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport About from '../views/About.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: About,\n  },\n  // {\n  //   path: '/about',\n  //   name: 'about',\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\n  // },\n  // {\n  //   path: '/redips',\n  //   name: 'redips',\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/Redips.vue')\n  // }\n]\n\nconst router = new VueRouter({\n  routes\n})\n\nexport default router\n","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\n/*import {Modal} from 'ant-design-vue'\r\nimport 'ant-design-vue/lib/modal/style/css'\r\nVue.use(Modal)\r\nVue.prototype.$confirm = Modal.confirm\r\nVue.prototype.$info = Modal.info*/\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}