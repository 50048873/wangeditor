{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?059b","webpack:///./src/App.vue","webpack:///./src/views/About.vue?21c6","webpack:///./src/assets/tableMergeCell/tableMergeCell.js","webpack:///./src/assets/columnResizer/columnResizer.js","webpack:///./src/assets/tool.js","webpack:///src/views/About.vue","webpack:///./src/views/About.vue?f1da","webpack:///./src/views/About.vue","webpack:///./src/router/index.js","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/App.vue?c650","webpack:///./src/views/About.vue?2fad"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticRenderFns","script","component","ref","on","getHtml","setHtml","staticClass","defaults","btnDisabledColor","onAddCol","TableMergeCell","tableEle","options","e","target","selectedCells","colorPicker","forEach","ele","style","backgroundColor","removeEventListener","colorChange","remove","removeClass","getSelectedCells","indexStart","indexEnd","rowspan","row","colspan","col","Array","from","index","setAttribute","display","cell","cellSpanProperty","getCellIndex","getCellSpanProperty","contextmenuCell","removeAttribute","menuEle","dataset","console","log","textAlignLeft","textAlignCenter","textAlignRight","addBackgroundColor","delBackgroundColor","delTable","addRow","delRow","addCol","delCol","addTh","delTh","mergeCell","unMergeCell","pointerEvents","hideMenuEleSelfIsClicked","button","tableIsInTable","tagName","ready","cellStart","addClass","cellEnd","highlightSelectedCells","contains","stopPropagation","preventDefault","document","createElement","classList","add","addEventListener","menuClick","menus","item","li","textContent","appendChild","body","clientX","clientY","top","left","handleMenuBtnMergeStatus","handleMenuBtnRowStatus","handleSomeMenuBtns","opts","assign","tBody","tBodies","rows","tableClassName","selectedCellClassName","maxRowCount","maxColCount","init","ELEMENT_NODE","Error","syncMaxRowAndColCount","addEvent","cells","children","childElementCount","className","selectedLastEle","click","removeProperty","includes","querySelectorAll","isValid","selectedCellsIsValid","tr","childLen","cellStart_rowspan","getAttribute","cellEnd_rowspan","isInvalid","some","getIsMergedCellBool","firstTr","maxCount","Math","max","isMergedCell","btn_merge","color","btn_unMerge","btn_addRow","btn_delRow","btn_delCol","getSelectedCellsByClassName","btn_textAlignLeft","btn_textAlignCenter","btn_textAlignRight","btn_addBackgroundColor","btn_delBackgroundColor","startRowIndex","endRowIndex","rowIndexArray","startColIndex","endColIndex","colIndexArray","trLen","cellLen","relatedCellsArray","getRelatedMergedRowCells","getMergedColIndexArray","newRow","insertRow","insertCell","type","rowIndex","rowIsInMergedRow","willRowIndex","newCell","insertAdjacentHTML","cellIndex","rowLen","currentRowIndex","delFirstRow","delOtherRow","deleteRow","delEmptyTable","nextRow","nextCell","nextElementSibling","getRelatedMergedColCells","delFirstCol","delOtherCol","deleteCell","len","alert","th","innerHTML","td","textAlign","parentNode","mousedown","mousemove","mouseup","tableClick","contextmenu","removeSomeNoSelfIsClicked","colMinWidth","ColumnResizer","addResizeHandShank","setDefaultWidth","handshankCls","handshank","handshankHover","addSubline","diff","transform","firstRow","currentCol","getBoundingClientRect","width","calcWidth","newWidth","removeSubline","colsWidth","getColsWidth","setTableWidth","columnResizer","reset","subline","getDefaultWidth","colCount","average","tableWidth","firstRowCells","querySelector","arr","map","Number","parseFloat","reduce","acc","cur","wangEditorTableExtend","mounted","$nextTick","tableObserve","methods","initTableInteraction","$refs","editor","tables","table","tableMergeCellInstance","tableColumnResizerInstance","callback","mutationsList","mutation","addedNodes","addedNode","observer","MutationObserver","observe","childList","subtree","beforeDestroy","removeEvent","mixins","initEditor","Vue","use","VueRouter","routes","path","About","router","Vuex","Store","state","mutations","actions","config","productionTip","store","render","h","App","$mount"],"mappings":"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","file":"js/app.5129063a.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{attrs:{\"id\":\"nav\"}},[_c('router-link',{attrs:{\"to\":\"/\"}},[_vm._v(\"tableMergeCell\")])],1),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=9daf8a4e&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"editor\"}),_c('button',{attrs:{\"type\":\"button\",\"id\":\"btn1\"},on:{\"click\":_vm.getHtml}},[_vm._v(\"获取html\")]),_c('button',{attrs:{\"type\":\"button\",\"id\":\"btn2\"},on:{\"click\":_vm.setHtml}},[_vm._v(\"设置html\")]),_c('div',{ref:\"newHtml\",staticClass:\"newHtml\"})])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/* eslint-disable */\r\nconst defaults = {\r\n    btnDisabledColor: '#ddd', // 右键菜单禁用时的颜色\r\n    onAddCol: null,             // 添加列完成后回调\r\n}\r\n\r\nexport default class TableMergeCell {\r\n    constructor (tableEle, options = {}) {\r\n        this.opts = Object.assign({}, defaults, options)\r\n        this.tableEle = tableEle\r\n        this.tBody = tableEle.tBodies[0]\r\n        this.rows = this.tBody.rows\r\n        this.tableClassName = 'tableMergeCell'\r\n        this.menuEle = null\r\n        this.menus = [\r\n            {\r\n                name: '靠左',\r\n                key: 'textAlignLeft',\r\n            },\r\n            {\r\n                name: '居中',\r\n                key: 'textAlignCenter',\r\n            },\r\n            {\r\n                name: '靠右',\r\n                key: 'textAlignRight',\r\n            },\r\n            {\r\n                name: '设置背景色',\r\n                key: 'addBackgroundColor',\r\n            },\r\n            {\r\n                name: '删除背景色',\r\n                key: 'delBackgroundColor',\r\n            },\r\n            {\r\n                name: '添加行',\r\n                key: 'addRow',\r\n            },\r\n            {\r\n                name: '删除行',\r\n                key: 'delRow',\r\n            },\r\n            {\r\n                name: '添加列',\r\n                key: 'addCol',\r\n            },\r\n            {\r\n                name: '删除列',\r\n                key: 'delCol',\r\n            },\r\n            {\r\n                name: '设置表头',\r\n                key: 'addTh',\r\n            },\r\n            {\r\n                name: '取消表头',\r\n                key: 'delTh',\r\n            },\r\n            {\r\n                name: '合并单元格',\r\n                key: 'merge',\r\n            }, \r\n            {\r\n                name: '取消合并单元格',\r\n                key: 'unMerge',\r\n            },\r\n            {\r\n                name: '删除表格',\r\n                key: 'delTable',\r\n            },\r\n        ]\r\n        this.selectedCellClassName = 'tableMergeCell-selected'\r\n        this.ready = false\r\n        this.cellStart = null\r\n        this.cellEnd = null\r\n        this.indexStart = {\r\n            row: -1,\r\n            col: -1,\r\n        }\r\n        this.indexEnd = {\r\n            row: -1,\r\n            col: -1,\r\n        }\r\n        this.maxRowCount = 0\r\n        this.maxColCount = 0\r\n        this.contextmenuCell = null\r\n        this.init()\r\n    }\r\n\r\n    // 初始化\r\n    init () {\r\n        if (!this.tableEle && this.tableEle.ELEMENT_NODE !== 1 && this.tableEle.tagName !== 'TABLE') {\r\n            throw new Error('请传入table元素！')\r\n        }\r\n        this.tableEle.classList.add(this.tableClassName)\r\n        // this.addCellLocation()\r\n        this.syncMaxRowAndColCount()\r\n        this.addEvent()\r\n    }\r\n\r\n    // 添加调试坐标\r\n    addCellLocation () {\r\n        const {rows} = this\r\n        rows.forEach((row, i) => {\r\n            const cells = row.children\r\n            cells.forEach((cell, j) => {\r\n                cell.textContent = i + '-' + j\r\n            })\r\n        })\r\n    }\r\n\r\n    // 同步最大行数和最大列数\r\n    syncMaxRowAndColCount () {\r\n        const {rows} = this\r\n        if (rows.length) {\r\n            this.maxRowCount = rows.length\r\n            this.maxColCount = rows[0].childElementCount\r\n        } else {\r\n            this.maxRowCount = 0\r\n            this.maxColCount = 0\r\n        }\r\n    }\r\n\r\n    // 添加背景色\r\n    colorChange = (e) => {\r\n        const {target} = e\r\n        const {value} = target\r\n        const {selectedCells} = this.colorPicker\r\n        if (selectedCells.length) {\r\n            selectedCells.forEach(ele => {\r\n                ele.style.backgroundColor = value\r\n            })\r\n        }\r\n        if (this.colorPicker) {\r\n            this.colorPicker.removeEventListener('input', this.colorChange)\r\n            this.colorPicker.remove()\r\n            this.colorPicker = null\r\n        }\r\n        this.removeClass()\r\n    }\r\n\r\n    // 显示颜色选择弹窗\r\n    addBackgroundColor () {\r\n        const selectedCells = this.getSelectedCells()\r\n        if (!selectedCells.length) return\r\n        this.colorPicker = document.createElement('input')\r\n        this.colorPicker.setAttribute('type', 'color')\r\n        this.colorPicker.className = 'tableMergeCell-colorPicker'\r\n        this.colorPicker.addEventListener('input', this.colorChange, false)\r\n        this.colorPicker.selectedCells = selectedCells\r\n        const selectedLastEle = selectedCells[selectedCells.length - 1]\r\n        selectedLastEle.appendChild(this.colorPicker)\r\n        this.colorPicker.click()\r\n    }\r\n\r\n    // 删除背景色\r\n    delBackgroundColor () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(ele => {\r\n            ele.style.removeProperty('background-color')\r\n        })\r\n    }\r\n\r\n    // 为指定单元格添加类名\r\n    addClass (cell) {\r\n        if (!cell.className.includes(this.selectedCellClassName)) {\r\n            cell.classList.add(this.selectedCellClassName)\r\n        }\r\n    }\r\n\r\n    // 移除指定或选取元素类名\r\n    removeClass (cell) {\r\n        if (cell) {\r\n            cell.classList.remove(this.selectedCellClassName)\r\n            if (cell.className === '') {\r\n                cell.removeAttribute('class')\r\n            }\r\n        } else {\r\n            const selectedCells = this.tableEle.querySelectorAll('.tableMergeCell-selected')\r\n            if (selectedCells.length) {\r\n                selectedCells.forEach(item => {\r\n                    item.classList.remove(this.selectedCellClassName)\r\n                    if (item.className === '') {\r\n                        item.removeAttribute('class')\r\n                    }\r\n                })\r\n            }  \r\n        }\r\n    }\r\n\r\n    // 高亮选取的单元格\r\n    highlightSelectedCells () {\r\n        const {rows} = this\r\n        const isValid = this.selectedCellsIsValid(rows)\r\n        if (!isValid) return\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(ele => {\r\n            this.addClass(ele)\r\n        })\r\n    }\r\n\r\n    // 获取选取的单元格\r\n    getSelectedCells () {\r\n        const {indexStart, indexEnd} = this\r\n        let selectedCells = []\r\n        const {rows} = this\r\n        for (let i = 0; i < this.maxRowCount; i++) {\r\n            const tr = rows[i]\r\n            const {children} = tr\r\n            const childLen = children.length\r\n            for (let j = 0; j < childLen; j++) {\r\n                const cell = children[j]\r\n                if (i >= indexStart.row && i <= indexEnd.row && j >= indexStart.col && j <= indexEnd.col) {\r\n                    selectedCells.push(cell)\r\n                } \r\n            }\r\n        }\r\n        return selectedCells\r\n    }\r\n\r\n    // 判断选取的单元格是否有效\r\n    selectedCellsIsValid () {\r\n        const cellStart_rowspan = this.cellStart.getAttribute('rowspan')\r\n        const cellEnd_rowspan = this.cellEnd && this.cellEnd.getAttribute('rowspan')\r\n        if (cellStart_rowspan || cellEnd_rowspan) {\r\n            // console.log('不符合合并规则：选中区域不能包含已合并的单元格。')\r\n            return false\r\n        } \r\n        const selectedCells = this.getSelectedCells()\r\n        const isInvalid = Array.from(selectedCells).some(ele => {\r\n            return ele.style.display === 'none' || this.getIsMergedCellBool(ele)\r\n        })\r\n        if (isInvalid) {\r\n            // console.log('不符合合并规则：不能有隐藏的单元格或合并的单元格。')\r\n            return false\r\n        }\r\n        return true\r\n    }\r\n\r\n    // 合并单元格\r\n    mergeCell = () => {\r\n        const selectedCells = this.getSelectedCells()\r\n        const {indexStart, indexEnd} = this\r\n        const rowspan = indexEnd.row - indexStart.row + 1\r\n        const colspan = indexEnd.col - indexStart.col + 1\r\n        Array.from(selectedCells).forEach((ele, index) => {\r\n            if (index === 0) {\r\n                ele.setAttribute('rowspan', rowspan)\r\n                ele.setAttribute('colspan', colspan)\r\n            } else {\r\n                ele.style.display = 'none'\r\n            }\r\n            this.removeClass(ele)\r\n        })\r\n    }\r\n\r\n    // 取消合并单元格\r\n    unMergeCell = (cell) => {\r\n        let cellSpanProperty = null\r\n        if (cell) {\r\n            this.indexStart = this.getCellIndex(cell)\r\n            cellSpanProperty = this.getCellSpanProperty(cell)\r\n        } else {\r\n            this.indexStart = this.getCellIndex(this.contextmenuCell)\r\n            cellSpanProperty = this.getCellSpanProperty(this.contextmenuCell)\r\n        }\r\n        this.indexEnd = {\r\n            row: cellSpanProperty.rowspan - 1 + this.indexStart.row,\r\n            col: cellSpanProperty.colspan - 1 + this.indexStart.col,\r\n        }\r\n        const selectedCells = this.getSelectedCells()\r\n        Array.from(selectedCells).forEach((ele, index) => {\r\n            if (index === 0) {\r\n                ele.removeAttribute('rowspan')\r\n                ele.removeAttribute('colspan')\r\n            } else {\r\n                ele.style.display = 'table-cell'\r\n            }\r\n            this.removeClass(ele)\r\n        })\r\n    }\r\n\r\n    // 获取单元格行列索引\r\n    getCellIndex (ele) {\r\n        let index = {\r\n            row: -1,\r\n            col: -1,\r\n        }\r\n        if (!this.cellStart) return index\r\n        const {tagName} = this.cellStart\r\n        const {rows} = this\r\n        if (tagName === 'TH') {\r\n            const firstTr = rows[0]\r\n            const {children} = firstTr\r\n            const childLen = children.length\r\n            index.row = 0\r\n            for (let j = 0; j < childLen; j++) {\r\n                const cell = children[j]\r\n                if (cell === ele) {\r\n                    index.col = j\r\n                    break\r\n                }\r\n            }\r\n        } else if (tagName === 'TD') {\r\n            for (let i = 0; i < this.maxRowCount; i++) {\r\n                const tr = rows[i]\r\n                const {children} = tr\r\n                const childLen = children.length\r\n                for (let j = 0; j < childLen; j++) {\r\n                    const cell = children[j]\r\n                    if (cell === ele) {\r\n                        index.row = i\r\n                        index.col = j\r\n                        break\r\n                    }\r\n                }\r\n                if (index.row > 0) {\r\n                    break\r\n                }\r\n            }\r\n        }\r\n        \r\n        return index\r\n    }\r\n\r\n    // 获取单元格rowspan, colspan属性值\r\n    getCellSpanProperty (cell) {\r\n        return {\r\n            rowspan: cell.getAttribute('rowspan') * 1,\r\n            colspan: cell.getAttribute('colspan') * 1,\r\n        }\r\n    }\r\n\r\n    // 获取是否是合并过的单元格\r\n    getIsMergedCellBool (cell) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const maxCount = Math.max(rowspan, colspan)\r\n        return maxCount > 1\r\n    }\r\n\r\n    // 控制右键菜单合并按钮是否可点击\r\n    handleMenuBtnMergeStatus (cell) {\r\n        const {btnDisabledColor} = this.opts\r\n        this.isMergedCell = this.getIsMergedCellBool(cell)\r\n        /**\r\n        * 1.开始选中的单元格是否等于最后选中的单元格\r\n        * 2.是否合并\r\n        * 3.直接右键点击，未选中单元格时的情况\r\n        */\r\n\r\n        if ((this.cellStart === this.cellEnd || !cell.className.includes(this.selectedCellClassName)) && !cell.getAttribute('rowspan')) {\r\n            this.btn_merge.style.color = btnDisabledColor\r\n            this.btn_merge.style.pointerEvents = 'none'\r\n            this.btn_unMerge.style.color = btnDisabledColor\r\n            this.btn_unMerge.style.pointerEvents = 'none'\r\n        } else if (this.getIsMergedCellBool(cell)) {\r\n            this.btn_merge.style.color = btnDisabledColor\r\n            this.btn_merge.style.pointerEvents = 'none'\r\n            this.btn_unMerge.style.color = 'inherit'\r\n            this.btn_unMerge.style.pointerEvents = 'auto'\r\n        } else {\r\n            this.btn_merge.style.color = 'inherit'\r\n            this.btn_merge.style.pointerEvents = 'auto'\r\n            this.btn_unMerge.style.color = btnDisabledColor\r\n            this.btn_unMerge.style.pointerEvents = 'none'\r\n        }\r\n    }\r\n\r\n    // 控制右键菜单行按钮是否可点击\r\n    handleMenuBtnRowStatus (target) {\r\n        const {btnDisabledColor} = this.opts\r\n        if (target.tagName === 'TH') {\r\n            this.btn_addRow.style.color = btnDisabledColor\r\n            this.btn_addRow.style.pointerEvents = 'none'\r\n        } else {\r\n            this.btn_addRow.style.color = 'inherit'\r\n            this.btn_addRow.style.pointerEvents = 'auto'\r\n        }\r\n        const {rowspan, colspan} = this.getCellSpanProperty(target)\r\n        if (rowspan > 1 || colspan > 1) {\r\n            this.btn_delRow.style.color = btnDisabledColor\r\n            this.btn_delRow.style.pointerEvents = 'none'\r\n            this.btn_delCol.style.color = btnDisabledColor\r\n            this.btn_delCol.style.pointerEvents = 'none'\r\n        } else {\r\n            this.btn_delRow.style.color = 'inherit'\r\n            this.btn_delRow.style.pointerEvents = 'auto'\r\n            this.btn_delCol.style.color = 'inherit'\r\n            this.btn_delCol.style.pointerEvents = 'auto'\r\n        }\r\n    }\r\n\r\n    // 根据类名获取选取的单元格\r\n    getSelectedCellsByClassName () {\r\n        return Array.from(this.tableEle.querySelectorAll(`.${this.selectedCellClassName}`))\r\n    }\r\n\r\n    // 当未选取单元格时，控制部分右键菜单项是否可点击\r\n    handleSomeMenuBtns (target) {\r\n        const {btnDisabledColor} = this.opts\r\n        const selectedCells = this.getSelectedCellsByClassName()\r\n        if (selectedCells.length) {\r\n            this.btn_textAlignLeft.style.color = 'inherit'\r\n            this.btn_textAlignLeft.style.pointerEvents = 'auto'\r\n            this.btn_textAlignCenter.style.color = 'inherit'\r\n            this.btn_textAlignCenter.style.pointerEvents = 'auto'\r\n            this.btn_textAlignRight.style.color = 'inherit'\r\n            this.btn_textAlignRight.style.pointerEvents = 'auto'\r\n            this.btn_addBackgroundColor.style.color = 'inherit'\r\n            this.btn_addBackgroundColor.style.pointerEvents = 'auto'\r\n            this.btn_delBackgroundColor.style.color = 'inherit'\r\n            this.btn_delBackgroundColor.style.pointerEvents = 'auto'\r\n        } else {\r\n            this.btn_addBackgroundColor.style.color = btnDisabledColor\r\n            this.btn_addBackgroundColor.style.pointerEvents = 'none'\r\n            this.btn_delBackgroundColor.style.color = btnDisabledColor\r\n            this.btn_delBackgroundColor.style.pointerEvents = 'none'\r\n            this.btn_textAlignLeft.style.color = btnDisabledColor\r\n            this.btn_textAlignLeft.style.pointerEvents = 'none'\r\n            this.btn_textAlignCenter.style.color = btnDisabledColor\r\n            this.btn_textAlignCenter.style.pointerEvents = 'none'\r\n            this.btn_textAlignRight.style.color = btnDisabledColor\r\n            this.btn_textAlignRight.style.pointerEvents = 'none'\r\n        }\r\n    }\r\n\r\n    // 获取受影响的合并行索引数组\r\n    getMergedRowIndexArray (startRowIndex, rowspan) {\r\n        const endRowIndex = startRowIndex + rowspan - 1\r\n        let rowIndexArray = []\r\n        do {\r\n            rowIndexArray.push(startRowIndex)\r\n            startRowIndex++\r\n        } while (startRowIndex <= endRowIndex)\r\n        return rowIndexArray\r\n    }\r\n\r\n    // 获取受影响的合并列索引数组\r\n    getMergedColIndexArray (startColIndex, colspan) {\r\n        const endColIndex = startColIndex + colspan - 1\r\n        let colIndexArray = []\r\n        do {\r\n            colIndexArray.push(startColIndex)\r\n            startColIndex++\r\n        } while (startColIndex <= endColIndex)\r\n        return colIndexArray\r\n    }\r\n\r\n    // 控制删除的列与关联列的关系\r\n    handleMergedCellByDelCol (index) {\r\n        const {rows} = this\r\n        const trLen = rows.length\r\n        for (let i = 0; i < trLen; i++) {\r\n            const row = rows[i]\r\n            const cells = row.children\r\n            const cellLen = cells.length\r\n            for (let j = 0; j < cellLen; j++) {\r\n                const cell = cells[j]\r\n                const {colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index > j && index < j + colspan) {\r\n                    cell.setAttribute('colspan', colspan - 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 删除表格\r\n    delTable () {\r\n        /*this.$confirm({\r\n            title: '删除确认？',\r\n            content: '您确认删除表格吗？',\r\n            zIndex: 10009,\r\n            onOk () {\r\n                console.log('ok')\r\n            },\r\n            onCancel () {\r\n                console.log('cancel')\r\n            },\r\n        })*/\r\n        this.tableEle.remove()\r\n    }\r\n\r\n    // 删除空表格\r\n    delEmptyTable () {\r\n        const {rows} = this\r\n        if (!rows.length || !rows[0].children.length) {\r\n            this.delTable()\r\n        }\r\n    }\r\n\r\n    // 上面添加一行\r\n    addRow (index) {\r\n        const {maxColCount, tBody} = this\r\n        const relatedCellsArray = this.getRelatedMergedRowCells(index, 'addRow')\r\n        let colIndexArray = []\r\n        relatedCellsArray.forEach(cell => {\r\n            const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n            const {col} = this.getCellIndex(cell)\r\n            colIndexArray.push(...this.getMergedColIndexArray(col, colspan))\r\n            cell.setAttribute('rowspan', rowspan + 1)\r\n        })\r\n        const newRow = tBody.insertRow(index)\r\n        for (let i = 0; i < maxColCount; i++) {\r\n            newRow.insertCell(i)\r\n        }\r\n        colIndexArray.forEach(index => {\r\n            newRow.children[index].style.display = 'none'\r\n        })\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 获取相关的行合并单元格\r\n    getRelatedMergedRowCells (index, type) {\r\n        const {rows} = this\r\n        let relatedCellsArray = []\r\n        rows.forEach((row, rowIndex) => {\r\n            const cells = row.children\r\n            cells.forEach(cell => {\r\n                const {rowspan} = this.getCellSpanProperty(cell)\r\n                if (rowspan > 1 && this.rowIsInMergedRow(rowIndex, rowspan, index, type)) {\r\n                    relatedCellsArray.push(cell)\r\n                }\r\n            })\r\n        })\r\n        return relatedCellsArray\r\n    }\r\n\r\n    // 行是在合并单元格范围内\r\n    rowIsInMergedRow (startRowIndex, rowspan, willRowIndex, type) {\r\n        if (type === 'addRow') {\r\n            return willRowIndex > startRowIndex && willRowIndex <= startRowIndex + rowspan - 1\r\n        } else if (type === 'delRow') {\r\n            return willRowIndex >= startRowIndex && willRowIndex <= startRowIndex + rowspan - 1\r\n        }\r\n    }\r\n\r\n    // 左边添加一列\r\n    addCol (index) {\r\n        const {onAddCol} = this.opts\r\n        this.syncMaxRowAndColCount()\r\n\r\n        const {maxRowCount} = this\r\n        const {rows} = this\r\n        for (let i = 0; i < maxRowCount; i++) {\r\n            const row = rows[i]\r\n            const cell = row.children[index]\r\n            const newCell = cell.tagName === 'TH' ? '<th></th>' : '<td></td>'\r\n            cell.insertAdjacentHTML('beforebegin', newCell)\r\n        }\r\n\r\n        rows.forEach((row, rowIndex) => {\r\n            const cells = row.children\r\n            cells.forEach((cell, cellIndex) => {\r\n                const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index > cellIndex && index <= cellIndex + colspan - 1) {\r\n                    cell.setAttribute('colspan', colspan + 1)\r\n                    cells[index].style.display = 'none'\r\n                    let rowLen = rowspan\r\n                    let currentRowIndex = rowIndex\r\n                    while (rowLen > 1) {\r\n                        rows[++currentRowIndex].children[index].style.display = 'none'\r\n                        rowLen--\r\n                    }\r\n                }\r\n            })\r\n        })\r\n\r\n        this.syncMaxRowAndColCount()\r\n\r\n        onAddCol && onAddCol()\r\n    }\r\n\r\n    // 删除行\r\n    delRow (index) {\r\n        const {tBody, rows} = this\r\n        const relatedCellsArray = this.getRelatedMergedRowCells(index, 'delRow')\r\n        relatedCellsArray.forEach(cell => {\r\n            const {row, col} = this.getCellIndex(cell)\r\n            if (row === index) {\r\n                this.delFirstRow(rows, col, cell, index)\r\n            } else {\r\n                this.delOtherRow(cell)\r\n            }\r\n        })\r\n        tBody.deleteRow(index)\r\n        this.delEmptyTable()\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 删除非第一行\r\n    delOtherRow (cell) {\r\n        const {rowspan} = this.getCellSpanProperty(cell)\r\n        cell.setAttribute('rowspan', rowspan - 1)\r\n    }\r\n\r\n    // 删除第一行\r\n    delFirstRow (rows, col, cell, index) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const nextRow = rows[index + 1]\r\n        const nextCell = nextRow.children[col]\r\n        nextCell.setAttribute('rowspan', rowspan - 1)\r\n        nextCell.setAttribute('colspan', colspan)\r\n        nextCell.style.display = 'table-cell'\r\n    }\r\n\r\n    // 获取相关的列合并单元格\r\n    getRelatedMergedColCells (index) {\r\n        const {rows} = this\r\n        let relatedCellsArray = []\r\n        rows.forEach(row => {\r\n            const cells = row.children\r\n            cells.forEach((cell, cellIndex) => {\r\n                const {colspan} = this.getCellSpanProperty(cell)\r\n                if (colspan > 1 && index >= cellIndex && index <= cellIndex + colspan - 1) {\r\n                    relatedCellsArray.push(cell)\r\n                }\r\n            })\r\n        })\r\n        return relatedCellsArray\r\n    }\r\n\r\n    // 删除非第一列\r\n    delOtherCol (cell) {\r\n        const {colspan} = this.getCellSpanProperty(cell)\r\n        cell.setAttribute('colspan', colspan - 1)\r\n    }\r\n\r\n    // 删除第一列\r\n    delFirstCol (cell) {\r\n        const {rowspan, colspan} = this.getCellSpanProperty(cell)\r\n        const nextCell = cell.nextElementSibling\r\n        nextCell.setAttribute('colspan', colspan - 1)\r\n        nextCell.setAttribute('rowspan', rowspan)\r\n        nextCell.style.display = 'table-cell'\r\n    }\r\n\r\n    // 删除列\r\n    delCol (index) {\r\n        const {tBody, rows} = this\r\n        const relatedCellsArray = this.getRelatedMergedColCells(index)\r\n        relatedCellsArray.forEach(cell => {\r\n            const {col} = this.getCellIndex(cell)\r\n            if (col === index) {\r\n                this.delFirstCol(cell)\r\n            } else {\r\n                this.delOtherCol(cell)\r\n            }\r\n        })\r\n        rows.forEach(row => {\r\n            row.deleteCell(index)\r\n        })\r\n        this.delEmptyTable()\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 添加表头\r\n    addTh () {\r\n        const firstTr = this.rows[0]\r\n        const {children} = firstTr\r\n        let tr = document.createElement('tr')\r\n        if (children[0].tagName === 'TD') {\r\n            const len = children.length\r\n            for (let i = 0; i < len; i++) {\r\n                const cell = children[i]\r\n                if (this.getIsMergedCellBool(cell)) {\r\n                    alert('请先取消第一行合并的单元格！')\r\n                    break\r\n                }\r\n                const th = document.createElement('th')\r\n                th.innerHTML = cell.innerHTML\r\n                tr.appendChild(th)\r\n            }\r\n            if (tr.childElementCount === len) {\r\n                firstTr.innerHTML = tr.innerHTML\r\n            }\r\n        }\r\n    }\r\n\r\n    // 删除表头\r\n    delTh () {\r\n        const firstTr = this.rows[0]\r\n        const {children} = firstTr\r\n        let tr = document.createElement('tr')\r\n        if (children[0].tagName === 'TH') {\r\n            children.forEach(cell => {\r\n                const td = document.createElement('td')\r\n                td.innerHTML = cell.innerHTML\r\n                tr.appendChild(td)\r\n            })\r\n            firstTr.innerHTML = tr.innerHTML\r\n        }\r\n    }\r\n\r\n    // 隐藏右键菜单\r\n    hideMenuEleSelfIsClicked = () => {\r\n        if (this.menuEle) {\r\n            this.menuEle.style.display = 'none'\r\n        }\r\n    }\r\n\r\n    // 靠左\r\n    textAlignLeft () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'left'\r\n        })\r\n    }\r\n\r\n    // 居中\r\n    textAlignCenter () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'center'\r\n        })\r\n    }\r\n\r\n    // 靠右\r\n    textAlignRight () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'right'\r\n        })\r\n    }\r\n\r\n    // 点击右键菜单项时\r\n    menuClick = (e) => {\r\n        const {target} = e\r\n        const key = target.dataset.key\r\n        const {row, col} = this.getCellIndex(this.contextmenuCell)\r\n        switch (key) {\r\n            case 'textAlignLeft':\r\n                console.log('靠左')\r\n                this.textAlignLeft()\r\n                break\r\n            case 'textAlignCenter':\r\n                console.log('居中')\r\n                this.textAlignCenter()\r\n                break\r\n            case 'textAlignRight':\r\n                console.log('靠右')\r\n                this.textAlignRight()\r\n                break\r\n            case 'addBackgroundColor':\r\n                console.log('设置背景色')\r\n                this.addBackgroundColor()\r\n                break\r\n            case 'delBackgroundColor':\r\n                console.log('删除背景色')\r\n                this.delBackgroundColor()\r\n                break\r\n            case 'delTable':\r\n                console.log('删除表格')\r\n                this.delTable()\r\n                break\r\n            case 'addRow':\r\n                console.log('添加行')\r\n                this.addRow(row)\r\n                break\r\n            case 'delRow':\r\n                console.log('删除行')\r\n                this.delRow(row)\r\n                break\r\n            case 'addCol':\r\n                console.log('添加列')\r\n                this.addCol(col)\r\n                break\r\n            case 'delCol':\r\n                console.log('删除列')\r\n                this.delCol(col)\r\n                break\r\n            case 'addTh':\r\n                console.log('设置表头')\r\n                this.addTh()\r\n                break\r\n            case 'delTh':\r\n                console.log('取消表头')\r\n                this.delTh()\r\n                break\r\n            case 'merge':\r\n                console.log('合并单元格')\r\n                this.mergeCell()\r\n                break\r\n            case 'unMerge':\r\n                console.log('取消合并单元格')\r\n                this.unMergeCell()\r\n                break\r\n        }\r\n        if (target.style.pointerEvents !== 'none') {\r\n            this.hideMenuEleSelfIsClicked()\r\n        }\r\n    }\r\n\r\n    mousedown = (e) => {\r\n        const {target, button} = e\r\n        if (this.tableIsInTable(target) || button !== 0) return\r\n        const {tagName} = target\r\n        if (tagName === 'TD' || tagName === 'TH') {\r\n            this.ready = true\r\n            this.cellStart = target\r\n            this.indexStart = this.getCellIndex(target)\r\n            this.removeClass()\r\n            this.addClass(target)\r\n        }\r\n    }\r\n\r\n    mousemove = (e) => {\r\n        if (this.ready) {\r\n            const {target} = e\r\n            this.cellEnd = target\r\n            this.indexEnd = this.getCellIndex(target)\r\n            this.removeClass()\r\n            this.highlightSelectedCells()\r\n            /*const selObj = window.getSelection()\r\n            if (this.cellStart !== this.cellEnd) {\r\n                selObj.collapseToEnd()\r\n            }*/\r\n        }\r\n    }\r\n\r\n    /*mouseleave = () => {\r\n        this.ready = false\r\n    }*/\r\n\r\n    mouseup = (e) => {\r\n        const {target, button} = e\r\n        if (button === 0 && this.ready) {\r\n            this.cellEnd = target\r\n            this.indexEnd = this.getCellIndex(target)\r\n            this.ready = false\r\n        }\r\n    }\r\n\r\n    tableClick = (e) => {\r\n        const {target, button} = e\r\n        if (button === 0 && target.tagName !== 'INPUT' && this.tableEle.contains(target)) {\r\n            e.stopPropagation()\r\n        }\r\n    }\r\n\r\n    tableIsInTable (target) {\r\n        while (target && target.tagName !== 'TABLE') {\r\n            target = target.parentNode\r\n        }\r\n        return this.tableEle !== target && this.tableEle.contains(target)\r\n    }\r\n\r\n    contextmenu = (e) => {\r\n        e.preventDefault()\r\n        const {target} = e\r\n        if (this.tableIsInTable(target)) return\r\n        if (!this.menuEle) {\r\n            this.menuEle = document.createElement('ul')\r\n            this.menuEle.classList.add('tableMergeCell-contextmenu')\r\n            this.menuEle.addEventListener('click', this.menuClick, false)\r\n\r\n            this.menus.forEach(item => {\r\n                const li = document.createElement('li')\r\n                const {name, key} = item\r\n                li.textContent = name\r\n                li.dataset.key = key\r\n                this[`btn_${key}`] = li\r\n                this.menuEle.appendChild(li)\r\n            })\r\n\r\n            document.body.appendChild(this.menuEle)\r\n        }\r\n        const {clientX, clientY} = e\r\n        this.menuEle.style.display = 'block'\r\n        this.menuEle.style.top = `${clientY}px`\r\n        this.menuEle.style.left = `${clientX}px`\r\n        this.contextmenuCell = target\r\n        this.handleMenuBtnMergeStatus(target)\r\n        this.handleMenuBtnRowStatus(target)\r\n        this.handleSomeMenuBtns(target)\r\n    }\r\n\r\n    // 移除一些特征\r\n    removeSomeNoSelfIsClicked = (e) => {\r\n        const {target} = e\r\n        // 隐藏右键菜单\r\n        if (this.menuEle && !this.menuEle.contains(target)) {\r\n            this.menuEle.style.display = 'none'\r\n        }\r\n        // 移除高亮单元格\r\n        const key = target.dataset.key\r\n        if (!this.tableEle.contains(target) && key !== 'addBackgroundColor') {\r\n            /*const selectedCells = this.getSelectedCells()\r\n            selectedCells.forEach(cell => {\r\n                this.removeClass(cell)\r\n            })*/\r\n            this.removeClass()\r\n        }\r\n        // 移除背景色设置输入框\r\n        if (this.colorPicker) {\r\n            this.colorPicker.remove()\r\n        }\r\n    }\r\n\r\n    addEvent () {\r\n        window.addEventListener('mousedown', this.mousedown, false)\r\n        window.addEventListener('mousemove', this.mousemove, false)\r\n        // window.addEventListener('mouseleave', this.mouseleave, false)\r\n        window.addEventListener('mouseup', this.mouseup, false)\r\n        this.tableEle.addEventListener('click', this.tableClick, false)\r\n        this.tableEle.addEventListener('contextmenu', this.contextmenu, false)\r\n        window.addEventListener('mousedown', this.removeSomeNoSelfIsClicked, false)\r\n    }\r\n\r\n    removeEvent () {\r\n        window.removeEventListener('mousedown', this.mousedown, false)\r\n        window.removeEventListener('mousemove', this.mousemove, false)\r\n        // window.removeEventListener('mouseleave', this.mouseleave, false)\r\n        window.removeEventListener('mouseup', this.mouseup, false)\r\n        this.tableEle.removeEventListener('click', this.tableClick, false)\r\n        this.tableEle.removeEventListener('contextmenu', this.contextmenu, false)\r\n        window.removeEventListener('mousedown', this.removeSomeNoSelfIsClicked, false)\r\n    }\r\n}\r\n","/* eslint-disable */\r\nconst defaults = {\r\n    colMinWidth: 50, // 列最小宽度\r\n}\r\n\r\nexport default class ColumnResizer {\r\n    constructor (tableEle, options = {}) {\r\n        this.opts = Object.assign({}, defaults, options)\r\n        this.tableEle = tableEle\r\n        this.tableEle.columnResizer = Object.assign({}, {reset: this.reset})\r\n        this.handshank = null\r\n        this.handshankCls = 'tableMergeCell-handshank'\r\n        this.subline = 'tableMergeCell-subline'\r\n        this.handshankHover = 'tableMergeCell-handshank-hover'\r\n        this.init()\r\n    }\r\n\r\n    // 初始化\r\n    init () {\r\n        if (!this.tableEle || this.tableEle.ELEMENT_NODE !== 1 || this.tableEle.tagName !== 'TABLE') {\r\n            throw new Error('请传入table元素！')\r\n        }\r\n        this.getDefaultWidth()\r\n        this.setDefaultWidth()\r\n        this.addResizeHandShank()\r\n        this.addEvent()\r\n    }\r\n\r\n    // 获取表格与列宽默认值\r\n    getDefaultWidth () {\r\n        const {width} = this.tableEle.getBoundingClientRect()\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const colCount = rows[0].childElementCount\r\n        this.average = width / colCount\r\n        this.tableWidth = width\r\n    }\r\n\r\n    // 重置相关内容\r\n    reset = () => {\r\n        this.addResizeHandShank()\r\n        this.setDefaultWidth()\r\n    }\r\n\r\n    // 初始化默认宽\r\n    setDefaultWidth () {\r\n        this.setTableWidth(this.tableWidth)\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const firstRowCells = rows[0].children\r\n        firstRowCells.forEach(cell => {\r\n            const width = cell.style.width\r\n            if (!width) {\r\n                cell.style.width = `${this.average}px`\r\n            }\r\n        })\r\n    }\r\n\r\n    // 增加列调整手柄\r\n    addResizeHandShank () {\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const cells = rows[0].children\r\n        cells.forEach((cell, index) => {\r\n            const handshank = cell.querySelector(`.${this.handshankCls}`)\r\n            handshank && handshank.remove()\r\n            const i = `&emsp;<i data-col=\"${index}\" contenteditable=\"false\" class=\"${this.handshankCls}\"></i>`\r\n            cell.insertAdjacentHTML('beforeend', i)\r\n        })\r\n    }\r\n\r\n    // 增加辅助线\r\n    addSubline () {\r\n        this.handshank.classList.add(this.subline)\r\n        // this.tableEle.style.overflow = 'hidden'\r\n    }\r\n\r\n    // 移除辅助线\r\n    removeSubline () {\r\n        this.handshank.classList.remove(this.subline)\r\n        // this.tableEle.style.overflow = 'initial'\r\n    }\r\n\r\n    // 设置表格宽\r\n    setTableWidth (width) {\r\n        this.tableEle.setAttribute('width', `${width}px`)\r\n    }\r\n\r\n    // 获取列宽和\r\n    getColsWidth () {\r\n        const {rows} = this.tableEle.tBodies[0]\r\n        const cells = rows[0].children\r\n        const arr = Array.from(cells).map(cell => {\r\n            return Number.parseFloat(cell.style.width)\r\n        })\r\n        const width = arr.reduce((acc, cur) => {\r\n            return acc + cur\r\n        })\r\n        return width\r\n    }\r\n\r\n    mousedown = (e) => {\r\n        const {target, button, clientX} = e\r\n        if (button === 0 && target.className.includes(this.handshankCls)) {\r\n            this.handshank = target\r\n            this.handshank.classList.add(this.handshankHover)\r\n            this.clientX = clientX\r\n            this.addSubline()\r\n        } else {\r\n            this.handshank = null\r\n        }\r\n    }\r\n\r\n    mousemove = (e) => {\r\n        if (this.handshank) {\r\n            e.preventDefault()\r\n            const {clientX} = e\r\n            this.diff = clientX - this.clientX\r\n            this.handshank.style.transform = `translateX(${this.diff}px)`\r\n        }\r\n    }\r\n\r\n    mouseleave = () => {\r\n        this.mouseup()\r\n    }\r\n\r\n    mouseup = (e) => {\r\n        if (this.handshank) {\r\n            const {clientX} = e\r\n            const firstRow = this.tableEle.tBodies[0].rows[0]\r\n            const index = this.handshank.dataset.col\r\n            const currentCol = firstRow.children[index]\r\n            const {width} = currentCol.getBoundingClientRect()\r\n            const calcWidth = width + this.diff\r\n            const {colMinWidth} = this.opts\r\n            const newWidth = Math.max(colMinWidth, calcWidth)\r\n            if (clientX - this.clientX === 0) return\r\n            if (this.tableEle.contains(this.handshank)) {\r\n                currentCol.style.width = `${newWidth}px`\r\n            }\r\n            this.handshank.style.transform = 'none'\r\n            this.handshank.classList.remove(this.handshankHover)\r\n            this.removeSubline()\r\n            const colsWidth = this.getColsWidth()\r\n            this.setTableWidth(colsWidth)\r\n            this.handshank = null\r\n        }\r\n    }    \r\n\r\n    addEvent () {\r\n        window.addEventListener('mousedown', this.mousedown, false)\r\n        window.addEventListener('mousemove', this.mousemove, false)\r\n        window.addEventListener('mouseup', this.mouseup, false)\r\n        // this.tableEle.addEventListener('mouseleave', this.mouseleave, false)\r\n    }\r\n\r\n    removeEvent () {\r\n        window.removeEventListener('mousedown', this.mousedown, false)\r\n        window.removeEventListener('mousemove', this.mousemove, false)\r\n        window.removeEventListener('mouseup', this.mouseup, false)\r\n        // this.tableEle.removeEventListener('mouseleave', this.mouseleave, false)\r\n    }\r\n}\r\n","import TableMergeCell from '@/assets/tableMergeCell/tableMergeCell'\r\nimport '@/assets/tableMergeCell/tableMergeCell.less'\r\nimport ColumnResizer from '@/assets/columnResizer/columnResizer'\r\nimport '@/assets/columnResizer/columnResizer.less'\r\n\r\nexport const wangEditorTableExtend = {\r\n    mounted () {\r\n        this.$nextTick(() => {\r\n            this.tableObserve()\r\n        })\r\n    },\r\n    methods: {\r\n        initTableInteraction () {\r\n            if (!this.$refs.editor) return\r\n            this.tables = this.$refs.editor.querySelectorAll('.w-e-text > table')\r\n            this.tables.forEach(table => {\r\n                table.tableMergeCellInstance = new TableMergeCell(table, {\r\n                    onAddCol: () => {\r\n                        table.columnResizer.reset()\r\n                    },\r\n                })\r\n                table.tableColumnResizerInstance = new ColumnResizer(table, {\r\n                    // resizeMode: 'overflow',\r\n                })\r\n            })\r\n        },\r\n        tableObserve () {\r\n            const callback = (mutationsList) => {\r\n                for (const mutation of mutationsList) {\r\n                    const {target, addedNodes} = mutation\r\n                    const [addedNode] = addedNodes\r\n                    if (target.className.includes('w-e-text') && addedNode && addedNode.tagName === 'TABLE') {\r\n                        this.initTableInteraction()\r\n                    }\r\n                }\r\n            }\r\n            const observer = new MutationObserver(callback)\r\n            const ele = this.$refs.editor.querySelector('.w-e-text[contenteditable=\"true\"]')\r\n            observer.observe(ele, {\r\n                childList: true,\r\n                subtree: true,\r\n            })\r\n        },\r\n    },\r\n    beforeDestroy () {\r\n      this.tables && this.tables.forEach(table => {\r\n          table.tableMergeCellInstance.removeEvent()\r\n          table.tableColumnResizerInstance.removeEvent()\r\n      })\r\n      this.tables = null\r\n    },\r\n}","<template>\n    <div>\n      <div ref=\"editor\"></div>\n      <button type=\"button\" id=\"btn1\" @click=\"getHtml\">获取html</button>\n      <button type=\"button\" id=\"btn2\" @click=\"setHtml\">设置html</button>\n      <div ref=\"newHtml\" class=\"newHtml\"></div>\n    </div>\n</template>\n\n<script>\n/* eslint-disable */\nimport E from 'wangeditor'\nimport { wangEditorTableExtend } from '@/assets/tool'\nexport default {\n  name: 'about',\n  mixins: [wangEditorTableExtend],\n  mounted () {\n    this.initEditor()\n  },\n  methods: {\n    getHtml () {\n        this.newHtml = this.editor.txt.html()\n        this.$refs.newHtml.innerHTML = this.newHtml\n    },\n    setHtml () {\n        // this.newHtml = ``\n        this.editor.txt.html(this.newHtml)\n        // this.initTableInteraction()\n    },\n    initEditor () {\n        this.editor = new E(this.$refs.editor)\n\n        /*this.editor.config.onchange = (newHtml) => {\n            console.log(\"change 之后最新的 newHtml\", newHtml)\n        };*/\n        this.editor.config.onchangeTimeout = 200; // 修改为 500ms\n        this.editor.create()\n    },\n  },\n}\n</script>\n\n<style>\n    .newHtml {\n        border-collapse: collapse;\n    }\n    .newHtml th, .newHtml td {\n        height: 30px;\n        border: 1px solid #eee;\n    }\n    .w-e-text-container {\n        height: 330px!important;\n    }\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=2e742c94&\"\nimport script from \"./About.vue?vue&type=script&lang=js&\"\nexport * from \"./About.vue?vue&type=script&lang=js&\"\nimport style0 from \"./About.vue?vue&type=style&index=0&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport About from '../views/About.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: About,\n  },\n  // {\n  //   path: '/about',\n  //   name: 'about',\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/About.vue')\n  // },\n  // {\n  //   path: '/redips',\n  //   name: 'redips',\n  //   component: () => import(/* webpackChunkName: \"about\" */ '../views/Redips.vue')\n  // }\n]\n\nconst router = new VueRouter({\n  routes\n})\n\nexport default router\n","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\n/*import {Modal} from 'ant-design-vue'\r\nimport 'ant-design-vue/lib/modal/style/css'\r\nVue.use(Modal)\r\nVue.prototype.$confirm = Modal.confirm\r\nVue.prototype.$info = Modal.info*/\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=style&index=0&lang=css&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=style&index=0&lang=css&\""],"sourceRoot":""}