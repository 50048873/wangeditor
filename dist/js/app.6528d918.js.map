{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/App.vue?7bff","webpack:///./src/App.vue","webpack:///./src/views/About.vue?6c92","webpack:///./src/components/FormulaPop.vue?2de1","webpack:///./src/components/MathFormula/MathFormula.vue?ca70","webpack:///./src/components/MathFormula/constant.js","webpack:///src/components/MathFormula/MathFormula.vue","webpack:///./src/components/MathFormula/MathFormula.vue?c33f","webpack:///./src/components/MathFormula/MathFormula.vue","webpack:///src/components/FormulaPop.vue","webpack:///./src/components/FormulaPop.vue?0a8b","webpack:///./src/components/FormulaPop.vue","webpack:///./src/assets/constant.js","webpack:///./src/assets/tool.js","webpack:///./src/assets/tableMergeCell/tableMergeCell.js","webpack:///./src/assets/columnResizer/columnResizer.js","webpack:///./src/assets/mixin.js","webpack:///./src/assets/wangEditorMenuExtention.js","webpack:///src/views/About.vue","webpack:///./src/views/About.vue?f1da","webpack:///./src/views/About.vue","webpack:///./src/router/index.js","webpack:///./src/store/index.js","webpack:///./src/main.js","webpack:///./src/views/About.vue?b0eb","webpack:///./src/App.vue?c650","webpack:///./src/components/MathFormula/mathFormula.less?befe"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","exports","module","l","m","c","d","name","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","p","jsonpArray","window","oldJsonpFunction","slice","_vm","this","_h","$createElement","_c","_self","attrs","_v","staticRenderFns","script","component","ref","domProps","_s","visible","type","latex","on","$event","confirm","staticClass","_m","_l","item","index","latexToHtml","editMath","ok","cancel","_e","title","class","current","currentIndex","toggle","symbol","style","bgPos","insert","tabTitle","mathSymbol","pos","x","y","menus","handleOfficeTableSpace","cell","innerHTML","replace","getCellsLenFromOfficeTable","row","cells","len","count","colspan","getAttribute","handleOfficeTable","table","cellpadding","tbody","tBodies","rows","children","rowLen","cellsLen","rowspan","k","newCell","insertCell","display","handleTh","cellspacing","firstTr","fragment","document","createDocumentFragment","tagName","td","createElement","appendChild","newTr","replaceChild","removeTableActiveCls","activeEle","querySelector","classList","remove","_getPreTrCellInfo","Error","preTrCell","preTrIndex","_getPreCellInfo","previousElementSibling","preCell","preCellIndexRight","getCellSpanProperty","_getRowStart","i2","cell2","indexR","indexC","_getColStart","getRowStart","fn","rowStart","rowEnd","colStart","colEnd","_rowStart","getRowEnd","preTrRowspan","_rowEnd","getColStart","tr","_colStart","getColEnd","preColspan","colorToRgb","color","span","body","getComputedStyle","removeChild","getIndexDefaultValue","col","getTargetParentCell","target","parentNode","handleExcelData","values","substring","arr1","split","res","forEach","arr2","getAddedTable","mutation","addedNodes","node","className","includes","firstChild","getAddedImg","src","prevTable","prevSib","defaults","btnDisabledColor","onAddCol","onDelCol","imgMinWidth","TableMergeCell","tableEle","options","e","selectedCells","colorPicker","ele","backgroundColor","removeEventListener","colorChange","removeClass","color1","color2","opts","dataset","getCellIndex","contextmenuCell","copyTable","textAlignLeft","textAlignCenter","textAlignRight","addBackgroundColor","delBackgroundColor","delTable","addRow","delRow","addCol","delCol","addTh","delTh","mergeCell","unMergeCell","menuEle","button","imgMasklayer","contains","tBody","tableIsInTable","ready","cellStart","indexStart","addClass","handleImgBtn","handleImgEnter","insertAdjacentElement","selectedImg","requestAnimationFrame","cellEnd","indexEnd","selection","getSelection","collapseToEnd","makeSelectedCellsToRect","stopPropagation","href","open","handleImg","clientX","clientY","preventDefault","add","addEventListener","menuClick","li","textContent","getBoundingClientRect","width","height","documentElement","clientWidth","clientHeight","diffX","diffY","marginLeft","marginTop","top","left","handleSomeMenuBtns","selectionStr","toString","isActiveTable","copyedCellsArray","getSelectedCells","Array","isArray","clipboardData","setData","getData","items","excelData","handlePaste","querySelectorAll","handleImgWidth","preElement","assign","tableClassName","selectedCellClassName","maxRowCount","maxColCount","init","ELEMENT_NODE","syncMaxRowAndColCount","addEvent","removeEvent","childElementCount","setAttribute","selectedLastEle","setTimeout","click","removeProperty","removeAttribute","isTwoDimensionalArray","selectedCellsTwoDimensionalArray","rowArray","firstCell","innerText","childLen","maxCount","Math","max","from","startRowIndex","endRowIndex","rowIndexArray","startColIndex","endColIndex","colIndexArray","getSelectedCellsByClassName","btn_textAlignLeft","btn_textAlignCenter","btn_textAlignRight","btn_addBackgroundColor","btn_delBackgroundColor","btn_addRow","btn_delRow","btn_addCol","btn_delCol","btn_addTh","btn_delTh","btn_merge","btn_unMerge","trLen","cellLen","relatedCellsArray","getRelatedMergedRowCells","getMergedColIndexArray","newRow","insertRow","rowIndex","rowIsInMergedRow","willRowIndex","insertAdjacentHTML","cellIndex","currentRowIndex","delFirstRow","delOtherRow","deleteRow","delEmptyTable","nextRow","nextCell","nextElementSibling","getRelatedMergedColCells","delFirstCol","delOtherCol","deleteCell","borderBottom","textAlign","fontWeight","outerHTML","localStorage","setItem","htmlStr","input","opacity","position","select","setSelectionRange","execCommand","lastTr","firstTd","firstElementChild","lastTd","lastElementChild","handleIndexSerial","maxLoop","_colEnd","updateIndex","highlightRangeCells","originCells","i1","tr_o","tr_t","children_t","j1","j2","cell_o","cell_t","display_t","display_o","imgOriginWidth","inputEle","newWidth","test","Number","parseInt","Modal","content","zIndex","paddingRight","paddingLeft","borderRightWidth","maxW","parseFloat","mousedown","mousemove","mouseup","tableClick","contextmenu","copy","paste","removeSomeNoSelfIsClicked","keydown","colMinWidth","ColumnResizer","addOneCol","handleResizeHandShank","colsWidth","getColsWidth","setTableWidth","handshankCls","handshank","handshankHover","addSubline","diff","transform","currentCol","colgroup","calcWidth","subline","row0","thead","isExcelTable","wangEditorEditableContainer","getTargetParentElement","average","initTable","handleExcelTable","initTheadAndColgroup","updateAverage","setColWidth","handleTableWidth","triggerFirstCellHeight","colCount","th","floor","total","totalWidth","getColTotal","evt","CustomEvent","bubbles","cancelable","dispatchEvent","cols","ths","toFixed","arr","map","reduce","acc","cur","wangEditorTableExtend","mounted","$nextTick","textElem","editor","$textElem","elems","pasteTable","tableObserve","methods","textPlain","textHtml","getImageItem","types","officeXmlns","isExcel","isWord","isPpt","imageItem","kind","match","tableMergeCell_active","getItem","tempDiv","rangeCount","range","getRangeAt","insertNode","getParentP","initTableInteraction","$refs","tables","tableMergeCellInstance","tableColumnResizerInstance","handleAddCol","handleDelCol","callback","mutationsList","imgSrc","img","observer","MutationObserver","observe","childList","subtree","beforeDestroy","destroy","disconnect","FormulaMenu","$elem","E","$","event","active","BtnMenu","Vue","use","VueRouter","routes","path","About","router","Vuex","Store","state","mutations","actions","$confirm","$info","info","config","productionTip","store","render","h","App","$mount"],"mappings":"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","file":"js/app.6528d918.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t\"app\": 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([0,\"chunk-vendors\"]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"app\"}},[_c('div',{attrs:{\"id\":\"nav\"}},[_c('router-link',{attrs:{\"to\":\"/\"}},[_vm._v(\"tableMergeCell\")])],1),_c('router-view')],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./App.vue?vue&type=template&id=daa57446&\"\nvar script = {}\nimport style0 from \"./App.vue?vue&type=style&index=0&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('div',{ref:\"editor\"},[_c('div',{domProps:{\"innerHTML\":_vm._s(_vm.value)}})]),_c('formula-pop',{attrs:{\"visible\":_vm.visible,\"type\":_vm.type,\"latex\":_vm.latex},on:{\"update:visible\":function($event){_vm.visible=$event},\"confirm\":_vm.confirm}}),_c('table',{staticClass:\"testTable\"},[_vm._m(0),_vm._l((_vm.latexArray),function(item,index){return _c('tr',{key:index},[_c('td',{domProps:{\"innerHTML\":_vm._s(_vm.latexToHtml(item.latex))}}),_c('td',{on:{\"click\":function($event){return _vm.editMath(item.latex, index)}}},[_vm._v(\"编辑\")])])})],2)],1)}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('tr',[_c('th',[_vm._v(\"公式\")]),_c('th',[_vm._v(\"操作\")])])}]\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('a-modal',{attrs:{\"title\":\"新增公式\",\"width\":\"600px\",\"visible\":_vm.visible},on:{\"ok\":_vm.ok,\"cancel\":_vm.cancel}},[(_vm.visible)?_c('math-formula',{attrs:{\"type\":_vm.type,\"latex\":_vm.latex}}):_vm._e()],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('section',{staticClass:\"mathFormula\"},[_c('div',{staticClass:\"tabMenu\"},[_c('ul',{staticClass:\"tabTitle\"},_vm._l((_vm.tabTitle),function(title,index){return _c('li',{key:index,class:{current: index === _vm.currentIndex},on:{\"click\":function($event){return _vm.toggle(index)}}},[_vm._v(\" \"+_vm._s(title)+\" \")])}),0),_c('ul',{staticClass:\"tabContent\"},_vm._l((_vm.currentMathSymbol),function(symbol,index){return _c('li',{key:index,staticClass:\"mathBox\",style:(_vm.bgPos(index)),on:{\"click\":function($event){return _vm.insert(symbol)}}})}),0)]),_vm._m(0)])}\nvar staticRenderFns = [function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"mathDiv\",attrs:{\"id\":\"mathDiv\"}},[_c('span',{attrs:{\"id\":\"jmeMath\"}})])}]\n\nexport { render, staticRenderFns }","export const tabTitle = ['常用公式', '字母', '符号']\r\n\r\nexport const mathSymbol = [\r\n    [\r\n        \"{/}frac{}{}\", \"^{}/_{}\", \"x^{}\", \"x_{}\", \"x^{}_{}\", \"{/}bar{}\", \"{/}sqrt{}\", \"{/}nthroot{}{}\",\r\n        \"{/}sum^{}_{n=}\", \"{/}sum\", \"{/}log_{}\", \"{/}ln\", \"{/}int_{}^{}\", \"{/}oint_{}^{}\"\r\n    ],\r\n    [\r\n        \"{/}alpha\", \"{/}beta\", \"{/}gamma\", \"{/}delta\", \"{/}varepsilon\", \"{/}varphi\", \"{/}lambda\", \"{/}mu\",\r\n        \"{/}rho\", \"{/}sigma\", \"{/}omega\", \"{/}Gamma\", \"{/}Delta\", \"{/}Theta\", \"{/}Lambda\", \"{/}Xi\",\r\n        \"{/}Pi\", \"{/}Sigma\", \"{/}Upsilon\", \"{/}Phi\", \"{/}Psi\", \"{/}Omega\"\r\n    ],\r\n    [\r\n        \"+\", \"-\", \"{/}pm\", \"{/}times\", \"{/}ast\", \"{/}div\", \"/\", \"{/}bigtriangleup\",\r\n        \"=\", \"{/}ne\", \"{/}approx\", \">\", \"<\", \"{/}ge\", \"{/}le\", \"{/}infty\",\r\n        \"{/}cap\", \"{/}cup\", \"{/}because\", \"{/}therefore\", \"{/}subset\", \"{/}supset\", \"{/}subseteq\", \"{/}supseteq\",\r\n        \"{/}nsubseteq\", \"{/}nsupseteq\", \"{/}in\", \"{/}ni\", \"{/}notin\", \"{/}mapsto\", \"{/}leftarrow\", \"{/}rightarrow\",\r\n        \"{/}Leftarrow\", \"{/}Rightarrow\", \"{/}leftrightarrow\", \"{/}Leftrightarrow\"\r\n    ]\r\n]\r\n\r\nexport const pos = [\r\n    {\r\n        x: 0,\r\n        y: 272,\r\n    },\r\n    {\r\n        x: 0,\r\n        y: 170,\r\n    },\r\n    {\r\n        x: 0,\r\n        y: 0,\r\n    },\r\n]","<template>\n    <section class=\"mathFormula\">\n        <div class=\"tabMenu\">\n            <ul class=\"tabTitle\">\n                <li \n                    v-for=\"(title, index) in tabTitle\"\n                    :key=\"index\" \n                    :class=\"{current: index === currentIndex}\"\n                    @click=\"toggle(index)\">\n                    {{title}}\n                </li>\n            </ul>\n            <ul class=\"tabContent\">\n                <li \n                    class=\"mathBox\" \n                    v-for=\"(symbol, index) in currentMathSymbol\"\n                    :key=\"index\"\n                    :style=\"bgPos(index)\"\n                    @click=\"insert(symbol)\">\n                </li>\n            </ul>\n        </div>\n        <div id=\"mathDiv\" class=\"mathDiv\">\n            <span id=\"jmeMath\"></span>\n        </div>\n    </section>\n</template>\n\n<script>\n/* eslint-disable */\nimport {tabTitle, mathSymbol, pos} from './constant'\nexport default {\n    name: 'MathFormula',\n    props: {\n        latex: {\n            type: String,\n            default: '',\n        },\n        type: {\n            type: String,\n            default: 'add',\n            validator (value) {\n                return ['add', 'edit'].some(item => {\n                    return item === value\n                })\n            },\n        },\n    },\n    data () {\n        return {\n            currentIndex: 0,\n        }\n    },\n    computed: {\n        currentMathSymbol () {\n            return this.mathSymbol[this.currentIndex]\n        },\n    },\n    created () {\n        this.tabTitle = tabTitle\n        this.mathSymbol = mathSymbol\n    },\n    mounted () {\n        this.$nextTick(() => {\n            window.$(\"#jmeMath\").mathquill('editable').mathquill(\"write\", this.latex)\n        })\n    },\n    methods: {\n        toggle (index) {\n            this.currentIndex = index\n        },\n        bgPos (index) {\n            const slidLen = 34 // 每个图标的宽或高\n            const {x, y} = pos[this.currentIndex]\n            return {\n                backgroundPosition: `-${x + Math.floor(index % 8) * slidLen}px -${y + Math.floor(index / 8) * slidLen}px`\n            }\n        },\n        insert (q) {\n            window.$(\"#jmeMath\").focus().mathquill(\"write\", q.replace(\"{/}\", \"\\\\\"))\n        },\n    }\n}\n</script>\n\n<style src=\"./mathFormula.less\" lang=\"less\"></style>","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MathFormula.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./MathFormula.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./MathFormula.vue?vue&type=template&id=6151b39e&\"\nimport script from \"./MathFormula.vue?vue&type=script&lang=js&\"\nexport * from \"./MathFormula.vue?vue&type=script&lang=js&\"\nimport style0 from \"./mathFormula.less?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","<template>\n    <a-modal title=\"新增公式\" width=\"600px\" :visible=\"visible\" @ok=\"ok\" @cancel=\"cancel\">\n        <math-formula :type=\"type\" :latex=\"latex\" v-if=\"visible\" />\n    </a-modal>\n</template>\n<script>\nimport MathFormula from '@/components/MathFormula/MathFormula'\nexport default {\n    name: 'FormulaPop',\n    components: {\n        MathFormula,\n    },\n    props: {\n        visible: {\n            type: Boolean,\n            default: false,\n        },\n        latex: {\n            type: String,\n            default: '',\n        },\n        type: {\n            type: String,\n            default: 'add',\n        },\n    },\n    methods: {\n        ok() {\n            const $jmeMath = window.$('#jmeMath')\n            const latex = $jmeMath.mathquill('latex')\n            this.$emit('confirm', latex)\n            this.$emit('update:visible', false)\n        },\n        cancel() {\n            this.$emit('update:visible', false)\n        }\n    }\n}\n</script>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormulaPop.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./FormulaPop.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./FormulaPop.vue?vue&type=template&id=42dff2e2&\"\nimport script from \"./FormulaPop.vue?vue&type=script&lang=js&\"\nexport * from \"./FormulaPop.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","export const menus = [\r\n    {\r\n        name: '靠左',\r\n        key: 'textAlignLeft',\r\n    },\r\n    {\r\n        name: '居中',\r\n        key: 'textAlignCenter',\r\n    },\r\n    {\r\n        name: '靠右',\r\n        key: 'textAlignRight',\r\n    },\r\n    {\r\n        name: '设置背景色',\r\n        key: 'addBackgroundColor',\r\n    },\r\n    {\r\n        name: '删除背景色',\r\n        key: 'delBackgroundColor',\r\n    },\r\n    {\r\n        name: '合并单元格',\r\n        key: 'merge',\r\n    }, \r\n    {\r\n        name: '取消合并单元格',\r\n        key: 'unMerge',\r\n    },\r\n    {\r\n        name: '添加行',\r\n        key: 'addRow',\r\n    },\r\n    {\r\n        name: '删除行',\r\n        key: 'delRow',\r\n    },\r\n    {\r\n        name: '添加列',\r\n        key: 'addCol',\r\n    },\r\n    {\r\n        name: '删除列',\r\n        key: 'delCol',\r\n    },\r\n    {\r\n        name: '设置表头',\r\n        key: 'addTh',\r\n    },\r\n    {\r\n        name: '取消表头',\r\n        key: 'delTh',\r\n    },\r\n    {\r\n        name: '复制表格',\r\n        key: 'copyTable',\r\n    },\r\n    {\r\n        name: '删除表格',\r\n        key: 'delTable',\r\n    },\r\n]","/* eslint-disable */\r\nconst handleKnowledgeContent = (str) => {\r\n    return str.replace(/(<table.*?>)/gs, '<div class=\"tableMergeCell-tempContainer\">$1').replace(/(<\\/table>)/g, '$1</div>')\r\n}\r\n\r\nexport const handleData_getKnowledgePageByActPackId = (res) => {\r\n    if (!res) return res\r\n    const { state, data } = res\r\n    if (state === 200 && data) {\r\n        const { rows } = data\r\n        if (!Array.isArray(rows)) return res\r\n        const len1 = rows.length\r\n        for (let i = 0; i < len1; i++) {\r\n            const row = rows[i]\r\n            const { subActivityPackageKnowledgeDirVos } = row\r\n            if (!Array.isArray(subActivityPackageKnowledgeDirVos)) continue\r\n            const len2 = subActivityPackageKnowledgeDirVos.length\r\n            for (let j = 0; j < len2; j++) {\r\n                const level2Data = subActivityPackageKnowledgeDirVos[j]\r\n                if (!level2Data) continue\r\n                const { knowledgeVo } = level2Data\r\n                if (!knowledgeVo) continue\r\n                const { knowledgeContent } = knowledgeVo\r\n                if (knowledgeContent) {\r\n                    knowledgeVo.knowledgeContent = handleKnowledgeContent(knowledgeContent)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return res\r\n}\r\n\r\nexport const handleData_getKnowledgeById = (res) => {\r\n    if (!res) return res\r\n    const { state, data } = res\r\n    if (state === 200 && data) {\r\n        const { knowledgeContent } = data\r\n        if (knowledgeContent) {\r\n            data.knowledgeContent = handleKnowledgeContent(knowledgeContent)\r\n        }\r\n    }\r\n    return res\r\n}\r\n\r\nexport const handleData_showList = (res) => {\r\n    if (!res) return res\r\n    const { code, rows } = res\r\n    if (code === 200) {\r\n        if (!Array.isArray(rows)) return res\r\n        const len1 = rows.length\r\n        for (let i = 0; i < len1; i++) {\r\n            const row = rows[i]\r\n            const { logContent } = row\r\n            if (logContent) {\r\n                row.logContent = handleKnowledgeContent(logContent)\r\n            }\r\n        }\r\n    }\r\n    return res\r\n}\r\n\r\nexport const handleData_taskDetail = (res) => {\r\n    if (!res) return res\r\n    const { state, data } = res\r\n    if (state === 200 && data) {\r\n        const { knowledgeList } = data\r\n        if (Array.isArray(knowledgeList)) {\r\n            const len = knowledgeList.length\r\n            for (let i = 0; i < len; i++) {\r\n                const item = knowledgeList[i]\r\n                const { name } = item\r\n                if (name) {\r\n                    item.name = handleKnowledgeContent(name)\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return res\r\n}\r\n\r\n// 删除从其它软件粘贴过来带的空格\r\nexport const handleOfficeTableSpace = (cell) => {\r\n    const {innerHTML} = cell\r\n    cell.innerHTML = innerHTML.replace(/(&nbsp;){3,}/g, '<br>')\r\n}\r\n\r\n// 获取从办公软件粘贴过来的每行单元格长度\r\nexport const getCellsLenFromOfficeTable = (row) => {\r\n    const cells = row.cells\r\n    const len = cells.length\r\n    let count = 0\r\n    for (let i = 0; i < len; i++) {\r\n        const cell = cells[i]\r\n        const colspan = cell.getAttribute('colspan')\r\n        if (colspan > 1) {\r\n            count = count + colspan * 1\r\n        } else {\r\n            count += 1\r\n        }\r\n    }\r\n    return count\r\n}\r\n\r\n// 补齐从办公软件复制粘贴过来的表格单元格\r\nexport const handleOfficeTable = (table) => {\r\n    const cellpadding = table.getAttribute('cellpadding')\r\n    if (cellpadding) return\r\n    const tbody = table.tBodies[0]\r\n    const rows = tbody.children\r\n    const rowLen = rows.length\r\n    const cellsLen = getCellsLenFromOfficeTable(rows[0])\r\n    for (let i = 0; i < rowLen; i++) {\r\n        const row = rows[i]\r\n        const cells = row.cells\r\n        for (let j = 0; j < cellsLen; j++) {\r\n            const cell = cells[j]\r\n            handleOfficeTableSpace(cell)\r\n            const rowspan = cell.getAttribute('rowspan')\r\n            const colspan = cell.getAttribute('colspan')\r\n            if (rowspan > 1 && !colspan) {\r\n                for (let k = 1; k < rowspan; k++) {\r\n                    const newCell = rows[i + k].insertCell(j)\r\n                    newCell.style.display = 'none'\r\n                }\r\n            } else if (!rowspan && colspan > 1) {\r\n                for (let k = 1; k < colspan; k++) {\r\n                    const newCell = row.insertCell(j + k)\r\n                    newCell.style.display = 'none'\r\n                }\r\n            } else if (rowspan > 1 && colspan > 1) {\r\n                for (let l = 0; l < rowspan; l++) {\r\n                    let c = 0, p = j\r\n                    if (l === 0) {\r\n                        c = 1\r\n                        p = j + 1\r\n                    }\r\n                    for (; c < colspan; c++) {\r\n                        const newCell = rows[i + l].insertCell(p)\r\n                        newCell.style.display = 'none'\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n// 处理插入初始表格时的表头\r\nexport const handleTh = (table) => {\r\n    const cellspacing = table.getAttribute('cellspacing')\r\n    if (!cellspacing) return\r\n    const tbody = table.tBodies[0]\r\n    const rows = tbody.children\r\n    const firstTr = rows[0]\r\n    const {children} = firstTr\r\n    const len = children.length\r\n    let fragment = document.createDocumentFragment()\r\n    for (let i = 0; i < len; i++) {\r\n        const cell = children[i]\r\n        if (cell.tagName === 'TD') {\r\n            fragment = null\r\n            break\r\n        }\r\n        const td = document.createElement('td')\r\n        fragment.appendChild(td)\r\n    }\r\n    if (!fragment) return\r\n    let newTr = document.createElement('tr')\r\n    newTr.appendChild(fragment)\r\n    tbody.replaceChild(newTr, firstTr)\r\n}\r\n\r\n// 移除复制表格时的边框\r\nexport const removeTableActiveCls = () => {\r\n    const activeEle = document.querySelector('.tableMergeCell_active')\r\n    if (activeEle) {\r\n        activeEle.classList.remove('tableMergeCell_active')\r\n    }\r\n}\r\n\r\nconst _getPreTrCellInfo = (rows, i, j) => {\r\n    if (!rows) {\r\n        throw new Error('请传入行')\r\n    }\r\n    if (typeof i !== 'number' || typeof j !== 'number') {\r\n        throw new Error('请传入行和列索引')\r\n    }\r\n    if (i > 0) {\r\n        let m = i - 1\r\n        let preTrCell = rows[m].children[j]\r\n        while (m > 0 && preTrCell && preTrCell.style.display === 'none') {\r\n            m--\r\n            preTrCell = rows[m].children[j]\r\n        }\r\n        return {\r\n            preTrCell,\r\n            preTrIndex: m,\r\n        }\r\n    }\r\n}\r\n\r\nconst _getPreCellInfo = (cell, j) => {\r\n    if (!cell) {\r\n        throw new Error('请传入单元格')\r\n    }\r\n    if (typeof j !== 'number') {\r\n        throw new Error('请传入列索引')\r\n    }\r\n    if (!cell.previousElementSibling) {\r\n        return {\r\n            preCell: cell,\r\n            preCellIndexRight: j,\r\n        }\r\n    }\r\n    let preCell = cell.previousElementSibling\r\n    let k = j - 1\r\n    while (k > 0 && preCell && preCell.style.display === 'none') {\r\n        preCell = preCell.previousElementSibling\r\n        k--\r\n    }\r\n    if (preCell) {\r\n        const {colspan} = getCellSpanProperty(preCell)\r\n        k = k + (colspan - 1)\r\n    } \r\n    return {\r\n        preCell,\r\n        preCellIndexRight: k,\r\n    }\r\n}\r\n\r\nconst _getRowStart = (rows, cell, i, j) => {\r\n    let i2 = i - 1\r\n    for (; i2 >= 0; i2--) {\r\n        const {children} = rows[i2]\r\n        const len = children.length\r\n        for (let m = 0; m < len; m++) {\r\n            const cell2 = children[m]\r\n            const {rowspan, colspan} = getCellSpanProperty(cell2)\r\n            const indexR = i2 + rowspan - 1\r\n            const indexC = m + colspan - 1\r\n            if (rowspan > 1 && indexR >= i && m <= j && indexC >= j) {\r\n                return i2\r\n            }\r\n        }\r\n    }\r\n    return i\r\n}\r\n\r\nconst _getColStart = (rows, cell, i, j) => {\r\n    const {children} = rows[i]\r\n    const len = children.length\r\n    for (let m = 0; m < len; m++) {\r\n        const cell2 = children[m]\r\n        const {colspan} = getCellSpanProperty(cell2)\r\n        const indexC = m + colspan - 1\r\n        if (colspan > 1 && indexC >= j && m <= j) {\r\n            return m\r\n        }\r\n    }\r\n    return j\r\n}\r\n\r\n// 获取单元格rowspan, colspan属性值\r\nexport const getCellSpanProperty = function (cell) {\r\n    if (!cell) {\r\n        return {\r\n            rowspan: 1,\r\n            colspan: 1,\r\n        }\r\n    }\r\n    let rowspan = cell.getAttribute('rowspan')\r\n    let colspan = cell.getAttribute('colspan')\r\n    rowspan = rowspan ? rowspan * 1 : 1\r\n    colspan = colspan ? colspan * 1 : 1\r\n    return {\r\n        rowspan,\r\n        colspan,\r\n    }\r\n}\r\n\r\n// 获取开始行\r\nexport const getRowStart = (function fn (rows, rowStart, rowEnd, colStart, colEnd) {\r\n    if (rowStart === 0) return rowStart\r\n    const {children} = rows[rowStart]\r\n    for (let j = colStart; j <= colEnd; j++) {\r\n        const cell = children[j]\r\n        if (cell.style.display === 'none') {\r\n            const _rowStart = _getRowStart(rows, cell, rowStart, j)\r\n            if (_rowStart < rowStart) {\r\n                rowStart = _rowStart\r\n                return fn(rows, rowStart, rowEnd, colStart, colEnd)\r\n            }\r\n        }\r\n    } \r\n    return rowStart\r\n})\r\n\r\n// 获取结束行\r\nexport const getRowEnd = (function fn (rows, rowStart, rowEnd, colStart, colEnd) {\r\n    if (rowEnd === rows.length - 1) return rowEnd\r\n    const {children} = rows[rowEnd]\r\n    for (let j = colStart; j <= colEnd; j++) {\r\n        const cell = children[j]\r\n        const {rowspan} = getCellSpanProperty(cell)\r\n        if (rowspan > 1) {\r\n            rowEnd += rowspan - 1\r\n            return fn(rows, rowStart, rowEnd, colStart, colEnd)\r\n        } else if (rowEnd > 0 && cell.style.display === 'none') {\r\n            const {preTrCell, preTrIndex} = _getPreTrCellInfo(rows, rowEnd, j)\r\n            const {rowspan: preTrRowspan} = getCellSpanProperty(preTrCell)\r\n            if (preTrRowspan > 1) { \r\n                const _rowEnd = preTrIndex + preTrRowspan - 1\r\n                if (_rowEnd > rowEnd) {\r\n                    rowEnd = _rowEnd\r\n                    return fn(rows, rowStart, rowEnd, colStart, colEnd)\r\n                }\r\n            }\r\n        }\r\n    } \r\n    return rowEnd\r\n})\r\n\r\n// 获取开始列\r\nexport const getColStart = (function fn (rows, rowStart, rowEnd, colStart, colEnd) {\r\n    if (colStart === 0) return colStart\r\n    for (let i = rowStart; i <= rowEnd; i++) {\r\n        const tr = rows[i]\r\n        const {children} = tr\r\n        const cell = children[colStart]\r\n        if (cell.style.display === 'none') {\r\n            const _colStart = _getColStart(rows, cell, i, colStart)\r\n            if (_colStart < colStart) {\r\n                colStart = _colStart\r\n                return fn(rows, rowStart, rowEnd, colStart, colEnd)\r\n            }\r\n        } \r\n    }\r\n    return colStart\r\n})\r\n\r\n// 获取结束列\r\nexport const getColEnd = (function fn (rows, rowStart, rowEnd, colStart, colEnd) {\r\n    if (colEnd === rows[0].length) return colEnd\r\n    for (let i = rowStart; i <= rowEnd; i++) {\r\n        const tr = rows[i]\r\n        const {children} = tr\r\n        const cell = children[colEnd]\r\n        const {colspan} = getCellSpanProperty(cell)\r\n        if (colspan > 1) {\r\n            colEnd += colspan - 1\r\n            return fn(rows, rowStart, rowEnd, colStart, colEnd)\r\n        } else if (cell.style.display === 'none') {\r\n            const {preCell, preCellIndexRight} = _getPreCellInfo(cell, colEnd)\r\n            const {colspan: preColspan} = getCellSpanProperty(preCell)\r\n            if (preColspan > 1 && colEnd < preCellIndexRight) {\r\n                colEnd = preCellIndexRight\r\n                return fn(rows, rowStart, rowEnd, colStart, colEnd)\r\n            } \r\n        } \r\n    }\r\n    return colEnd\r\n})\r\n\r\n// 颜色值转rgb值\r\nexport const colorToRgb = (color) => {\r\n    var span = document.createElement('span')\r\n    span.style.color = color\r\n    document.body.appendChild(span)\r\n    var c = window.getComputedStyle(span).color\r\n    document.body.removeChild(span)\r\n    return c\r\n}\r\n\r\n// 返回默认值\r\nexport const getIndexDefaultValue = () => {\r\n    return {\r\n        row: -1,\r\n        col: -1,\r\n    }\r\n}\r\n\r\n// 获取td, th单元格\r\nexport const getTargetParentCell = (target) => {\r\n    while (target.tagName !== 'TD' && target.tagName !== 'TH' && target.parentNode) {\r\n        target = target.parentNode\r\n    }\r\n    return target\r\n}\r\n\r\n// 是否是thead的子元素\r\nexport const isTheadChild = (target) => {\r\n    while (target.tagName !== 'THEAD' && target.parentNode) {\r\n        target = target.parentNode\r\n    }\r\n    return target.tagName === 'THEAD'\r\n}\r\n\r\n// 处理从excel复制来的表格数据\r\nexport const handleExcelData = (values) => {\r\n    values = values.replace(/\\n/g, 'n').replace(/\\s/g, ',').replace(/,{2,}/g, ',')\r\n    values = values.substring(0, values.length - 2)\r\n    const arr1 = values.split(',n')\r\n    let res = []\r\n    arr1.forEach(item => {\r\n        const arr2 = item.split(',')\r\n        res.push(arr2)\r\n    })\r\n    return res\r\n}\r\n\r\n// 获取mutation addedNode的table元素\r\nexport const getAddedTable = (mutation) => {\r\n    const { addedNodes } = mutation\r\n    let table = null\r\n    for (let i = 0; i < addedNodes.length; i++) {\r\n        const node = addedNodes[i]\r\n        const {className} = node\r\n        if (node.tagName === 'TABLE') {\r\n            table = node\r\n            break\r\n        } else if (className && className.includes('tableMergeCell-tempContainer')) {\r\n            table = node.firstChild\r\n            break\r\n        }\r\n    }\r\n    return table\r\n}\r\n\r\n// 获取mutation addedNode的img元素\r\nexport const getAddedImg = (mutation) => {\r\n    const { addedNodes } = mutation\r\n    let src = null\r\n    for (let i = 0; i < addedNodes.length; i++) {\r\n        const node = addedNodes[i]\r\n        if (node.tagName === 'IMG') {\r\n            const prevTable = node.previousElementSibling\r\n            if (prevTable && prevTable.tagName === 'TABLE') {\r\n                src = node.getAttribute('src')\r\n                break\r\n            } else if (node.parentNode) {\r\n                const prevSib = node.parentNode.previousElementSibling\r\n                if (prevSib && prevSib.tagName === 'TABLE') {\r\n                    src = node.getAttribute('src')\r\n                    break\r\n                }\r\n            }\r\n        }\r\n    }\r\n    return src\r\n}","/* eslint-disable */\r\nimport {Modal} from 'ant-design-vue'\r\nimport 'ant-design-vue/lib/modal/style/css'\r\nimport {menus} from '../constant'\r\nimport {\r\n    getCellSpanProperty, \r\n    getRowStart,\r\n    getColEnd,\r\n    getRowEnd,\r\n    getColStart,\r\n    removeTableActiveCls,\r\n    colorToRgb,\r\n    getIndexDefaultValue,\r\n    getTargetParentCell,\r\n    handleExcelData,\r\n} from '../tool'\r\n\r\nconst defaults = {\r\n    btnDisabledColor: '#ddd',   // 右键菜单禁用时的颜色\r\n    onAddCol: null,             // 添加列完成后回调\r\n    onDelCol: null,             // 删除列完成后回调\r\n    imgMinWidth: 20,            // 图片最小宽\r\n}\r\n\r\nexport default class TableMergeCell {\r\n    // 二维数组\r\n    static copyedCellsArray = []\r\n\r\n    constructor (tableEle, options = {}) {\r\n        this.opts = Object.assign({}, defaults, options)\r\n        this.tableEle = tableEle\r\n        this.tBody = tableEle.tBodies[0]\r\n        this.rows = this.tBody.rows\r\n        this.tableClassName = 'tableMergeCell'\r\n        this.menuEle = null\r\n        this.menus = menus\r\n        this.selectedCellClassName = 'tableMergeCell-selected'\r\n        this.ready = false\r\n        this.cellStart = null\r\n        this.cellEnd = null\r\n        this.indexStart = getIndexDefaultValue()\r\n        this.indexEnd = getIndexDefaultValue()\r\n        this.maxRowCount = 0\r\n        this.maxColCount = 0\r\n        this.contextmenuCell = null\r\n        this.init()\r\n    }\r\n\r\n    // 初始化\r\n    init () {\r\n        if (!this.tableEle && this.tableEle.ELEMENT_NODE !== 1 && this.tableEle.tagName !== 'TABLE') {\r\n            throw new Error('请传入table元素！')\r\n        }\r\n        this.tableEle.classList.add(this.tableClassName)\r\n        // this.addCellLocation()\r\n        this.syncMaxRowAndColCount()\r\n        this.addEvent()\r\n    }\r\n\r\n    // 销毁\r\n    destroy () {\r\n        this.removeEvent()\r\n        if (this.menuEle) {\r\n            this.menuEle.removeEventListener('click', this.menuClick, false)\r\n            this.menuEle.remove()\r\n        }\r\n    }\r\n\r\n    // 添加调试坐标\r\n    addCellLocation () {\r\n        const {rows} = this\r\n        rows.forEach((row, i) => {\r\n            const cells = row.children\r\n            cells.forEach((cell, j) => {\r\n                cell.textContent = i + '-' + j\r\n            })\r\n        })\r\n    }\r\n\r\n    // 同步最大行数和最大列数\r\n    syncMaxRowAndColCount () {\r\n        const {rows} = this\r\n        if (rows.length) {\r\n            this.maxRowCount = rows.length\r\n            this.maxColCount = rows[0].childElementCount\r\n        } else {\r\n            this.maxRowCount = 0\r\n            this.maxColCount = 0\r\n        }\r\n    }\r\n\r\n    // 添加背景色\r\n    colorChange = (e) => {\r\n        const {target} = e\r\n        const {value} = target\r\n        const {selectedCells} = this.colorPicker\r\n        if (selectedCells.length) {\r\n            selectedCells.forEach(ele => {\r\n                ele.style.backgroundColor = value\r\n            })\r\n        }\r\n        if (this.colorPicker) {\r\n            this.colorPicker.removeEventListener('input', this.colorChange)\r\n            this.colorPicker.remove()\r\n            this.colorPicker = null\r\n        }\r\n        this.removeClass()\r\n    }\r\n\r\n    // 显示颜色选择弹窗\r\n    addBackgroundColor () {\r\n        const selectedCells = this.getSelectedCells()\r\n        if (!selectedCells.length) return\r\n        this.colorPicker = document.createElement('input')\r\n        this.colorPicker.setAttribute('type', 'color')\r\n        this.colorPicker.className = 'tableMergeCell-colorPicker'\r\n        this.colorPicker.addEventListener('input', this.colorChange, false)\r\n        this.colorPicker.selectedCells = selectedCells\r\n        const selectedLastEle = selectedCells[selectedCells.length - 1]\r\n        selectedLastEle.appendChild(this.colorPicker)\r\n        setTimeout(() => {\r\n            this.colorPicker.click()\r\n        }, 20)\r\n    }\r\n\r\n    // 删除背景色\r\n    delBackgroundColor () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(ele => {\r\n            ele.style.removeProperty('background-color')\r\n        })\r\n    }\r\n\r\n    // 表中表\r\n    tableIsInTable (target) {\r\n        while (target && target.tagName !== 'TABLE') {\r\n            target = target.parentNode\r\n        }\r\n        return this.tableEle !== target && this.tableEle.contains(target)\r\n    }\r\n\r\n    // 为指定单元格添加类名\r\n    addClass (cell) {\r\n        if (!cell.className.includes(this.selectedCellClassName)) {\r\n            cell.classList.add(this.selectedCellClassName)\r\n        }\r\n    }\r\n\r\n    // 移除指定或选取元素类名\r\n    removeClass (cell) {\r\n        if (cell) {\r\n            cell.classList.remove(this.selectedCellClassName)\r\n            if (cell.className === '') {\r\n                cell.removeAttribute('class')\r\n            }\r\n        } else {\r\n            const selectedCells = this.tableEle.querySelectorAll('.tableMergeCell-selected')\r\n            if (selectedCells.length) {\r\n                selectedCells.forEach(item => {\r\n                    item.classList.remove(this.selectedCellClassName)\r\n                    if (item.className === '') {\r\n                        item.removeAttribute('class')\r\n                    }\r\n                })\r\n            }  \r\n        }\r\n    }\r\n\r\n    // 获取选取的单元格\r\n    getSelectedCells (isTwoDimensionalArray = false) {\r\n        const {indexStart, indexEnd} = this\r\n        let selectedCells = []\r\n        let selectedCellsTwoDimensionalArray = []\r\n        const {rows} = this\r\n        for (let i = indexStart.row; i <= indexEnd.row; i++) {\r\n            const tr = rows[i]\r\n            const {children} = tr\r\n            let rowArray = []\r\n            for (let j = indexStart.col; j <= indexEnd.col; j++) {\r\n                const cell = children[j]\r\n                selectedCells.push(cell)\r\n                rowArray.push(cell)\r\n            }\r\n            if (rowArray.length) {\r\n                selectedCellsTwoDimensionalArray.push(rowArray)\r\n            }\r\n        }\r\n        return isTwoDimensionalArray ? selectedCellsTwoDimensionalArray : selectedCells\r\n    }\r\n\r\n    // 合并单元格\r\n    mergeCell () {\r\n        const {rows, indexStart, indexEnd} = this\r\n        const firstCell = rows[indexStart.row].children[indexStart.col]\r\n        for (let i = indexStart.row; i <= indexEnd.row; i++) {\r\n            const tr = rows[i]\r\n            const {children} = tr\r\n            for (let j = indexStart.col; j <= indexEnd.col; j++) {\r\n                const cell = children[j]\r\n                if (cell.innerText && !firstCell.innerText) {\r\n                    firstCell.innerHTML = cell.innerHTML\r\n                }\r\n                if (i === indexStart.row && j === indexStart.col) {\r\n                    const rowspan = indexEnd.row - indexStart.row + 1\r\n                    const colspan = indexEnd.col - indexStart.col + 1\r\n                    cell.setAttribute('rowspan', rowspan)\r\n                    cell.setAttribute('colspan', colspan)\r\n                } else {\r\n                    cell.removeAttribute('rowspan')\r\n                    cell.removeAttribute('colspan')\r\n                    cell.style.display = 'none'\r\n                }\r\n                this.removeClass(cell)\r\n            }\r\n        }\r\n    }\r\n\r\n    // 取消合并单元格\r\n    unMergeCell () {\r\n        const {rows, indexStart, indexEnd} = this\r\n        for (let i = indexStart.row; i <= indexEnd.row; i++) {\r\n            const tr = rows[i]\r\n            const {children} = tr\r\n            for (let j = indexStart.col; j <= indexEnd.col; j++) {\r\n                const cell = children[j]\r\n                if (cell.style.display === 'none') {\r\n                    cell.style.removeProperty('display')\r\n                    if (cell.getAttribute('style') === '') {\r\n                        cell.removeAttribute('style')\r\n                    }\r\n                } else {\r\n                    cell.removeAttribute('rowspan')\r\n                    cell.removeAttribute('colspan') \r\n                }\r\n                this.removeClass(cell)\r\n            }\r\n        }\r\n    }\r\n\r\n    // 获取单元格行列索引\r\n    getCellIndex (ele) {\r\n        let index = {\r\n            row: -1,\r\n            col: -1,\r\n        }\r\n        for (let i = 0; i < this.maxRowCount; i++) {\r\n            const tr = this.rows[i]\r\n            const {children} = tr\r\n            const childLen = children.length\r\n            for (let j = 0; j < childLen; j++) {\r\n                const cell = children[j]\r\n                if (cell === ele) {\r\n                    index.row = i\r\n                    index.col = j\r\n                    break\r\n                }\r\n            }\r\n            if (index.row > 0) {\r\n                break\r\n            }\r\n        }\r\n        \r\n        return index\r\n    }\r\n\r\n    // 获取是否是合并过的单元格\r\n    getIsMergedCellBool (cell) {\r\n        const {rowspan, colspan} = getCellSpanProperty(cell)\r\n        const maxCount = Math.max(rowspan, colspan)\r\n        return maxCount > 1\r\n    }\r\n\r\n    // 根据类名获取选取的单元格\r\n    getSelectedCellsByClassName () {\r\n        return Array.from(this.tableEle.querySelectorAll(`.${this.selectedCellClassName}`))\r\n    }\r\n\r\n    // 获取受影响的合并行索引数组\r\n    getMergedRowIndexArray (startRowIndex, rowspan) {\r\n        const endRowIndex = startRowIndex + rowspan - 1\r\n        let rowIndexArray = []\r\n        do {\r\n            rowIndexArray.push(startRowIndex)\r\n            startRowIndex++\r\n        } while (startRowIndex <= endRowIndex)\r\n        return rowIndexArray\r\n    }\r\n\r\n    // 获取受影响的合并列索引数组\r\n    getMergedColIndexArray (startColIndex, colspan) {\r\n        const endColIndex = startColIndex + colspan - 1\r\n        let colIndexArray = []\r\n        do {\r\n            colIndexArray.push(startColIndex)\r\n            startColIndex++\r\n        } while (startColIndex <= endColIndex)\r\n        return colIndexArray\r\n    }\r\n\r\n    // 当未选取单元格时，控制部分右键菜单项是否可点击\r\n    handleSomeMenuBtns () {\r\n        const {btnDisabledColor} = this.opts\r\n        const selectedCells = this.getSelectedCellsByClassName()\r\n        if (this.cellStart && this.cellEnd && selectedCells.length) {\r\n            this.btn_textAlignLeft.style.removeProperty('color')\r\n            this.btn_textAlignCenter.style.removeProperty('color')\r\n            this.btn_textAlignRight.style.removeProperty('color')\r\n            this.btn_addBackgroundColor.style.removeProperty('color')\r\n            this.btn_delBackgroundColor.style.removeProperty('color')\r\n\r\n            this.btn_addRow.style.removeProperty('color')\r\n            this.btn_delRow.style.removeProperty('color')\r\n            this.btn_addCol.style.removeProperty('color')\r\n            this.btn_delCol.style.removeProperty('color')\r\n\r\n            this.btn_addTh.style.removeProperty('color')\r\n            this.btn_delTh.style.removeProperty('color')\r\n\r\n            this.btn_merge.style.removeProperty('color')\r\n            this.btn_unMerge.style.removeProperty('color')\r\n        } else {\r\n            this.btn_addBackgroundColor.style.color = btnDisabledColor\r\n            this.btn_delBackgroundColor.style.color = btnDisabledColor\r\n            this.btn_textAlignLeft.style.color = btnDisabledColor\r\n            this.btn_textAlignCenter.style.color = btnDisabledColor\r\n            this.btn_textAlignRight.style.color = btnDisabledColor\r\n\r\n            this.btn_addRow.style.color = btnDisabledColor\r\n            this.btn_delRow.style.color = btnDisabledColor\r\n            this.btn_addCol.style.color = btnDisabledColor\r\n            this.btn_delCol.style.color = btnDisabledColor\r\n\r\n            this.btn_addTh.style.color = btnDisabledColor\r\n            this.btn_delTh.style.color = btnDisabledColor\r\n\r\n            this.btn_merge.style.color = btnDisabledColor\r\n            this.btn_unMerge.style.color = btnDisabledColor\r\n        }\r\n    }\r\n\r\n    // 控制删除的列与关联列的关系\r\n    handleMergedCellByDelCol (index) {\r\n        const {rows} = this\r\n        const trLen = rows.length\r\n        for (let i = 0; i < trLen; i++) {\r\n            const row = rows[i]\r\n            const cells = row.children\r\n            const cellLen = cells.length\r\n            for (let j = 0; j < cellLen; j++) {\r\n                const cell = cells[j]\r\n                const {colspan} = getCellSpanProperty(cell)\r\n                if (colspan > 1 && index > j && index < j + colspan) {\r\n                    cell.setAttribute('colspan', colspan - 1)\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 删除表格\r\n    delTable () {\r\n        this.tableEle.remove()\r\n    }\r\n\r\n    // 删除空表格\r\n    delEmptyTable () {\r\n        const {rows} = this\r\n        if (!rows.length || !rows[0].children.length) {\r\n            this.delTable()\r\n        }\r\n    }\r\n\r\n    // 上面添加一行\r\n    addRow (index) {\r\n        const {maxColCount, tBody} = this\r\n        const relatedCellsArray = this.getRelatedMergedRowCells(index, 'addRow')\r\n        let colIndexArray = []\r\n        relatedCellsArray.forEach(cell => {\r\n            const {rowspan, colspan} = getCellSpanProperty(cell)\r\n            const {col} = this.getCellIndex(cell)\r\n            colIndexArray.push(...this.getMergedColIndexArray(col, colspan))\r\n            cell.setAttribute('rowspan', rowspan + 1)\r\n        })\r\n        const newRow = tBody.insertRow(index)\r\n        for (let i = 0; i < maxColCount; i++) {\r\n            newRow.insertCell(i)\r\n        }\r\n        colIndexArray.forEach(index => {\r\n            newRow.children[index].style.display = 'none'\r\n        })\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 获取相关的行合并单元格\r\n    getRelatedMergedRowCells (index, type) {\r\n        const {rows} = this\r\n        let relatedCellsArray = []\r\n        rows.forEach((row, rowIndex) => {\r\n            const cells = row.children\r\n            cells.forEach(cell => {\r\n                const {rowspan} = getCellSpanProperty(cell)\r\n                if (rowspan > 1 && this.rowIsInMergedRow(rowIndex, rowspan, index, type)) {\r\n                    relatedCellsArray.push(cell)\r\n                }\r\n            })\r\n        })\r\n        return relatedCellsArray\r\n    }\r\n\r\n    // 行是在合并单元格范围内\r\n    rowIsInMergedRow (startRowIndex, rowspan, willRowIndex, type) {\r\n        if (type === 'addRow') {\r\n            return willRowIndex > startRowIndex && willRowIndex <= startRowIndex + rowspan - 1\r\n        } else if (type === 'delRow') {\r\n            return willRowIndex >= startRowIndex && willRowIndex <= startRowIndex + rowspan - 1\r\n        }\r\n    }\r\n\r\n    // 左边添加一列\r\n    addCol (index) {\r\n        const {onAddCol} = this.opts\r\n        this.syncMaxRowAndColCount()\r\n\r\n        const {maxRowCount} = this\r\n        const {rows} = this\r\n        for (let i = 0; i < maxRowCount; i++) {\r\n            const row = rows[i]\r\n            const cell = row.children[index]\r\n            cell.insertAdjacentHTML('beforebegin', '<td></td>')\r\n        }\r\n\r\n        rows.forEach((row, rowIndex) => {\r\n            const cells = row.children\r\n            cells.forEach((cell, cellIndex) => {\r\n                const {rowspan, colspan} = getCellSpanProperty(cell)\r\n                if (colspan > 1 && index > cellIndex && index <= cellIndex + colspan - 1) {\r\n                    cell.setAttribute('colspan', colspan + 1)\r\n                    cells[index].style.display = 'none'\r\n                    let rowLen = rowspan\r\n                    let currentRowIndex = rowIndex\r\n                    while (rowLen > 1) {\r\n                        rows[++currentRowIndex].children[index].style.display = 'none'\r\n                        rowLen--\r\n                    }\r\n                }\r\n            })\r\n        })\r\n\r\n        this.syncMaxRowAndColCount()\r\n\r\n        onAddCol && onAddCol(index)\r\n    }\r\n\r\n    // 删除行\r\n    delRow (index) {\r\n        const {tBody, rows} = this\r\n        const relatedCellsArray = this.getRelatedMergedRowCells(index, 'delRow')\r\n        relatedCellsArray.forEach(cell => {\r\n            const {row, col} = this.getCellIndex(cell)\r\n            if (row === index) {\r\n                this.delFirstRow(rows, col, cell, index)\r\n            } else {\r\n                this.delOtherRow(cell)\r\n            }\r\n        })\r\n        tBody.deleteRow(index)\r\n        this.delEmptyTable()\r\n        this.syncMaxRowAndColCount()\r\n    }\r\n\r\n    // 删除非第一行\r\n    delOtherRow (cell) {\r\n        const {rowspan} = getCellSpanProperty(cell)\r\n        cell.setAttribute('rowspan', rowspan - 1)\r\n    }\r\n\r\n    // 删除第一行\r\n    delFirstRow (rows, col, cell, index) {\r\n        const {rowspan, colspan} = getCellSpanProperty(cell)\r\n        const nextRow = rows[index + 1]\r\n        const nextCell = nextRow.children[col]\r\n        nextCell.setAttribute('rowspan', rowspan - 1)\r\n        nextCell.setAttribute('colspan', colspan)\r\n        nextCell.style.display = 'table-cell'\r\n    }\r\n\r\n    // 获取相关的列合并单元格\r\n    getRelatedMergedColCells (index) {\r\n        const {rows} = this\r\n        let relatedCellsArray = []\r\n        rows.forEach(row => {\r\n            const cells = row.children\r\n            cells.forEach((cell, cellIndex) => {\r\n                const {colspan} = getCellSpanProperty(cell)\r\n                if (colspan > 1 && index >= cellIndex && index <= cellIndex + colspan - 1) {\r\n                    relatedCellsArray.push(cell)\r\n                }\r\n            })\r\n        })\r\n        return relatedCellsArray\r\n    }\r\n\r\n    // 删除非第一列\r\n    delOtherCol (cell) {\r\n        const {colspan} = getCellSpanProperty(cell)\r\n        cell.setAttribute('colspan', colspan - 1)\r\n    }\r\n\r\n    // 删除第一列\r\n    delFirstCol (cell) {\r\n        const {rowspan, colspan} = getCellSpanProperty(cell)\r\n        const nextCell = cell.nextElementSibling\r\n        nextCell.setAttribute('colspan', colspan - 1)\r\n        nextCell.setAttribute('rowspan', rowspan)\r\n        nextCell.style.display = 'table-cell'\r\n    }\r\n\r\n    // 删除列\r\n    delCol (index) {\r\n        const {onDelCol} = this.opts\r\n        const {rows} = this\r\n        const relatedCellsArray = this.getRelatedMergedColCells(index)\r\n        relatedCellsArray.forEach(cell => {\r\n            const {col} = this.getCellIndex(cell)\r\n            if (col === index) {\r\n                this.delFirstCol(cell)\r\n            } else {\r\n                this.delOtherCol(cell)\r\n            }\r\n        })\r\n        rows.forEach(row => {\r\n            row.deleteCell(index)\r\n        })\r\n        this.delEmptyTable()\r\n        this.syncMaxRowAndColCount()\r\n        onDelCol && onDelCol(index)\r\n    }\r\n\r\n    // 设置表头\r\n    addTh () {\r\n        const {rows} = this\r\n        for (let i = this.indexStart.row; i <= this.indexEnd.row; i++) {\r\n            const tr = rows[i]\r\n            const {children} = tr\r\n            for (let j = this.indexStart.col; j <= this.indexEnd.col; j++) {\r\n                const cell = children[j]\r\n                cell.style.borderBottom = '2px solid #ccc'\r\n                cell.style.textAlign = 'center'\r\n                cell.style.backgroundColor = '#f1f1f1'\r\n                cell.style.fontWeight = 'bold'\r\n            }\r\n        }\r\n    }\r\n\r\n    // 取消表头\r\n    delTh () {\r\n        const {rows} = this\r\n        for (let i = this.indexStart.row; i <= this.indexEnd.row; i++) {\r\n            const tr = rows[i]\r\n            const {children} = tr\r\n            for (let j = this.indexStart.col; j <= this.indexEnd.col; j++) {\r\n                const cell = children[j]\r\n                if (cell.tagName === 'TH') {\r\n                    cell.outerHTML = cell.outerHTML.replace(/^<th>/, '<td>').replace(/<\\/th>$/, '</td>')\r\n                } else {\r\n                    cell.style.removeProperty('border-bottom')\r\n                    cell.style.removeProperty('text-align')\r\n                    cell.style.removeProperty('background-color')\r\n                    cell.style.removeProperty('font-weight')\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // 靠左\r\n    textAlignLeft () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'left'\r\n        })\r\n    }\r\n\r\n    // 居中\r\n    textAlignCenter () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'center'\r\n        })\r\n    }\r\n\r\n    // 靠右\r\n    textAlignRight () {\r\n        const selectedCells = this.getSelectedCells()\r\n        selectedCells.forEach(cell => {\r\n            cell.style.textAlign = 'right'\r\n        })\r\n    }\r\n\r\n    // 拷贝表格\r\n    copyTable () {\r\n        // console.log('复制表格，localStorage缓存表格数据，并执行document.execCommand(copy)命令')\r\n        this.removeClass()\r\n        removeTableActiveCls()\r\n        this.tableEle.classList.add('tableMergeCell_active')\r\n        window.localStorage.setItem('tableMergeCell_active', this.tableEle.outerHTML)\r\n        if (this.tableEle.classList.contains('tableMergeCell_active')) {\r\n            const htmlStr = ' '\r\n            const input = document.createElement('INPUT')\r\n            input.style.opacity  = 0\r\n            input.style.position = 'absolute'\r\n            input.style.left = '-100000px'\r\n            document.body.appendChild(input)\r\n            input.value = htmlStr\r\n            input.select()\r\n            input.setSelectionRange(0, htmlStr.length)\r\n            document.execCommand('copy')\r\n            document.body.removeChild(input)\r\n        }\r\n    }\r\n\r\n    // 返回是否全选表格\r\n    isActiveTable () {\r\n        const {rows} = this\r\n        const firstTr = rows[0]\r\n        const lastTr = rows[rows.length - 1]\r\n        const firstTd = firstTr.firstElementChild\r\n        const lastTd = lastTr.lastElementChild\r\n        if (firstTd == this.cellStart && lastTd == this.cellEnd) {\r\n            // console.log('select all')\r\n            // this.copyTable()\r\n            return true\r\n        }\r\n        return false\r\n    }\r\n\r\n    // 点击右键菜单项时\r\n    menuClick = (e) => {\r\n        const {target} = e\r\n        const color1 = window.getComputedStyle(target).color\r\n        const color2 = colorToRgb(this.opts.btnDisabledColor)\r\n        if (color1 === color2) return\r\n        const key = target.dataset.key\r\n        const {row, col} = this.getCellIndex(this.contextmenuCell)\r\n        switch (key) {\r\n            case 'copyTable':\r\n                this.copyTable()\r\n                break\r\n            case 'textAlignLeft':\r\n                this.textAlignLeft()\r\n                break\r\n            case 'textAlignCenter':\r\n                this.textAlignCenter()\r\n                break\r\n            case 'textAlignRight':\r\n                this.textAlignRight()\r\n                break\r\n            case 'addBackgroundColor':\r\n                this.addBackgroundColor()\r\n                break\r\n            case 'delBackgroundColor':\r\n                this.delBackgroundColor()\r\n                break\r\n            case 'delTable':\r\n                this.delTable()\r\n                break\r\n            case 'addRow':\r\n                this.addRow(row)\r\n                break\r\n            case 'delRow':\r\n                this.delRow(row)\r\n                break\r\n            case 'addCol':\r\n                this.addCol(col)\r\n                break\r\n            case 'delCol':\r\n                this.delCol(col)\r\n                break\r\n            case 'addTh':\r\n                this.addTh()\r\n                break\r\n            case 'delTh':\r\n                this.delTh()\r\n                break\r\n            case 'merge':\r\n                this.mergeCell()\r\n                break\r\n            case 'unMerge':\r\n                this.unMergeCell()\r\n                break\r\n        }\r\n        if (this.menuEle) {\r\n            this.menuEle.style.display = 'none'\r\n        }\r\n    }\r\n\r\n    mousedown = (e) => {\r\n        let {target, button} = e\r\n        if (button !== 0) return\r\n        if (target.tagName === 'IMG') return\r\n        if ((this.imgMasklayer && this.imgMasklayer.contains(target))) return\r\n        if (!this.tBody.contains(target)) return\r\n        if (this.tableIsInTable(target)) return\r\n        target = getTargetParentCell(target)\r\n        const {tagName} = target\r\n        if (tagName === 'TD' || tagName === 'TH') {\r\n            this.ready = true\r\n            this.cellStart = target\r\n            this.indexStart = this.getCellIndex(target)\r\n            this.removeClass()\r\n            this.addClass(target)\r\n        }\r\n    }\r\n\r\n    // 移除一些特征\r\n    removeSomeNoSelfIsClicked = (e) => {\r\n        const {target} = e\r\n        // 隐藏右键菜单\r\n        if (this.menuEle && !this.menuEle.contains(target)) {\r\n            this.menuEle.style.display = 'none'\r\n        }\r\n        // 未点击表格时（且未点击右键菜单的添加背景色）移除高亮单元格\r\n        const key = target.dataset.key\r\n        if (target && !this.tableEle.contains(target) && key !== 'addBackgroundColor' && !target.className.includes('tableMergeCell-contextmenu')) {\r\n            this.removeClass()\r\n        }\r\n        // 移除背景色设置输入框\r\n        if (this.colorPicker) {\r\n            this.colorPicker.remove()\r\n        }\r\n        if (this.imgMasklayer && !this.imgMasklayer.contains(target)) {\r\n            this.imgMasklayer.removeEventListener('click', this.handleImgBtn, false)\r\n            this.imgMasklayer.removeEventListener('keydown', this.handleImgEnter, false)\r\n            this.imgMasklayer.insertAdjacentElement('beforebegin', this.selectedImg)\r\n            this.imgMasklayer.remove()\r\n        }\r\n        // 移除复制表格时的边框\r\n        if (target && !this.tableEle.contains(target)) {\r\n            removeTableActiveCls()\r\n        }\r\n    }\r\n\r\n    mousemove = (e) => {\r\n        let {target, button} = e\r\n        target = getTargetParentCell(target)\r\n        if (button === 0 && this.ready && this.tBody.contains(target)) {\r\n            window.requestAnimationFrame(() => {\r\n                this.cellEnd = target\r\n                this.indexEnd = this.getCellIndex(target)\r\n                const selection = window.getSelection()\r\n                if (this.cellStart !== this.cellEnd) {\r\n                    selection.collapseToEnd()\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    // 高亮选取的单元格\r\n    highlightRangeCells () {\r\n        const {rows} = this\r\n        for (let i = this.indexStart.row; i <= this.indexEnd.row; i++) {\r\n            const tr = rows[i]\r\n            const {children} = tr\r\n            for (let j = this.indexStart.col; j <= this.indexEnd.col; j++) {\r\n                const cell = children[j]\r\n                this.addClass(cell)\r\n            }\r\n        }\r\n    }\r\n\r\n    // 反向选取处理\r\n    handleIndexSerial () {\r\n        const {row: rowStart, col: colStart} = this.indexStart\r\n        const {row: rowEnd, col: colEnd} = this.indexEnd\r\n        if (rowStart > rowEnd) {\r\n            this.indexStart.row = rowEnd\r\n            this.indexEnd.row = rowStart\r\n        }\r\n        if (colStart > colEnd) {\r\n            this.indexStart.col = colEnd\r\n            this.indexEnd.col = colStart\r\n        }\r\n    }\r\n\r\n    // 更新选取范围索引\r\n    updateIndex () {\r\n        const {rows, indexStart, indexEnd} = this\r\n        this.indexStart.row = getRowStart(rows, indexStart.row, indexEnd.row, indexStart.col, indexEnd.col)\r\n        this.indexStart.col = getColStart(rows, indexStart.row, indexEnd.row, indexStart.col, indexEnd.col)\r\n        this.indexEnd.row = getRowEnd(rows, indexStart.row, indexEnd.row, indexStart.col, indexEnd.col)\r\n        this.indexEnd.col = getColEnd(rows, indexStart.row, indexEnd.row, indexStart.col, indexEnd.col)\r\n    }\r\n\r\n    // 使选取的单元格扩展成方型\r\n    makeSelectedCellsToRect () {\r\n        if (this.indexEnd.row < 0 || this.indexEnd.col < 0) return\r\n        this.handleIndexSerial()\r\n        let count = 1, maxLoop = 10\r\n        while (count <= maxLoop) {\r\n            const {row: _rowStart, col: _colStart} = this.indexStart\r\n            const {row: _rowEnd, col: _colEnd} = this.indexEnd\r\n            this.updateIndex()\r\n            if (this.indexStart.row === _rowStart && \r\n                this.indexEnd.row === _rowEnd && \r\n                this.indexStart.col === _colStart && \r\n                this.indexEnd.col === _colEnd) {\r\n                count = maxLoop\r\n            }\r\n            count++\r\n        }\r\n        this.highlightRangeCells()\r\n    }\r\n\r\n    mouseup = (e) => {\r\n        let {target, button} = e\r\n        if (button === 0 && this.ready) {\r\n            target = getTargetParentCell(target)\r\n            if (this.tBody.contains(target)) {\r\n                this.cellEnd = target\r\n                this.indexEnd = this.getCellIndex(target)\r\n                this.addClass(target)\r\n                this.makeSelectedCellsToRect()\r\n            }\r\n            this.ready = false\r\n        }\r\n    }\r\n\r\n    tableClick = (e) => {\r\n        const {target, button} = e\r\n        const {tagName} = target\r\n        if (button === 0 && this.tableEle.contains(target)) {\r\n            e.stopPropagation()\r\n        }\r\n        if (tagName === 'A') {\r\n            const href = target.getAttribute('href')\r\n            window.open(href)\r\n        }\r\n        if (tagName === 'IMG') {\r\n            this.handleImg(target)\r\n        }\r\n    }\r\n\r\n    contextmenu = (e) => {\r\n        const {target, clientX, clientY} = e\r\n        if (target.tagName === 'IMG') return\r\n        e.preventDefault()\r\n        if (this.tableIsInTable(target)) return\r\n        if (!this.menuEle) {\r\n            this.menuEle = document.createElement('ul')\r\n            this.menuEle.classList.add('tableMergeCell-contextmenu')\r\n            this.menuEle.addEventListener('click', this.menuClick, false)\r\n\r\n            this.menus.forEach(item => {\r\n                const li = document.createElement('li')\r\n                const {name, key} = item\r\n                li.textContent = name\r\n                li.dataset.key = key\r\n                this[`btn_${key}`] = li\r\n                this.menuEle.appendChild(li)\r\n            })\r\n\r\n            document.body.appendChild(this.menuEle)\r\n            const {width, height} = this.menuEle.getBoundingClientRect()\r\n            this.menuEle.dataset.width = width\r\n            this.menuEle.dataset.height = height\r\n        }\r\n        \r\n        const {clientWidth, clientHeight} = document.documentElement\r\n        const {width, height} = this.menuEle.dataset\r\n        const diffX = clientWidth - clientX\r\n        const diffY = clientHeight - clientY\r\n        if (diffX < width) {\r\n            this.menuEle.style.marginLeft = `-${width}px`\r\n        } else {\r\n            this.menuEle.style.marginLeft = 'auto'\r\n        }\r\n        if (diffY < height) {\r\n            this.menuEle.style.marginTop = `-${height}px`\r\n        } else {\r\n            this.menuEle.style.marginTop = 'auto'\r\n        }\r\n        this.menuEle.style.top = `${clientY}px`\r\n        this.menuEle.style.left = `${clientX}px`\r\n        this.menuEle.style.display = 'block'\r\n        this.contextmenuCell = getTargetParentCell(target)\r\n        this.handleSomeMenuBtns(target)\r\n    }\r\n\r\n    copy = (e) => {\r\n        const selectionStr = window.getSelection().toString()\r\n        const isActiveTable = this.isActiveTable()\r\n        const copyedCellsArray = this.getSelectedCells(true)\r\n        removeTableActiveCls()\r\n        if (selectionStr) {\r\n            e.stopPropagation()\r\n            // console.log('表格监听复制命令，清空拷贝的单元格数据')\r\n        } else if (isActiveTable) {\r\n            this.copyTable()\r\n        } else if (Array.isArray(copyedCellsArray)) {\r\n            e.stopPropagation()\r\n            e.preventDefault()\r\n            // console.log('复制单元格并清空剪切版')\r\n            if (e.clipboardData) {\r\n                e.clipboardData.setData('text/plain', '')\r\n            } else if (window.clipboardData) {\r\n                window.clipboardData.setData('text', '')\r\n            }\r\n            // 二维数组记录复制的单元格\r\n            TableMergeCell.copyedCellsArray = copyedCellsArray\r\n        }\r\n    }\r\n\r\n    handlePaste (originCells) {\r\n        if (!Array.isArray(originCells)) {\r\n            throw new Error('请传入复制的单元格')\r\n        }\r\n        const {rows} = this\r\n        for (let i1 = 0, i2 = this.indexStart.row; i1 < originCells.length; i1++, i2++) {\r\n            const tr_o = originCells[i1]\r\n            const tr_t = rows[i2]\r\n            if (!tr_t) break\r\n            const children_t = tr_t.children\r\n            for (let j1 = 0, j2 = this.indexStart.col; j1 < tr_o.length; j1++, j2++) {\r\n                const cell_o = tr_o[j1]\r\n                const cell_t = children_t[j2]\r\n                if (!cell_t) continue\r\n                if (typeof cell_o === 'string') {\r\n                    cell_t.innerText = cell_o\r\n                    continue\r\n                }\r\n                const {display: display_t} = cell_t.style\r\n                const {display: display_o} = cell_o.style\r\n                if (display_t === display_o) {\r\n                    cell_t.innerHTML = cell_o.innerHTML\r\n                    cell_t.setAttribute('style', cell_o.getAttribute('style'))\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    paste = (e) => {\r\n        const clipboardData = e.clipboardData || window.clipboardData\r\n        const data = clipboardData.getData('text')\r\n        if (clipboardData.items.length > 2) {\r\n            e.preventDefault()\r\n            e.stopPropagation()\r\n            const excelData = handleExcelData(data)\r\n            this.handlePaste(excelData)\r\n        } else if (TableMergeCell.copyedCellsArray.length) {\r\n            if (!data) {\r\n                e.preventDefault()\r\n                this.handlePaste(TableMergeCell.copyedCellsArray)\r\n                this.indexStart = getIndexDefaultValue()\r\n                this.indexEnd = getIndexDefaultValue()\r\n            } \r\n        }\r\n    }\r\n\r\n    keydown = (e) => {\r\n        const {key} = e\r\n        if (key === 'Delete') {\r\n            const selectedCells = this.tableEle.querySelectorAll('.tableMergeCell-selected')\r\n            selectedCells.forEach(cell => {\r\n                cell.innerHTML = ''\r\n            })\r\n        }\r\n    }\r\n\r\n    handleImg (target) {\r\n        this.selectedImg = target\r\n        // this.selectedImg.style.removeProperty('max-width')\r\n        const {width, height} = this.selectedImg.getBoundingClientRect()\r\n        this.imgOriginWidth = width\r\n        this.selectedImg.insertAdjacentHTML('beforebegin', `\r\n            <div contenteditable=\"false\" class=\"tableMergeCell-imgTooltip\" style=\"width: ${width}px; height: ${height}px;\">\r\n                <span class=\"tableMergeCell-imgInputWrap\">\r\n                    <input value=\"${width}px\" class=\"tableMergeCell-imgInput\" title=\"调整图片至特定宽度\">\r\n                    <button type=\"button\" class=\"tableMergeCell-imgBtn\">确定</button>\r\n                </span>\r\n            </div>`\r\n        )\r\n        this.imgMasklayer = this.tableEle.querySelector('.tableMergeCell-imgTooltip')\r\n        this.imgMasklayer.insertAdjacentElement('afterbegin', this.selectedImg)\r\n        if (this.imgMasklayer) {\r\n            this.imgMasklayer.addEventListener('click', this.handleImgBtn, false)\r\n            this.imgMasklayer.addEventListener('keydown', this.handleImgEnter, false)\r\n        }\r\n    }\r\n\r\n    handleImgEnter = (e) => {\r\n        const {key, target} = e\r\n        if (key === 'Enter' && target.className.includes('tableMergeCell-imgInput')) {\r\n            this.handleImgWidth(target)\r\n        }\r\n    }\r\n\r\n    handleImgBtn = (e) => {\r\n        const {target} = e\r\n        if (target.className.includes('tableMergeCell-imgBtn')) {\r\n            const preElement = target.previousElementSibling\r\n            this.handleImgWidth(preElement)\r\n        }\r\n    }\r\n\r\n    handleImgWidth (inputEle) {\r\n        const value = inputEle.value\r\n        const {imgMinWidth} = this.opts\r\n        let newWidth\r\n        if (/^\\d+/.test(value)) {\r\n            newWidth = Number.parseInt(value)\r\n        } else {\r\n            inputEle.value = `${this.imgOriginWidth}px`\r\n        }\r\n        if (newWidth < imgMinWidth) {\r\n            Modal && Modal.confirm({\r\n                title: '提示',\r\n                content: `图片最小宽为${imgMinWidth}像素！`,\r\n                zIndex: 10009,\r\n            })\r\n            return\r\n        }\r\n        const getTargetParentCell = (target) => {\r\n            while (target.tagName !== 'TD' && target.parentNode) {\r\n                target = target.parentNode\r\n            }\r\n            return target\r\n        }\r\n        const td = getTargetParentCell(this.imgMasklayer)\r\n        if (td && td.tagName === 'TD') {\r\n            const {width, paddingRight, paddingLeft, borderRightWidth} = window.getComputedStyle(td)\r\n            const maxW = Number.parseFloat(width) - Number.parseFloat(paddingRight) - Number.parseFloat(paddingLeft) - Number.parseFloat(borderRightWidth)\r\n            if (newWidth > maxW) {\r\n                Modal && Modal.confirm({\r\n                    title: '提示',\r\n                    content: '图片的宽不能超过单元格的宽，请先调整列宽到合适的宽度！',\r\n                    zIndex: 10009,\r\n                })\r\n                return\r\n            }\r\n        }\r\n        if (typeof newWidth === 'number' && newWidth !== this.imgOriginWidth) {\r\n            this.selectedImg.style.width = `${newWidth}px`\r\n            const {width, height} = this.selectedImg.getBoundingClientRect()\r\n            this.imgMasklayer.style.width = `${width}px`\r\n            this.imgMasklayer.style.height = `${height}px`\r\n        }\r\n        if (this.imgMasklayer) {\r\n            this.imgMasklayer.removeEventListener('click', this.handleImgBtn, false)\r\n            this.imgMasklayer.removeEventListener('keydown', this.handleImgEnter, false)\r\n            this.imgMasklayer.insertAdjacentElement('beforebegin', this.selectedImg)\r\n            this.imgMasklayer.remove()\r\n        }\r\n    }\r\n\r\n    addEvent () {\r\n        this.tableEle.addEventListener('mousedown', this.mousedown, false)\r\n        window.addEventListener('mousemove', this.mousemove, false)\r\n        window.addEventListener('mouseup', this.mouseup, false)\r\n        this.tableEle.addEventListener('click', this.tableClick, false)\r\n        this.tableEle.addEventListener('contextmenu', this.contextmenu, false)\r\n        this.tableEle.addEventListener('copy', this.copy, false)\r\n        this.tableEle.addEventListener('paste', this.paste, false)\r\n        window.addEventListener('mousedown', this.removeSomeNoSelfIsClicked, true)\r\n        window.addEventListener('keydown', this.keydown, true)\r\n    }\r\n\r\n    removeEvent () {\r\n        this.tableEle.removeEventListener('mousedown', this.mousedown, false)\r\n        window.removeEventListener('mousemove', this.mousemove, false)\r\n        window.removeEventListener('mouseup', this.mouseup, false)\r\n        this.tableEle.removeEventListener('click', this.tableClick, false)\r\n        this.tableEle.removeEventListener('contextmenu', this.contextmenu, false)\r\n        this.tableEle.removeEventListener('copy', this.copy, false)\r\n        this.tableEle.removeEventListener('paste', this.paste, false)\r\n        window.removeEventListener('mousedown', this.removeSomeNoSelfIsClicked, true)\r\n        window.removeEventListener('keydown', this.keydown, true)\r\n    }\r\n}\r\n","/* eslint-disable */\r\nconst defaults = {\r\n    colMinWidth: 50, // 列最小宽度\r\n}\r\n\r\nexport default class ColumnResizer {\r\n    static getTargetParentElement (target, querySelector) {\r\n        while (target.className && !target.className.includes(querySelector) && target.parentNode) {\r\n            target = target.parentNode\r\n        }\r\n        return target\r\n    }\r\n\r\n    constructor (tableEle, options = {}) {\r\n        this.opts = Object.assign({}, defaults, options)\r\n        this.isExcelTable = false\r\n        this.tableEle = tableEle\r\n        this.colgroup = tableEle.querySelector('colgroup')\r\n        this.thead = tableEle.querySelector('thead')\r\n        this.wangEditorEditableContainer = ColumnResizer.getTargetParentElement(tableEle, 'w-e-text')\r\n        this.handshank = null\r\n        this.handshankCls = 'tableMergeCell-handshank'\r\n        this.subline = 'tableMergeCell-subline'\r\n        this.handshankHover = 'tableMergeCell-handshank-hover'\r\n        this.average = 200\r\n        this.init()\r\n    }\r\n\r\n    // 初始化\r\n    init () {\r\n        if (!this.tableEle || this.tableEle.ELEMENT_NODE !== 1 || this.tableEle.tagName !== 'TABLE') {\r\n            throw new Error('请传入table元素！')\r\n        }\r\n        this.initTable()\r\n        this.handleExcelTable()\r\n        this.initTheadAndColgroup()\r\n        this.updateAverage()\r\n        this.setColWidth()\r\n        this.handleTableWidth()\r\n        this.handleResizeHandShank()\r\n        this.triggerFirstCellHeight()\r\n        this.addEvent()\r\n    }\r\n\r\n    // 初始化表格\r\n    initTable () {\r\n        this.tableEle.removeAttribute('width')\r\n        const parentNode = this.tableEle.parentNode\r\n        if (parentNode && parentNode.className.includes('tableMergeCell-tempContainer')) {\r\n            parentNode.insertAdjacentElement('beforebegin', this.tableEle)\r\n        }\r\n        const nextElementSibling = this.tableEle.nextElementSibling\r\n        if (nextElementSibling && nextElementSibling.className && nextElementSibling.className.includes('tableMergeCell-tempContainer')) {\r\n            nextElementSibling.remove()\r\n        }\r\n    }\r\n\r\n    // 非页面插入的表格\r\n    handleExcelTable () {\r\n        const cellpadding = this.tableEle.getAttribute('cellpadding')\r\n        if (!cellpadding) {\r\n            if (this.colgroup) {\r\n                this.colgroup.remove()\r\n                this.colgroup = null\r\n            }\r\n            this.isExcelTable = true\r\n            this.tableEle.setAttribute('cellpadding', 0)\r\n        }\r\n    }\r\n\r\n    // 初始化thead和colgroup\r\n    initTheadAndColgroup () {\r\n        const tbody = this.tableEle.tBodies[0]\r\n        const {rows} = tbody\r\n        const colCount = rows[0].childElementCount\r\n        if (this.colgroup && this.colgroup.children && this.colgroup.children.length !== colCount) {\r\n            this.colgroup.remove()\r\n            this.colgroup = null\r\n        }\r\n        if (!this.colgroup) {\r\n            const colgroup = document.createElement('colgroup')\r\n            for (let i = 0 ; i < colCount; i++) {\r\n                const col = document.createElement('col')\r\n                colgroup.appendChild(col)\r\n            }\r\n            this.colgroup = tbody.insertAdjacentElement('beforebegin', colgroup)\r\n        }\r\n        if (!this.thead) {\r\n            const thead = document.createElement('thead')\r\n            const tr = document.createElement('tr')\r\n            tr.className = 'tableMergeCell-handshank-container'\r\n            for (let i = 0 ; i < colCount; i++) {\r\n                const th = document.createElement('th')\r\n                tr.appendChild(th)\r\n            }\r\n            thead.appendChild(tr)\r\n            this.thead = tbody.insertAdjacentElement('beforebegin', thead)\r\n        }\r\n    }\r\n\r\n    // 更新平均值\r\n    updateAverage () {\r\n        if (this.isExcelTable) {\r\n            const {colMinWidth} = this.opts\r\n            const {children} = this.colgroup\r\n            const col = children[0]\r\n            this.average = Math.max(col.getBoundingClientRect().width, colMinWidth * 2)\r\n        } else {\r\n            const width = this.wangEditorEditableContainer.clientWidth - 20\r\n            const {rows} = this.tableEle.tBodies[0]\r\n            this.colCount = rows[0].childElementCount\r\n            this.average = Math.floor(width / this.colCount)\r\n        }\r\n    }\r\n\r\n    // 初始化col默认宽\r\n    setColWidth () {\r\n        const {children} = this.colgroup\r\n        children.forEach(col => {\r\n            const width = col.style.width\r\n            if (!width) {\r\n                col.style.width = `${this.average}px`\r\n            } \r\n        })\r\n    }\r\n\r\n    // 获取col合计值\r\n    getColTotal () {\r\n        const {children} = this.colgroup\r\n        let total = 0\r\n        children.forEach(col => {\r\n            let width = col.style.width\r\n            if (width) {\r\n                const count = Number.parseInt(width)\r\n                if (typeof count === 'number') {\r\n                    total += count\r\n                }\r\n            } \r\n        })\r\n        return total\r\n    }\r\n\r\n    // 设置表格默认宽\r\n    handleTableWidth () {\r\n        if (!this.tableEle.style.width) {\r\n            let width = 500\r\n            if (this.isExcelTable) {\r\n                const totalWidth = this.getColTotal()\r\n                width = totalWidth ? totalWidth : Math.floor(this.tableEle.getBoundingClientRect().width)\r\n            } else {\r\n                width = this.average * this.colCount\r\n            }\r\n            this.setTableWidth(width)\r\n        }\r\n    }\r\n\r\n    // 增加列调整手柄\r\n    handleResizeHandShank () {\r\n        const cells = this.thead.children[0].children\r\n        cells.forEach((cell, index) => {\r\n            const handshank = cell.querySelector(`.${this.handshankCls}`)\r\n            handshank && handshank.remove()\r\n            const i = `<i data-col=\"${index}\" contenteditable=\"false\" class=\"${this.handshankCls}\"></i>`\r\n            cell.insertAdjacentHTML('beforeend', i)\r\n        })\r\n    }\r\n\r\n    // 更新列手柄高\r\n    triggerFirstCellHeight () {\r\n        setTimeout(() => {\r\n            const evt = new CustomEvent('input', {\r\n                bubbles: true,\r\n                cancelable: false,\r\n            })\r\n            this.tableEle.dispatchEvent(evt)\r\n        }, 1000)\r\n    }\r\n\r\n    // 添加一个默认列\r\n    addOneCol (index) {\r\n        const cols = this.colgroup.children\r\n        const ths = this.thead.children[0].children\r\n        const col = document.createElement('col')\r\n        const th = document.createElement('th')\r\n        col.style.width = `${this.average}px`\r\n        cols[index].insertAdjacentElement('beforebegin', col)\r\n        ths[index].insertAdjacentElement('beforebegin', th)\r\n    }\r\n\r\n    // 增加列\r\n    handleAddCol = (index) => {\r\n        this.addOneCol(index)\r\n        this.handleResizeHandShank()\r\n        const colsWidth = this.getColsWidth()\r\n        this.setTableWidth(colsWidth)\r\n    }\r\n\r\n    // 删除列\r\n    handleDelCol (index) {\r\n        const cols = this.colgroup.children\r\n        const ths = this.thead.children[0].children\r\n        cols[index].remove()\r\n        ths[index].remove()\r\n        this.handleResizeHandShank()\r\n        const colsWidth = this.getColsWidth()\r\n        this.setTableWidth(colsWidth)\r\n    }\r\n\r\n    // 增加辅助线\r\n    addSubline () {\r\n        this.handshank.classList.add(this.subline)\r\n    }\r\n\r\n    // 设置表格宽\r\n    setTableWidth (width) {\r\n        if (typeof width !== 'number') {\r\n            throw new Error('表格宽的参数为Number类型！')\r\n        }\r\n        width = width.toFixed()\r\n        this.tableEle.style.width = `${width}px`\r\n    }\r\n\r\n    // 获取列宽和\r\n    getColsWidth () {\r\n        const {children} = this.colgroup\r\n        const arr = Array.from(children).map(col => {\r\n            const width = col.style.width\r\n            return Number.parseInt(width)\r\n        })\r\n        const width = arr.reduce((acc, cur) => {\r\n            return acc + cur\r\n        })\r\n        return width\r\n    }\r\n\r\n    mousedown = (e) => {\r\n        const {target, button, clientX} = e\r\n        if (this.tableEle.contains(target) && button === 0 && target.className.includes(this.handshankCls)) {\r\n            this.handshank = target\r\n            this.handshank.classList.add(this.handshankHover)\r\n            this.clientX = clientX\r\n            this.addSubline()\r\n        } else {\r\n            this.handshank = null\r\n        }\r\n    }\r\n\r\n    mousemove = (e) => {\r\n        if (this.handshank) {\r\n            e.preventDefault()\r\n            const {clientX} = e\r\n            this.diff = clientX - this.clientX\r\n            this.handshank.style.transform = `translateX(${this.diff}px)`\r\n        }\r\n    }\r\n\r\n    mouseup = (e) => {\r\n        if (this.handshank) {\r\n            const {clientX} = e\r\n            const index = this.handshank.dataset.col\r\n            const currentCol = this.colgroup.children[index]\r\n            if (currentCol) {\r\n                const width = Number.parseInt(currentCol.style.width)\r\n                const calcWidth = width + this.diff\r\n                const {colMinWidth} = this.opts\r\n                const newWidth = Math.max(colMinWidth, calcWidth)\r\n                if (this.tableEle.contains(this.handshank) && clientX - this.clientX !== 0) {\r\n                    currentCol.style.width = `${newWidth}px`\r\n                }\r\n            }\r\n            this.handshank.style.removeProperty('transform')\r\n            this.handshank.classList.remove(this.handshankHover, this.subline)\r\n            this.handshank = null\r\n            const colsWidth = this.getColsWidth()\r\n            this.setTableWidth(colsWidth)\r\n        }\r\n    } \r\n\r\n    // 同步列控制手柄高度\r\n    input = () => {\r\n        const tbody = this.tableEle.tBodies[0]\r\n        const row0 = tbody.rows[0]\r\n        const cell = row0.children[0]\r\n        const {height} = cell.getBoundingClientRect()\r\n        const cells = this.thead.children[0].children\r\n        if (height > 30) {\r\n            cells.forEach(cell => {\r\n                const i = cell.querySelector(`.${this.handshankCls}`)\r\n                if (i) {\r\n                    i.style.height = `${height}px`\r\n                }\r\n            })\r\n        } else {\r\n            cells.forEach(cell => {\r\n                const i = cell.querySelector(`.${this.handshankCls}`)\r\n                i && i.style.removeProperty('height')\r\n            })\r\n        }\r\n    }\r\n\r\n    destroy () {\r\n        this.removeEvent()\r\n    }\r\n\r\n    addEvent () {\r\n        window.addEventListener('mousedown', this.mousedown, false)\r\n        window.addEventListener('mousemove', this.mousemove, false)\r\n        window.addEventListener('mouseup', this.mouseup, false)\r\n        this.wangEditorEditableContainer.addEventListener('input', this.input, false)\r\n    }\r\n\r\n    removeEvent () {\r\n        window.removeEventListener('mousedown', this.mousedown, false)\r\n        window.removeEventListener('mousemove', this.mousemove, false)\r\n        window.removeEventListener('mouseup', this.mouseup, false)\r\n        this.wangEditorEditableContainer.removeEventListener('input', this.input, false)\r\n    }\r\n}\r\n","/* eslint-disable */\r\nimport TableMergeCell from './tableMergeCell/tableMergeCell'\r\nimport ColumnResizer from './columnResizer/columnResizer'\r\n\r\nimport {\r\n    handleOfficeTable,\r\n    handleTh,\r\n    removeTableActiveCls,\r\n    getAddedTable,\r\n    getAddedImg,\r\n} from './tool'\r\n\r\nexport const wangEditorTableExtend = {\r\n    mounted() {\r\n        this.$nextTick(() => {\r\n            this.textElem = this.editor.$textElem.elems[0]\r\n            this.textElem.addEventListener('paste', this.pasteTable, true)\r\n            this.tableObserve()\r\n        })\r\n    },\r\n    methods: {\r\n        pasteTable (e) {\r\n            const clipboardData = e.clipboardData || window.clipboardData\r\n            const textPlain = clipboardData.getData('text')\r\n            const textHtml = clipboardData.getData('text/html')\r\n            \r\n            const getImageItem = (clipboardData) => {\r\n                /*\r\n                 * 图片types: ['text/html', 'Files']\r\n                 * 图片DataTransferItem： {kind: 'file', type: 'image/png'}\r\n                 * 表格types： \r\n                 * ppt: ['text/html', 'Files']\r\n                 * excel: ['text/plain', 'text/html', 'text/rtf', 'Files']\r\n                 * word: ['text/plain', 'text/html', 'text/rtf']\r\n                */\r\n                const {items, types} = clipboardData\r\n                let item = null\r\n                for (let i = 0; i < types.length; i++) {\r\n                    if (types[i] === 'Files') {\r\n                        item = items[i]\r\n                        break\r\n                    }\r\n                }\r\n                return item\r\n            }\r\n\r\n            const officeXmlns = 'xmlns=\"http://www.w3.org/TR/REC-html40'\r\n            const isExcel = textHtml && textHtml.includes(officeXmlns) && textHtml.includes('office:excel')\r\n            const isWord = textHtml && textHtml.includes(officeXmlns) && textHtml.includes('office:word')\r\n            const isPpt = textHtml && textHtml.includes(officeXmlns) && !textHtml.includes('office:excel') && !textHtml.includes('office:word')\r\n\r\n            const imageItem = getImageItem(clipboardData)\r\n            const isPasteImg = imageItem && imageItem.kind === 'file' && imageItem.type.match(/^image\\//i) && !isExcel && !isWord && !isPpt\r\n            \r\n            if (textPlain === ' ') {\r\n                // console.log('粘贴整个表格')\r\n                e.stopPropagation()\r\n                e.preventDefault()\r\n                const tableMergeCell_active = window.localStorage.getItem('tableMergeCell_active') || ''\r\n                if (!tableMergeCell_active.includes('tableMergeCell_active')) return\r\n                const tempDiv = document.createElement('div')\r\n                tempDiv.insertAdjacentHTML('beforeend', tableMergeCell_active)\r\n                const table = tempDiv.firstElementChild\r\n\r\n                const selection = window.getSelection()\r\n                if (!selection.rangeCount) return false\r\n                const range = selection.getRangeAt(0)\r\n                range.insertNode(table)\r\n                removeTableActiveCls()\r\n                selection.collapseToEnd()\r\n\r\n                const getParentP = (target) => {\r\n                    while (target.tagName !== 'P' && target.parentNode) {\r\n                        target = target.parentNode\r\n                    }\r\n                    return target\r\n                }\r\n                const p = getParentP(table)\r\n                if (!p || p.tagName !== 'P') return\r\n                p.insertAdjacentElement('afterend', table)\r\n            } else if (isPasteImg) {\r\n                // console.log('paste image', imageItem)\r\n                /*const s = navigator.userAgent\r\n                const m = s.match(/Chrome\\/(\\d+)/)\r\n                if (m) {\r\n                    const version = m[1] * 1\r\n                    if (version === 96) {\r\n                        e.stopPropagation()\r\n                    }\r\n                }*/ \r\n            } else if (isPpt) {\r\n                // console.log('from ppt')\r\n            }\r\n        },\r\n        initTableInteraction() {\r\n            if (!this.$refs.editor) {\r\n                throw new Error('请为wangEditor富文本容器元素提供ref=\"editor\"属性')\r\n            }\r\n            const tableIsInTable = (target) => {\r\n                while (target && target.parentNode && target.parentNode.tagName !== 'TABLE') {\r\n                    target = target.parentNode\r\n                }\r\n                return target.parentNode\r\n            }\r\n            this.tables = this.$refs.editor.querySelectorAll('.w-e-text table')\r\n            this.tables.forEach(table => {\r\n                if (!tableIsInTable(table)) {\r\n                    if (!table.tableMergeCellInstance) {\r\n                        table.tableMergeCellInstance = new TableMergeCell(table, {\r\n                            onAddCol: (index) => {\r\n                                table.tableColumnResizerInstance.handleAddCol(index)\r\n                            },\r\n                            onDelCol: (index) => {\r\n                                table.tableColumnResizerInstance.handleDelCol(index)\r\n                            },\r\n                        })\r\n                    }\r\n                    if (!table.tableColumnResizerInstance) {\r\n                        table.tableColumnResizerInstance = new ColumnResizer(table)\r\n                    }\r\n                }\r\n            })\r\n        },\r\n        tableObserve() {\r\n            const callback = (mutationsList) => {\r\n                for (const mutation of mutationsList) {\r\n                    const { addedNodes } = mutation\r\n                    if (!addedNodes.length) continue\r\n                    const table = getAddedTable(mutation)\r\n                    const imgSrc = getAddedImg(mutation)\r\n                    if (table) {\r\n                        handleOfficeTable(table)\r\n                        handleTh(table)\r\n                        this.initTableInteraction()\r\n                    } \r\n                    if (imgSrc) {\r\n                        const img = this.textElem.querySelector(`[src=\"${imgSrc}\"]`)\r\n                        img && img.remove()\r\n                    }\r\n                }\r\n            }\r\n            this.observer = new MutationObserver(callback)\r\n            this.observer.observe(this.textElem, {\r\n                childList: true,\r\n                subtree: true,\r\n            })\r\n        },\r\n    },\r\n    beforeDestroy() {\r\n        this.tables && this.tables.forEach(table => {\r\n            if (table.tableMergeCellInstance) {\r\n                table.tableMergeCellInstance.destroy()\r\n                table.tableMergeCellInstance = null\r\n            }\r\n            if (table.tableColumnResizerInstance) {\r\n                table.tableColumnResizerInstance.destroy()\r\n                table.tableColumnResizerInstance = null\r\n            }\r\n        })\r\n        this.tables = null\r\n        this.textElem.removeEventListener('paste', this.pasteTable, true)\r\n        this.observer && this.observer.disconnect()\r\n    },\r\n}","import E from 'wangeditor'\r\n\r\nexport class FormulaMenu extends E.BtnMenu {\r\n    constructor (editor) {\r\n        const $elem = E.$(\r\n            `<div class=\"w-custom-menu\" data-title=\"新增公式参数\">\r\n                <i>新增公式参数</i>\r\n            </div>\r\n            `\r\n        )\r\n        super($elem, editor)\r\n    }\r\n    clickHandler () {\r\n        const event = new CustomEvent('addFormula')\r\n        window.dispatchEvent(event)\r\n    }\r\n    tryChangeActive () {\r\n        this.active()\r\n    }\r\n}","<template>\r\n    <div>\r\n        <div ref=\"editor\">\r\n            <div v-html=\"value\"></div>\r\n        </div>\r\n\r\n        <!-- <button type=\"button\" id=\"btn1\" @click=\"getHtml\">获取html</button>\r\n        <button type=\"button\" id=\"btn2\" @click=\"setHtml\">设置html</button>\r\n        <div ref=\"newHtml\" class=\"newHtml\"></div> -->\r\n\r\n        <formula-pop \r\n            :visible.sync=\"visible\" \r\n            :type='type'\r\n            :latex=\"latex\"\r\n            @confirm=\"confirm\" \r\n        />\r\n\r\n        <table class=\"testTable\">\r\n            <tr>\r\n                <th>公式</th>\r\n                <th>操作</th>\r\n            </tr>\r\n            <tr v-for=\"(item, index) in latexArray\" :key=\"index\">\r\n                <td v-html=\"latexToHtml(item.latex)\"></td>\r\n                <td @click=\"editMath(item.latex, index)\">编辑</td>\r\n            </tr>\r\n        </table>\r\n    </div>\r\n</template>\r\n<script>\r\n/* eslint-disable */\r\nimport FormulaPop from '@/components/FormulaPop'\r\nimport E from 'wangeditor'\r\nimport { wangEditorTableExtend } from '@/assets/mixin'\r\nimport { FormulaMenu } from '@/assets/wangEditorMenuExtention'\r\nexport default {\r\n    name: 'about',\r\n    mixins: [wangEditorTableExtend],\r\n    components: {\r\n        FormulaPop,\r\n    },\r\n    data () {\r\n        return {\r\n            value: '',\r\n            visible: false,\r\n            latex: '',\r\n            type: 'add',\r\n        }\r\n    },\r\n    created () {\r\n        setTimeout(() => {\r\n            this.value = `\r\n                \r\n            `\r\n        }, 1000)\r\n\r\n        // $(htmlStr).mathquill('editable').mathquill('latex')\r\n\r\n        this.latexArray = [\r\n            /*{\r\n                latex: '\\\\frac{1}{2}'\r\n            },\r\n            {\r\n                latex: '\\\\sqrt{2}'\r\n            },\r\n            {\r\n                latex: '\\\\frac{32}{123}+x_{aa4}'\r\n            },*/\r\n        ]\r\n    },\r\n    mounted() {\r\n        this.initEditor()\r\n        this.listenMenuClick()\r\n    },\r\n    beforeDestroy () {\r\n        window.removeEventListener('addFormula', this.addMath, true)\r\n    },\r\n    methods: {\r\n        latexToHtml (latex) {\r\n            const html = window.$ && window.$(\"<span></span>\").mathquill('editable').mathquill('write', latex).mathquill('html')\r\n            return `<span class=\"mathquill-rendered-math\">${html}</span>`\r\n        },\r\n        addMath () {\r\n            this.type = 'add'\r\n            this.latex = ''\r\n            this.visible = true\r\n        },\r\n        editMath (str, index) {\r\n            this.type = 'edit'\r\n            this.latex = str\r\n            this.currentIndex = index\r\n            this.visible = true\r\n        },\r\n        confirm (latex) {\r\n            if (this.type === 'add') {\r\n                console.log('add')\r\n                let html = window.$(\"<span></span>\").mathquill('editable').mathquill('write', latex).mathquill('html')\r\n                html = `<span contenteditable=\"false\" class=\"mathquill-rendered-math\">${html}</span>`\r\n                let range = this.editor.selection.getRange()\r\n                range.insertNode($(html).get(0))\r\n                range.collapse()\r\n                this.latexArray.push({\r\n                    latex\r\n                })\r\n            } else if (this.type === 'edit') {\r\n                console.log('edit')\r\n                this.latexArray[this.currentIndex].latex = latex\r\n            }\r\n        },\r\n        getHtml() {\r\n            this.newHtml = this.editor.txt.html()\r\n            this.$refs.newHtml.innerHTML = this.newHtml\r\n        },\r\n        setHtml() {\r\n            // this.newHtml = ``\r\n            this.editor.txt.html(this.newHtml)\r\n        },\r\n        initEditor() {\r\n            this.editor = new E(this.$refs.editor)\r\n            if (!window.editor) {\r\n                window.editor = this.editor\r\n            }\r\n            const alertMenuFormulaKey = 'alertMenuFormulaKey'\r\n            this.editor.menus.extend(alertMenuFormulaKey, FormulaMenu)\r\n            this.editor.config.menus = this.editor.config.menus.concat(alertMenuFormulaKey)\r\n            this.editor.config.onchangeTimeout = 200; // 修改为 500ms\r\n            this.editor.config.zIndex = 9\r\n            this.editor.create()\r\n        },\r\n        listenMenuClick () {\r\n            window.addEventListener('addFormula', this.addMath, true)\r\n        },\r\n    },\r\n}\r\n</script>\r\n<style lang=\"less\">\r\n.newHtml {\r\n    border-collapse: collapse;\r\n}\r\n\r\n.newHtml th,\r\n.newHtml td {\r\n    height: 30px;\r\n    border: 1px solid #eee;\r\n}\r\n\r\n.w-e-text-container {\r\n    height: 290px !important;\r\n}\r\n\r\n#btn1 {\r\n    margin-top: 15px;\r\n}\r\n\r\n.testTable {\r\n    // position: absolute;\r\n    right: 15px;\r\n    width: 200px;\r\n    margin-top: 10px;\r\n    th, td {\r\n        border: 1px solid;\r\n        padding: 5px 10px;\r\n    }\r\n}\r\n</style>","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./About.vue?vue&type=template&id=420c2d53&\"\nimport script from \"./About.vue?vue&type=script&lang=js&\"\nexport * from \"./About.vue?vue&type=script&lang=js&\"\nimport style0 from \"./About.vue?vue&type=style&index=0&lang=less&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport About from '../views/About.vue'\n\nVue.use(VueRouter)\n\nconst routes = [\n  {\n    path: '/',\n    name: 'home',\n    component: About,\n  },\n]\n\nconst router = new VueRouter({\n  routes\n})\n\nexport default router\n","import Vue from 'vue'\nimport Vuex from 'vuex'\n\nVue.use(Vuex)\n\nexport default new Vuex.Store({\n  state: {\n  },\n  mutations: {\n  },\n  actions: {\n  },\n  modules: {\n  }\n})\n","import Vue from 'vue'\r\nimport App from './App.vue'\r\nimport router from './router'\r\nimport store from './store'\r\n\r\nimport {Modal} from 'ant-design-vue'\r\nimport 'ant-design-vue/lib/modal/style/css'\r\nVue.use(Modal)\r\nVue.prototype.$confirm = Modal.confirm\r\nVue.prototype.$info = Modal.info\r\n\r\nimport '@/assets/tableMergeCell/tableMergeCell.less'\r\nimport '@/assets/columnResizer/columnResizer.less'\r\n\r\nVue.config.productionTip = false\r\n\r\nnew Vue({\r\n  router,\r\n  store,\r\n  render: h => h(App)\r\n}).$mount('#app')\r\n","import mod from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./About.vue?vue&type=style&index=0&lang=less&\"","import mod from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!../node_modules/cache-loader/dist/cjs.js??ref--0-0!../node_modules/vue-loader/lib/index.js??vue-loader-options!./App.vue?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!./mathFormula.less?vue&type=style&index=0&lang=less&\"; export default mod; export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--10-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--10-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--10-oneOf-1-2!../../../node_modules/less-loader/dist/cjs.js??ref--10-oneOf-1-3!./mathFormula.less?vue&type=style&index=0&lang=less&\""],"sourceRoot":""}